

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Nov 15 15:31:07 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     7                           	psect	idataBANK3,global,class=CODE,space=0,delta=2,noexec
     8                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,space=0,delta=2
    19                           	psect	clrtext,global,class=CODE,space=0,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    23                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    34                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    36                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    37                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    38                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    39                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    43                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,space=0,delta=2
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    59                           	dabs	1,0x7E,2
    60     0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F887 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95     0004                     fsr             equ	4
    96     0004                     fsr0            equ	4
    97     0000                     indf            equ	0
    98     0000                     indf0           equ	0
    99     0002                     pc              equ	2
   100     0002                     pcl             equ	2
   101     000A                     pclath          equ	10
   102     0003                     status          equ	3
   103     0000                     INDF            equ	0	;# 
   104     0001                     TMR0            equ	1	;# 
   105     0002                     PCL             equ	2	;# 
   106     0003                     STATUS          equ	3	;# 
   107     0004                     FSR             equ	4	;# 
   108     0005                     PORTA           equ	5	;# 
   109     0006                     PORTB           equ	6	;# 
   110     0007                     PORTC           equ	7	;# 
   111     0008                     PORTD           equ	8	;# 
   112     0009                     PORTE           equ	9	;# 
   113     000A                     PCLATH          equ	10	;# 
   114     000B                     INTCON          equ	11	;# 
   115     000C                     PIR1            equ	12	;# 
   116     000D                     PIR2            equ	13	;# 
   117     000E                     TMR1            equ	14	;# 
   118     000E                     TMR1L           equ	14	;# 
   119     000F                     TMR1H           equ	15	;# 
   120     0010                     T1CON           equ	16	;# 
   121     0011                     TMR2            equ	17	;# 
   122     0012                     T2CON           equ	18	;# 
   123     0013                     SSPBUF          equ	19	;# 
   124     0014                     SSPCON          equ	20	;# 
   125     0015                     CCPR1           equ	21	;# 
   126     0015                     CCPR1L          equ	21	;# 
   127     0016                     CCPR1H          equ	22	;# 
   128     0017                     CCP1CON         equ	23	;# 
   129     0018                     RCSTA           equ	24	;# 
   130     0019                     TXREG           equ	25	;# 
   131     001A                     RCREG           equ	26	;# 
   132     001B                     CCPR2           equ	27	;# 
   133     001B                     CCPR2L          equ	27	;# 
   134     001C                     CCPR2H          equ	28	;# 
   135     001D                     CCP2CON         equ	29	;# 
   136     001E                     ADRESH          equ	30	;# 
   137     001F                     ADCON0          equ	31	;# 
   138     0081                     OPTION_REG      equ	129	;# 
   139     0085                     TRISA           equ	133	;# 
   140     0086                     TRISB           equ	134	;# 
   141     0087                     TRISC           equ	135	;# 
   142     0088                     TRISD           equ	136	;# 
   143     0089                     TRISE           equ	137	;# 
   144     008C                     PIE1            equ	140	;# 
   145     008D                     PIE2            equ	141	;# 
   146     008E                     PCON            equ	142	;# 
   147     008F                     OSCCON          equ	143	;# 
   148     0090                     OSCTUNE         equ	144	;# 
   149     0091                     SSPCON2         equ	145	;# 
   150     0092                     PR2             equ	146	;# 
   151     0093                     SSPADD          equ	147	;# 
   152     0093                     SSPMSK          equ	147	;# 
   153     0093                     MSK             equ	147	;# 
   154     0094                     SSPSTAT         equ	148	;# 
   155     0095                     WPUB            equ	149	;# 
   156     0096                     IOCB            equ	150	;# 
   157     0097                     VRCON           equ	151	;# 
   158     0098                     TXSTA           equ	152	;# 
   159     0099                     SPBRG           equ	153	;# 
   160     009A                     SPBRGH          equ	154	;# 
   161     009B                     PWM1CON         equ	155	;# 
   162     009C                     ECCPAS          equ	156	;# 
   163     009D                     PSTRCON         equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     0105                     WDTCON          equ	261	;# 
   167     0107                     CM1CON0         equ	263	;# 
   168     0108                     CM2CON0         equ	264	;# 
   169     0109                     CM2CON1         equ	265	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010C                     EEDAT           equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     0185                     SRCON           equ	389	;# 
   176     0187                     BAUDCTL         equ	391	;# 
   177     0188                     ANSEL           equ	392	;# 
   178     0189                     ANSELH          equ	393	;# 
   179     018C                     EECON1          equ	396	;# 
   180     018D                     EECON2          equ	397	;# 
   181     0000                     INDF            equ	0	;# 
   182     0001                     TMR0            equ	1	;# 
   183     0002                     PCL             equ	2	;# 
   184     0003                     STATUS          equ	3	;# 
   185     0004                     FSR             equ	4	;# 
   186     0005                     PORTA           equ	5	;# 
   187     0006                     PORTB           equ	6	;# 
   188     0007                     PORTC           equ	7	;# 
   189     0008                     PORTD           equ	8	;# 
   190     0009                     PORTE           equ	9	;# 
   191     000A                     PCLATH          equ	10	;# 
   192     000B                     INTCON          equ	11	;# 
   193     000C                     PIR1            equ	12	;# 
   194     000D                     PIR2            equ	13	;# 
   195     000E                     TMR1            equ	14	;# 
   196     000E                     TMR1L           equ	14	;# 
   197     000F                     TMR1H           equ	15	;# 
   198     0010                     T1CON           equ	16	;# 
   199     0011                     TMR2            equ	17	;# 
   200     0012                     T2CON           equ	18	;# 
   201     0013                     SSPBUF          equ	19	;# 
   202     0014                     SSPCON          equ	20	;# 
   203     0015                     CCPR1           equ	21	;# 
   204     0015                     CCPR1L          equ	21	;# 
   205     0016                     CCPR1H          equ	22	;# 
   206     0017                     CCP1CON         equ	23	;# 
   207     0018                     RCSTA           equ	24	;# 
   208     0019                     TXREG           equ	25	;# 
   209     001A                     RCREG           equ	26	;# 
   210     001B                     CCPR2           equ	27	;# 
   211     001B                     CCPR2L          equ	27	;# 
   212     001C                     CCPR2H          equ	28	;# 
   213     001D                     CCP2CON         equ	29	;# 
   214     001E                     ADRESH          equ	30	;# 
   215     001F                     ADCON0          equ	31	;# 
   216     0081                     OPTION_REG      equ	129	;# 
   217     0085                     TRISA           equ	133	;# 
   218     0086                     TRISB           equ	134	;# 
   219     0087                     TRISC           equ	135	;# 
   220     0088                     TRISD           equ	136	;# 
   221     0089                     TRISE           equ	137	;# 
   222     008C                     PIE1            equ	140	;# 
   223     008D                     PIE2            equ	141	;# 
   224     008E                     PCON            equ	142	;# 
   225     008F                     OSCCON          equ	143	;# 
   226     0090                     OSCTUNE         equ	144	;# 
   227     0091                     SSPCON2         equ	145	;# 
   228     0092                     PR2             equ	146	;# 
   229     0093                     SSPADD          equ	147	;# 
   230     0093                     SSPMSK          equ	147	;# 
   231     0093                     MSK             equ	147	;# 
   232     0094                     SSPSTAT         equ	148	;# 
   233     0095                     WPUB            equ	149	;# 
   234     0096                     IOCB            equ	150	;# 
   235     0097                     VRCON           equ	151	;# 
   236     0098                     TXSTA           equ	152	;# 
   237     0099                     SPBRG           equ	153	;# 
   238     009A                     SPBRGH          equ	154	;# 
   239     009B                     PWM1CON         equ	155	;# 
   240     009C                     ECCPAS          equ	156	;# 
   241     009D                     PSTRCON         equ	157	;# 
   242     009E                     ADRESL          equ	158	;# 
   243     009F                     ADCON1          equ	159	;# 
   244     0105                     WDTCON          equ	261	;# 
   245     0107                     CM1CON0         equ	263	;# 
   246     0108                     CM2CON0         equ	264	;# 
   247     0109                     CM2CON1         equ	265	;# 
   248     010C                     EEDATA          equ	268	;# 
   249     010C                     EEDAT           equ	268	;# 
   250     010D                     EEADR           equ	269	;# 
   251     010E                     EEDATH          equ	270	;# 
   252     010F                     EEADRH          equ	271	;# 
   253     0185                     SRCON           equ	389	;# 
   254     0187                     BAUDCTL         equ	391	;# 
   255     0188                     ANSEL           equ	392	;# 
   256     0189                     ANSELH          equ	393	;# 
   257     018C                     EECON1          equ	396	;# 
   258     018D                     EECON2          equ	397	;# 
   259     0000                     INDF            equ	0	;# 
   260     0001                     TMR0            equ	1	;# 
   261     0002                     PCL             equ	2	;# 
   262     0003                     STATUS          equ	3	;# 
   263     0004                     FSR             equ	4	;# 
   264     0005                     PORTA           equ	5	;# 
   265     0006                     PORTB           equ	6	;# 
   266     0007                     PORTC           equ	7	;# 
   267     0008                     PORTD           equ	8	;# 
   268     0009                     PORTE           equ	9	;# 
   269     000A                     PCLATH          equ	10	;# 
   270     000B                     INTCON          equ	11	;# 
   271     000C                     PIR1            equ	12	;# 
   272     000D                     PIR2            equ	13	;# 
   273     000E                     TMR1            equ	14	;# 
   274     000E                     TMR1L           equ	14	;# 
   275     000F                     TMR1H           equ	15	;# 
   276     0010                     T1CON           equ	16	;# 
   277     0011                     TMR2            equ	17	;# 
   278     0012                     T2CON           equ	18	;# 
   279     0013                     SSPBUF          equ	19	;# 
   280     0014                     SSPCON          equ	20	;# 
   281     0015                     CCPR1           equ	21	;# 
   282     0015                     CCPR1L          equ	21	;# 
   283     0016                     CCPR1H          equ	22	;# 
   284     0017                     CCP1CON         equ	23	;# 
   285     0018                     RCSTA           equ	24	;# 
   286     0019                     TXREG           equ	25	;# 
   287     001A                     RCREG           equ	26	;# 
   288     001B                     CCPR2           equ	27	;# 
   289     001B                     CCPR2L          equ	27	;# 
   290     001C                     CCPR2H          equ	28	;# 
   291     001D                     CCP2CON         equ	29	;# 
   292     001E                     ADRESH          equ	30	;# 
   293     001F                     ADCON0          equ	31	;# 
   294     0081                     OPTION_REG      equ	129	;# 
   295     0085                     TRISA           equ	133	;# 
   296     0086                     TRISB           equ	134	;# 
   297     0087                     TRISC           equ	135	;# 
   298     0088                     TRISD           equ	136	;# 
   299     0089                     TRISE           equ	137	;# 
   300     008C                     PIE1            equ	140	;# 
   301     008D                     PIE2            equ	141	;# 
   302     008E                     PCON            equ	142	;# 
   303     008F                     OSCCON          equ	143	;# 
   304     0090                     OSCTUNE         equ	144	;# 
   305     0091                     SSPCON2         equ	145	;# 
   306     0092                     PR2             equ	146	;# 
   307     0093                     SSPADD          equ	147	;# 
   308     0093                     SSPMSK          equ	147	;# 
   309     0093                     MSK             equ	147	;# 
   310     0094                     SSPSTAT         equ	148	;# 
   311     0095                     WPUB            equ	149	;# 
   312     0096                     IOCB            equ	150	;# 
   313     0097                     VRCON           equ	151	;# 
   314     0098                     TXSTA           equ	152	;# 
   315     0099                     SPBRG           equ	153	;# 
   316     009A                     SPBRGH          equ	154	;# 
   317     009B                     PWM1CON         equ	155	;# 
   318     009C                     ECCPAS          equ	156	;# 
   319     009D                     PSTRCON         equ	157	;# 
   320     009E                     ADRESL          equ	158	;# 
   321     009F                     ADCON1          equ	159	;# 
   322     0105                     WDTCON          equ	261	;# 
   323     0107                     CM1CON0         equ	263	;# 
   324     0108                     CM2CON0         equ	264	;# 
   325     0109                     CM2CON1         equ	265	;# 
   326     010C                     EEDATA          equ	268	;# 
   327     010C                     EEDAT           equ	268	;# 
   328     010D                     EEADR           equ	269	;# 
   329     010E                     EEDATH          equ	270	;# 
   330     010F                     EEADRH          equ	271	;# 
   331     0185                     SRCON           equ	389	;# 
   332     0187                     BAUDCTL         equ	391	;# 
   333     0188                     ANSEL           equ	392	;# 
   334     0189                     ANSELH          equ	393	;# 
   335     018C                     EECON1          equ	396	;# 
   336     018D                     EECON2          equ	397	;# 
   337     0000                     INDF            equ	0	;# 
   338     0001                     TMR0            equ	1	;# 
   339     0002                     PCL             equ	2	;# 
   340     0003                     STATUS          equ	3	;# 
   341     0004                     FSR             equ	4	;# 
   342     0005                     PORTA           equ	5	;# 
   343     0006                     PORTB           equ	6	;# 
   344     0007                     PORTC           equ	7	;# 
   345     0008                     PORTD           equ	8	;# 
   346     0009                     PORTE           equ	9	;# 
   347     000A                     PCLATH          equ	10	;# 
   348     000B                     INTCON          equ	11	;# 
   349     000C                     PIR1            equ	12	;# 
   350     000D                     PIR2            equ	13	;# 
   351     000E                     TMR1            equ	14	;# 
   352     000E                     TMR1L           equ	14	;# 
   353     000F                     TMR1H           equ	15	;# 
   354     0010                     T1CON           equ	16	;# 
   355     0011                     TMR2            equ	17	;# 
   356     0012                     T2CON           equ	18	;# 
   357     0013                     SSPBUF          equ	19	;# 
   358     0014                     SSPCON          equ	20	;# 
   359     0015                     CCPR1           equ	21	;# 
   360     0015                     CCPR1L          equ	21	;# 
   361     0016                     CCPR1H          equ	22	;# 
   362     0017                     CCP1CON         equ	23	;# 
   363     0018                     RCSTA           equ	24	;# 
   364     0019                     TXREG           equ	25	;# 
   365     001A                     RCREG           equ	26	;# 
   366     001B                     CCPR2           equ	27	;# 
   367     001B                     CCPR2L          equ	27	;# 
   368     001C                     CCPR2H          equ	28	;# 
   369     001D                     CCP2CON         equ	29	;# 
   370     001E                     ADRESH          equ	30	;# 
   371     001F                     ADCON0          equ	31	;# 
   372     0081                     OPTION_REG      equ	129	;# 
   373     0085                     TRISA           equ	133	;# 
   374     0086                     TRISB           equ	134	;# 
   375     0087                     TRISC           equ	135	;# 
   376     0088                     TRISD           equ	136	;# 
   377     0089                     TRISE           equ	137	;# 
   378     008C                     PIE1            equ	140	;# 
   379     008D                     PIE2            equ	141	;# 
   380     008E                     PCON            equ	142	;# 
   381     008F                     OSCCON          equ	143	;# 
   382     0090                     OSCTUNE         equ	144	;# 
   383     0091                     SSPCON2         equ	145	;# 
   384     0092                     PR2             equ	146	;# 
   385     0093                     SSPADD          equ	147	;# 
   386     0093                     SSPMSK          equ	147	;# 
   387     0093                     MSK             equ	147	;# 
   388     0094                     SSPSTAT         equ	148	;# 
   389     0095                     WPUB            equ	149	;# 
   390     0096                     IOCB            equ	150	;# 
   391     0097                     VRCON           equ	151	;# 
   392     0098                     TXSTA           equ	152	;# 
   393     0099                     SPBRG           equ	153	;# 
   394     009A                     SPBRGH          equ	154	;# 
   395     009B                     PWM1CON         equ	155	;# 
   396     009C                     ECCPAS          equ	156	;# 
   397     009D                     PSTRCON         equ	157	;# 
   398     009E                     ADRESL          equ	158	;# 
   399     009F                     ADCON1          equ	159	;# 
   400     0105                     WDTCON          equ	261	;# 
   401     0107                     CM1CON0         equ	263	;# 
   402     0108                     CM2CON0         equ	264	;# 
   403     0109                     CM2CON1         equ	265	;# 
   404     010C                     EEDATA          equ	268	;# 
   405     010C                     EEDAT           equ	268	;# 
   406     010D                     EEADR           equ	269	;# 
   407     010E                     EEDATH          equ	270	;# 
   408     010F                     EEADRH          equ	271	;# 
   409     0185                     SRCON           equ	389	;# 
   410     0187                     BAUDCTL         equ	391	;# 
   411     0188                     ANSEL           equ	392	;# 
   412     0189                     ANSELH          equ	393	;# 
   413     018C                     EECON1          equ	396	;# 
   414     018D                     EECON2          equ	397	;# 
   415     0000                     INDF            equ	0	;# 
   416     0001                     TMR0            equ	1	;# 
   417     0002                     PCL             equ	2	;# 
   418     0003                     STATUS          equ	3	;# 
   419     0004                     FSR             equ	4	;# 
   420     0005                     PORTA           equ	5	;# 
   421     0006                     PORTB           equ	6	;# 
   422     0007                     PORTC           equ	7	;# 
   423     0008                     PORTD           equ	8	;# 
   424     0009                     PORTE           equ	9	;# 
   425     000A                     PCLATH          equ	10	;# 
   426     000B                     INTCON          equ	11	;# 
   427     000C                     PIR1            equ	12	;# 
   428     000D                     PIR2            equ	13	;# 
   429     000E                     TMR1            equ	14	;# 
   430     000E                     TMR1L           equ	14	;# 
   431     000F                     TMR1H           equ	15	;# 
   432     0010                     T1CON           equ	16	;# 
   433     0011                     TMR2            equ	17	;# 
   434     0012                     T2CON           equ	18	;# 
   435     0013                     SSPBUF          equ	19	;# 
   436     0014                     SSPCON          equ	20	;# 
   437     0015                     CCPR1           equ	21	;# 
   438     0015                     CCPR1L          equ	21	;# 
   439     0016                     CCPR1H          equ	22	;# 
   440     0017                     CCP1CON         equ	23	;# 
   441     0018                     RCSTA           equ	24	;# 
   442     0019                     TXREG           equ	25	;# 
   443     001A                     RCREG           equ	26	;# 
   444     001B                     CCPR2           equ	27	;# 
   445     001B                     CCPR2L          equ	27	;# 
   446     001C                     CCPR2H          equ	28	;# 
   447     001D                     CCP2CON         equ	29	;# 
   448     001E                     ADRESH          equ	30	;# 
   449     001F                     ADCON0          equ	31	;# 
   450     0081                     OPTION_REG      equ	129	;# 
   451     0085                     TRISA           equ	133	;# 
   452     0086                     TRISB           equ	134	;# 
   453     0087                     TRISC           equ	135	;# 
   454     0088                     TRISD           equ	136	;# 
   455     0089                     TRISE           equ	137	;# 
   456     008C                     PIE1            equ	140	;# 
   457     008D                     PIE2            equ	141	;# 
   458     008E                     PCON            equ	142	;# 
   459     008F                     OSCCON          equ	143	;# 
   460     0090                     OSCTUNE         equ	144	;# 
   461     0091                     SSPCON2         equ	145	;# 
   462     0092                     PR2             equ	146	;# 
   463     0093                     SSPADD          equ	147	;# 
   464     0093                     SSPMSK          equ	147	;# 
   465     0093                     MSK             equ	147	;# 
   466     0094                     SSPSTAT         equ	148	;# 
   467     0095                     WPUB            equ	149	;# 
   468     0096                     IOCB            equ	150	;# 
   469     0097                     VRCON           equ	151	;# 
   470     0098                     TXSTA           equ	152	;# 
   471     0099                     SPBRG           equ	153	;# 
   472     009A                     SPBRGH          equ	154	;# 
   473     009B                     PWM1CON         equ	155	;# 
   474     009C                     ECCPAS          equ	156	;# 
   475     009D                     PSTRCON         equ	157	;# 
   476     009E                     ADRESL          equ	158	;# 
   477     009F                     ADCON1          equ	159	;# 
   478     0105                     WDTCON          equ	261	;# 
   479     0107                     CM1CON0         equ	263	;# 
   480     0108                     CM2CON0         equ	264	;# 
   481     0109                     CM2CON1         equ	265	;# 
   482     010C                     EEDATA          equ	268	;# 
   483     010C                     EEDAT           equ	268	;# 
   484     010D                     EEADR           equ	269	;# 
   485     010E                     EEDATH          equ	270	;# 
   486     010F                     EEADRH          equ	271	;# 
   487     0185                     SRCON           equ	389	;# 
   488     0187                     BAUDCTL         equ	391	;# 
   489     0188                     ANSEL           equ	392	;# 
   490     0189                     ANSELH          equ	393	;# 
   491     018C                     EECON1          equ	396	;# 
   492     018D                     EECON2          equ	397	;# 
   493     0000                     INDF            equ	0	;# 
   494     0001                     TMR0            equ	1	;# 
   495     0002                     PCL             equ	2	;# 
   496     0003                     STATUS          equ	3	;# 
   497     0004                     FSR             equ	4	;# 
   498     0005                     PORTA           equ	5	;# 
   499     0006                     PORTB           equ	6	;# 
   500     0007                     PORTC           equ	7	;# 
   501     0008                     PORTD           equ	8	;# 
   502     0009                     PORTE           equ	9	;# 
   503     000A                     PCLATH          equ	10	;# 
   504     000B                     INTCON          equ	11	;# 
   505     000C                     PIR1            equ	12	;# 
   506     000D                     PIR2            equ	13	;# 
   507     000E                     TMR1            equ	14	;# 
   508     000E                     TMR1L           equ	14	;# 
   509     000F                     TMR1H           equ	15	;# 
   510     0010                     T1CON           equ	16	;# 
   511     0011                     TMR2            equ	17	;# 
   512     0012                     T2CON           equ	18	;# 
   513     0013                     SSPBUF          equ	19	;# 
   514     0014                     SSPCON          equ	20	;# 
   515     0015                     CCPR1           equ	21	;# 
   516     0015                     CCPR1L          equ	21	;# 
   517     0016                     CCPR1H          equ	22	;# 
   518     0017                     CCP1CON         equ	23	;# 
   519     0018                     RCSTA           equ	24	;# 
   520     0019                     TXREG           equ	25	;# 
   521     001A                     RCREG           equ	26	;# 
   522     001B                     CCPR2           equ	27	;# 
   523     001B                     CCPR2L          equ	27	;# 
   524     001C                     CCPR2H          equ	28	;# 
   525     001D                     CCP2CON         equ	29	;# 
   526     001E                     ADRESH          equ	30	;# 
   527     001F                     ADCON0          equ	31	;# 
   528     0081                     OPTION_REG      equ	129	;# 
   529     0085                     TRISA           equ	133	;# 
   530     0086                     TRISB           equ	134	;# 
   531     0087                     TRISC           equ	135	;# 
   532     0088                     TRISD           equ	136	;# 
   533     0089                     TRISE           equ	137	;# 
   534     008C                     PIE1            equ	140	;# 
   535     008D                     PIE2            equ	141	;# 
   536     008E                     PCON            equ	142	;# 
   537     008F                     OSCCON          equ	143	;# 
   538     0090                     OSCTUNE         equ	144	;# 
   539     0091                     SSPCON2         equ	145	;# 
   540     0092                     PR2             equ	146	;# 
   541     0093                     SSPADD          equ	147	;# 
   542     0093                     SSPMSK          equ	147	;# 
   543     0093                     MSK             equ	147	;# 
   544     0094                     SSPSTAT         equ	148	;# 
   545     0095                     WPUB            equ	149	;# 
   546     0096                     IOCB            equ	150	;# 
   547     0097                     VRCON           equ	151	;# 
   548     0098                     TXSTA           equ	152	;# 
   549     0099                     SPBRG           equ	153	;# 
   550     009A                     SPBRGH          equ	154	;# 
   551     009B                     PWM1CON         equ	155	;# 
   552     009C                     ECCPAS          equ	156	;# 
   553     009D                     PSTRCON         equ	157	;# 
   554     009E                     ADRESL          equ	158	;# 
   555     009F                     ADCON1          equ	159	;# 
   556     0105                     WDTCON          equ	261	;# 
   557     0107                     CM1CON0         equ	263	;# 
   558     0108                     CM2CON0         equ	264	;# 
   559     0109                     CM2CON1         equ	265	;# 
   560     010C                     EEDATA          equ	268	;# 
   561     010C                     EEDAT           equ	268	;# 
   562     010D                     EEADR           equ	269	;# 
   563     010E                     EEDATH          equ	270	;# 
   564     010F                     EEADRH          equ	271	;# 
   565     0185                     SRCON           equ	389	;# 
   566     0187                     BAUDCTL         equ	391	;# 
   567     0188                     ANSEL           equ	392	;# 
   568     0189                     ANSELH          equ	393	;# 
   569     018C                     EECON1          equ	396	;# 
   570     018D                     EECON2          equ	397	;# 
   571                           
   572                           	psect	idataCOMMON
   573     07F9                     __pidataCOMMON:
   574                           
   575                           ;initializer for _key
   576     07F9  3430               	retlw	48
   577                           
   578                           	psect	idataBANK0
   579     07FA                     __pidataBANK0:
   580                           
   581                           ;initializer for _efecto
   582     07FA  3401               	retlw	1
   583                           
   584                           	psect	idataBANK1
   585     1766                     __pidataBANK1:
   586                           
   587                           ;initializer for keypad_getkey@F1398
   588     1766  3431               	retlw	49
   589     1767  3432               	retlw	50
   590     1768  3433               	retlw	51
   591     1769  3441               	retlw	65
   592     176A  3434               	retlw	52
   593     176B  3435               	retlw	53
   594     176C  3436               	retlw	54
   595     176D  3442               	retlw	66
   596     176E  3437               	retlw	55
   597     176F  3438               	retlw	56
   598     1770  3439               	retlw	57
   599     1771  3443               	retlw	67
   600     1772  342A               	retlw	42
   601     1773  3430               	retlw	48
   602     1774  3423               	retlw	35
   603     1775  3444               	retlw	68
   604                           
   605                           ;initializer for _velocidad
   606     1776  3401               	retlw	1
   607     1777  3400               	retlw	0
   608     1778  3400               	retlw	0
   609     1779  3400               	retlw	0
   610                           
   611                           	psect	idataBANK3
   612     177A                     __pidataBANK3:
   613                           
   614                           ;initializer for _customChars
   615     177A  3400               	retlw	0
   616     177B  340E               	retlw	14
   617     177C  340A               	retlw	10
   618     177D  340A               	retlw	10
   619     177E  341F               	retlw	31
   620     177F  341F               	retlw	31
   621     1780  341F               	retlw	31
   622     1781  3400               	retlw	0
   623     1782  3400               	retlw	0
   624     1783  3401               	retlw	1
   625     1784  3403               	retlw	3
   626     1785  3416               	retlw	22
   627     1786  341C               	retlw	28
   628     1787  3408               	retlw	8
   629     1788  3400               	retlw	0
   630     1789  3400               	retlw	0
   631     178A  3400               	retlw	0
   632     178B  3411               	retlw	17
   633     178C  340A               	retlw	10
   634     178D  3404               	retlw	4
   635     178E  3404               	retlw	4
   636     178F  340A               	retlw	10
   637     1790  3411               	retlw	17
   638     1791  3400               	retlw	0
   639                           
   640                           	psect	strings
   641     0800                     __pstrings:
   642     0800                     stringtab:
   643     0800                     __stringtab:
   644                           
   645                           ;	String table - string pointers are 1 byte each
   646     0800  1BFF               	btfsc	btemp+1,7
   647     0801  280A               	ljmp	stringcode
   648     0802  1383               	bcf	3,7
   649     0803  187F               	btfsc	btemp+1,0
   650     0804  1783               	bsf	3,7
   651     0805  0800               	movf	0,w
   652     0806  0A84               	incf	4,f
   653     0807  1903               	skipnz
   654     0808  0AFF               	incf	btemp+1,f
   655     0809  0008               	return
   656     080A                     stringcode:
   657     080A                     stringdir:
   658     080A  3008               	movlw	high stringdir
   659     080B  008A               	movwf	10
   660     080C  0804               	movf	4,w
   661     080D  0A84               	incf	4,f
   662     080E  0782               	addwf	2,f
   663     080F                     __stringbase:
   664     080F  3400               	retlw	0
   665     0810                     __end_of__stringtab:
   666     0810                     _password:
   667     0810  3432               	retlw	50
   668     0811  3430               	retlw	48
   669     0812  3432               	retlw	50
   670     0813  3431               	retlw	49
   671     0814  3431               	retlw	49
   672     0815  3400               	retlw	0
   673     0816                     __end_of_password:
   674     000E                     _TMR1           set	14
   675     0010                     _T1CON          set	16
   676     001E                     _ADRESH         set	30
   677     001F                     _ADCON0bits     set	31
   678     0005                     _PORTAbits      set	5
   679     0008                     _PORTD          set	8
   680     0009                     _PORTEbits      set	9
   681     000C                     _PIR1bits       set	12
   682     0006                     _PORTB          set	6
   683     0007                     _PORTCbits      set	7
   684     0007                     _PORTC          set	7
   685     0080                     _TMR1ON         set	128
   686     0060                     _TMR1IF         set	96
   687     005E                     _PEIE           set	94
   688     005F                     _GIE            set	95
   689     009E                     _ADRESL         set	158
   690     009F                     _ADCON1bits     set	159
   691     0088                     _TRISD          set	136
   692     0089                     _TRISE          set	137
   693     008F                     _OSCCON         set	143
   694     0085                     _TRISAbits      set	133
   695     0095                     _WPUB           set	149
   696     0081                     _OPTION_REGbits set	129
   697     0086                     _TRISB          set	134
   698     0087                     _TRISC          set	135
   699     0460                     _TMR1IE         set	1120
   700     043B                     _TRISC3         set	1083
   701     0188                     _ANSELbits      set	392
   702     0189                     _ANSELH         set	393
   703     0816                     STR_4:
   704     0816  3473               	retlw	115	;'s'
   705     0817  3469               	retlw	105	;'i'
   706     0818  3473               	retlw	115	;'s'
   707     0819  3474               	retlw	116	;'t'
   708     081A  3465               	retlw	101	;'e'
   709     081B  346D               	retlw	109	;'m'
   710     081C  3461               	retlw	97	;'a'
   711     081D  3420               	retlw	32	;' '
   712     081E  3462               	retlw	98	;'b'
   713     081F  346C               	retlw	108	;'l'
   714     0820  346F               	retlw	111	;'o'
   715     0821  3471               	retlw	113	;'q'
   716     0822  3475               	retlw	117	;'u'
   717     0823  3465               	retlw	101	;'e'
   718     0824  3461               	retlw	97	;'a'
   719     0825  3464               	retlw	100	;'d'
   720     0826  346F               	retlw	111	;'o'
   721     0827  3400               	retlw	0
   722     0828                     STR_1:
   723     0828  3450               	retlw	80	;'P'
   724     0829  3472               	retlw	114	;'r'
   725     082A  3465               	retlw	101	;'e'
   726     082B  3473               	retlw	115	;'s'
   727     082C  3473               	retlw	115	;'s'
   728     082D  3420               	retlw	32	;' '
   729     082E  3461               	retlw	97	;'a'
   730     082F  3420               	retlw	32	;' '
   731     0830  344B               	retlw	75	;'K'
   732     0831  3465               	retlw	101	;'e'
   733     0832  3479               	retlw	121	;'y'
   734     0833  3420               	retlw	32	;' '
   735     0834  3420               	retlw	32	;' '
   736     0835  3420               	retlw	32	;' '
   737     0836  3420               	retlw	32	;' '
   738     0837  3420               	retlw	32	;' '
   739     0838  3400               	retlw	0
   740     0839                     STR_3:
   741     0839  3443               	retlw	67	;'C'
   742     083A  346C               	retlw	108	;'l'
   743     083B  3461               	retlw	97	;'a'
   744     083C  3476               	retlw	118	;'v'
   745     083D  3465               	retlw	101	;'e'
   746     083E  3420               	retlw	32	;' '
   747     083F  3449               	retlw	73	;'I'
   748     0840  346E               	retlw	110	;'n'
   749     0841  3463               	retlw	99	;'c'
   750     0842  346F               	retlw	111	;'o'
   751     0843  3472               	retlw	114	;'r'
   752     0844  3472               	retlw	114	;'r'
   753     0845  3465               	retlw	101	;'e'
   754     0846  3463               	retlw	99	;'c'
   755     0847  3474               	retlw	116	;'t'
   756     0848  3461               	retlw	97	;'a'
   757     0849  3400               	retlw	0
   758     084A                     STR_6:
   759     084A  3454               	retlw	84	;'T'
   760     084B  3445               	retlw	69	;'E'
   761     084C  344D               	retlw	77	;'M'
   762     084D  3450               	retlw	80	;'P'
   763     084E  343A               	retlw	58	;':'
   764     084F  3420               	retlw	32	;' '
   765     0850  3425               	retlw	37	;'%'
   766     0851  3464               	retlw	100	;'d'
   767     0852  3420               	retlw	32	;' '
   768     0853  3420               	retlw	32	;' '
   769     0854  344C               	retlw	76	;'L'
   770     0855  343A               	retlw	58	;':'
   771     0856  3420               	retlw	32	;' '
   772     0857  3425               	retlw	37	;'%'
   773     0858  3464               	retlw	100	;'d'
   774     0859  3400               	retlw	0
   775     085A                     STR_2:
   776     085A  3443               	retlw	67	;'C'
   777     085B  346C               	retlw	108	;'l'
   778     085C  3461               	retlw	97	;'a'
   779     085D  3476               	retlw	118	;'v'
   780     085E  3465               	retlw	101	;'e'
   781     085F  3420               	retlw	32	;' '
   782     0860  3443               	retlw	67	;'C'
   783     0861  346F               	retlw	111	;'o'
   784     0862  3472               	retlw	114	;'r'
   785     0863  3472               	retlw	114	;'r'
   786     0864  3465               	retlw	101	;'e'
   787     0865  3463               	retlw	99	;'c'
   788     0866  3474               	retlw	116	;'t'
   789     0867  3461               	retlw	97	;'a'
   790     0868  3400               	retlw	0
   791     0869                     STR_8:
   792     0869  3450               	retlw	80	;'P'
   793     086A  3455               	retlw	85	;'U'
   794     086B  343A               	retlw	58	;':'
   795     086C  3420               	retlw	32	;' '
   796     086D  3425               	retlw	37	;'%'
   797     086E  3464               	retlw	100	;'d'
   798     086F  3420               	retlw	32	;' '
   799     0870  3420               	retlw	32	;' '
   800     0871  3456               	retlw	86	;'V'
   801     0872  3445               	retlw	69	;'E'
   802     0873  343A               	retlw	58	;':'
   803     0874  3420               	retlw	32	;' '
   804     0875  3425               	retlw	37	;'%'
   805     0876  3464               	retlw	100	;'d'
   806     0877  3400               	retlw	0
   807     0878                     STR_9:
   808     0878  3442               	retlw	66	;'B'
   809     0879  3449               	retlw	73	;'I'
   810     087A  3445               	retlw	69	;'E'
   811     087B  344E               	retlw	78	;'N'
   812     087C  3456               	retlw	86	;'V'
   813     087D  3445               	retlw	69	;'E'
   814     087E  344E               	retlw	78	;'N'
   815     087F  3449               	retlw	73	;'I'
   816     0880  3444               	retlw	68	;'D'
   817     0881  344F               	retlw	79	;'O'
   818     0882  3400               	retlw	0
   819     0883                     STR_5:
   820     0883  3441               	retlw	65	;'A'
   821     0884  344D               	retlw	77	;'M'
   822     0885  3442               	retlw	66	;'B'
   823     0886  3449               	retlw	73	;'I'
   824     0887  3445               	retlw	69	;'E'
   825     0888  344E               	retlw	78	;'N'
   826     0889  3454               	retlw	84	;'T'
   827     088A  3441               	retlw	65	;'A'
   828     088B  344C               	retlw	76	;'L'
   829     088C  3400               	retlw	0
   830     088D                     STR_7:
   831     088D  3445               	retlw	69	;'E'
   832     088E  3456               	retlw	86	;'V'
   833     088F  3445               	retlw	69	;'E'
   834     0890  344E               	retlw	78	;'N'
   835     0891  3454               	retlw	84	;'T'
   836     0892  344F               	retlw	79	;'O'
   837     0893  3453               	retlw	83	;'S'
   838     0894  3400               	retlw	0
   839                           
   840                           	psect	cinit
   841     0011                     start_initialization:	
   842                           ; #config settings
   843                           
   844     0011                     __initialization:
   845                           
   846                           ; Initialize objects allocated to BANK3
   847     0011  1783               	bsf	3,7	;select IRP bank2
   848     0012  30C8               	movlw	low (__pdataBANK3+24)
   849     0013  00FD               	movwf	btemp+-1
   850     0014  3017               	movlw	high __pidataBANK3
   851     0015  00FE               	movwf	btemp
   852     0016  307A               	movlw	low __pidataBANK3
   853     0017  00FF               	movwf	btemp+1
   854     0018  30B0               	movlw	low __pdataBANK3
   855     0019  0084               	movwf	4
   856     001A  160A  118A  2757  120A  118A  	fcall	init_ram0
   857                           
   858                           ; Initialize objects allocated to BANK1
   859     001F  1383               	bcf	3,7	;select IRP bank0
   860     0020  30E9               	movlw	low (__pdataBANK1+20)
   861     0021  00FD               	movwf	btemp+-1
   862     0022  3017               	movlw	high __pidataBANK1
   863     0023  00FE               	movwf	btemp
   864     0024  3066               	movlw	low __pidataBANK1
   865     0025  00FF               	movwf	btemp+1
   866     0026  30D5               	movlw	low __pdataBANK1
   867     0027  0084               	movwf	4
   868     0028  160A  118A  2757  120A  118A  	fcall	init_ram0
   869                           
   870                           ; Initialize objects allocated to BANK0
   871     002D  120A  118A  27FA  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   872     0032  00EF               	movwf	__pdataBANK0& (0+127)
   873                           
   874                           ; Initialize objects allocated to COMMON
   875     0033  120A  118A  27F9  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   876     0038  00FA               	movwf	__pdataCOMMON& (0+127)
   877                           
   878                           ; Clear objects allocated to BANK3
   879     0039  1783               	bsf	3,7	;select IRP bank2
   880     003A  3090               	movlw	low __pbssBANK3
   881     003B  0084               	movwf	4
   882     003C  30B0               	movlw	low (__pbssBANK3+32)
   883     003D  160A  118A  26F2  120A  118A  	fcall	clear_ram0
   884                           
   885                           ; Clear objects allocated to BANK1
   886     0042  1383               	bcf	3,7	;select IRP bank0
   887     0043  30A0               	movlw	low __pbssBANK1
   888     0044  0084               	movwf	4
   889     0045  30D5               	movlw	low (__pbssBANK1+53)
   890     0046  160A  118A  26F2  120A  118A  	fcall	clear_ram0
   891                           
   892                           ; Clear objects allocated to BANK0
   893     004B  3058               	movlw	low __pbssBANK0
   894     004C  0084               	movwf	4
   895     004D  306F               	movlw	low (__pbssBANK0+23)
   896     004E  160A  118A  26F2  120A  118A  	fcall	clear_ram0
   897                           
   898                           ; Clear objects allocated to COMMON
   899     0053  01F8               	clrf	__pbssCOMMON& (0+127)
   900     0054  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   901     0055                     end_of_initialization:	
   902                           ;End of C runtime variable initialization code
   903                           
   904     0055                     __end_of__initialization:
   905     0055  0183               	clrf	3
   906     0056  120A  118A  2B9B   	ljmp	_main	;jump to C main() function
   907                           
   908                           	psect	bssCOMMON
   909     0078                     __pbssCOMMON:
   910     0078                     _idx:
   911     0078                     	ds	1
   912     0079                     _estadoactual:
   913     0079                     	ds	1
   914                           
   915                           	psect	dataCOMMON
   916     007A                     __pdataCOMMON:
   917     007A                     _key:
   918     007A                     	ds	1
   919                           
   920                           	psect	bssBANK0
   921     0058                     __pbssBANK0:
   922     0058                     _flag_count_5sec:
   923     0058                     	ds	2
   924     005A                     _count_5sec:
   925     005A                     	ds	2
   926     005C                     _flag_count_3sec:
   927     005C                     	ds	2
   928     005E                     _count_3sec:
   929     005E                     	ds	2
   930     0060                     _sis_bloqueado:
   931     0060                     	ds	2
   932     0062                     _clavecorrecta:
   933     0062                     	ds	2
   934     0064                     _boton_reset:
   935     0064                     	ds	2
   936     0066                     _puerta_ventana:
   937     0066                     	ds	2
   938     0068                     _luz:
   939     0068                     	ds	2
   940     006A                     _temp:
   941     006A                     	ds	2
   942     006C                     _intentos:
   943     006C                     	ds	2
   944     006E                     _flags:
   945     006E                     	ds	1
   946                           
   947                           	psect	dataBANK0
   948     006F                     __pdataBANK0:
   949     006F                     _efecto:
   950     006F                     	ds	1
   951                           
   952                           	psect	bssBANK1
   953     00A0                     __pbssBANK1:
   954     00A0                     _width:
   955     00A0                     	ds	2
   956     00A2                     _prec:
   957     00A2                     	ds	2
   958     00A4                     _count_500ms:
   959     00A4                     	ds	2
   960     00A6                     _flag_count_500ms:
   961     00A6                     	ds	2
   962     00A8                     _flag_count_800ms:
   963     00A8                     	ds	2
   964     00AA                     _count_800ms:
   965     00AA                     	ds	2
   966     00AC                     _flag_count_10sec:
   967     00AC                     	ds	2
   968     00AE                     _count_10sec:
   969     00AE                     	ds	2
   970     00B0                     _StringTemperature:
   971     00B0                     	ds	32
   972     00D0                     _pass_user:
   973     00D0                     	ds	5
   974                           
   975                           	psect	dataBANK1
   976     00D5                     __pdataBANK1:
   977     00D5                     keypad_getkey@F1398:
   978     00D5                     	ds	16
   979     00E5                     _velocidad:
   980     00E5                     	ds	4
   981                           
   982                           	psect	bssBANK3
   983     0190                     __pbssBANK3:
   984     0190                     _dbuf:
   985     0190                     	ds	32
   986                           
   987                           	psect	dataBANK3
   988     01B0                     __pdataBANK3:
   989     01B0                     _customChars:
   990     01B0                     	ds	24
   991                           
   992                           	psect	inittext
   993     1753                     init_fetch0:	
   994                           ;	Called with low address in FSR and high address in W
   995                           
   996     1753  087E               	movf	btemp,w
   997     1754  008A               	movwf	10
   998     1755  087F               	movf	btemp+1,w
   999     1756  0082               	movwf	2
  1000     1757                     init_ram0:	
  1001                           ;Called with:
  1002                           ;	high address of idata address in btemp 
  1003                           ;	low address of idata address in btemp+1 
  1004                           ;	low address of data in FSR
  1005                           ;	high address + 1 of data in btemp-1
  1006                           
  1007     1757  160A  118A  2753  160A  118A  	fcall	init_fetch0
  1008     175C  0080               	movwf	0
  1009     175D  0A84               	incf	4,f
  1010     175E  0804               	movf	4,w
  1011     175F  067D               	xorwf	btemp+-1,w
  1012     1760  1903               	btfsc	3,2
  1013     1761  3400               	retlw	0
  1014     1762  0AFF               	incf	btemp+1,f
  1015     1763  1903               	btfsc	3,2
  1016     1764  0AFE               	incf	btemp,f
  1017     1765  2F57               	goto	init_ram0
  1018                           
  1019                           	psect	clrtext
  1020     16F2                     clear_ram0:	
  1021                           ;	Called with FSR containing the base address, and
  1022                           ;	W with the last address+1
  1023                           
  1024     16F2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1025     16F3                     clrloop0:
  1026     16F3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1027     16F4  0A84               	incf	4,f	;increment pointer
  1028     16F5  0604               	xorwf	4,w	;XOR with final address
  1029     16F6  1903               	btfsc	3,2	;have we reached the end yet?
  1030     16F7  3400               	retlw	0	;all done for this memory range, return
  1031     16F8  0604               	xorwf	4,w	;XOR again to restore value
  1032     16F9  2EF3               	goto	clrloop0	;do the next byte
  1033                           
  1034                           	psect	cstackCOMMON
  1035     0070                     __pcstackCOMMON:
  1036     0070                     ?_LCD_Command:
  1037     0070                     ?_adc_init:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040     0070                     ?_Timer1_start:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043     0070                     ?_putch:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046     0070                     ?_LCD_Init:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049     0070                     ?_LCD_Char:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052     0070                     ?_LCD_Clear:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055     0070                     ?_LCD_Load_Custom_Chars:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058     0070                     ?_keypad_init:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061     0070                     ?_keypad_getkey:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064     0070                     ?_Timer1_ISR:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067     0070                     ?_secuencia1:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070     0070                     ?_secuencia5:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073     0070                     ?_funcion_seguridad:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076     0070                     ?_funcion_monitoreo_ambiental:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079     0070                     ?_funcion_monitoreo_eventos:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082     0070                     ?_funcion_buzzer:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0070                     ?_main:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0070                     putch@c:	
  1089                           ; 2 bytes @ 0x0
  1090                           
  1091     0070                     ??_Timer1_ISR:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x0
  1096     0070                     	ds	3
  1097     0073                     ?_delay_ms_variable:
  1098     0073                     ?_strncmp:	
  1099                           ; 1 bytes @ 0x3
  1100                           
  1101     0073                     ?_adc_read:	
  1102                           ; 2 bytes @ 0x3
  1103                           
  1104     0073                     ?__Umul8_16:	
  1105                           ; 2 bytes @ 0x3
  1106                           
  1107     0073                     ?_fputc:	
  1108                           ; 2 bytes @ 0x3
  1109                           
  1110     0073                     ?___awdiv:	
  1111                           ; 2 bytes @ 0x3
  1112                           
  1113     0073                     ?___awmod:	
  1114                           ; 2 bytes @ 0x3
  1115                           
  1116     0073                     ?___xxtofl:	
  1117                           ; 2 bytes @ 0x3
  1118                           
  1119     0073                     __Umul8_16@multiplicand:	
  1120                           ; 4 bytes @ 0x3
  1121                           
  1122     0073                     strncmp@l:	
  1123                           ; 1 bytes @ 0x3
  1124                           
  1125     0073                     delay_ms_variable@ms:	
  1126                           ; 1 bytes @ 0x3
  1127                           
  1128     0073                     adc_read@channel:	
  1129                           ; 2 bytes @ 0x3
  1130                           
  1131     0073                     ___awdiv@divisor:	
  1132                           ; 2 bytes @ 0x3
  1133                           
  1134     0073                     ___awmod@divisor:	
  1135                           ; 2 bytes @ 0x3
  1136                           
  1137     0073                     fputc@c:	
  1138                           ; 2 bytes @ 0x3
  1139                           
  1140     0073                     ___xxtofl@val:	
  1141                           ; 2 bytes @ 0x3
  1142                           
  1143     0073                     ??_LCD_Command:	
  1144                           ; 4 bytes @ 0x3
  1145                           
  1146     0073                     ??_adc_init:	
  1147                           ; 1 bytes @ 0x3
  1148                           
  1149     0073                     ??_Timer1_start:	
  1150                           ; 1 bytes @ 0x3
  1151                           
  1152     0073                     ??_putch:	
  1153                           ; 1 bytes @ 0x3
  1154                           
  1155     0073                     ??_LCD_Char:	
  1156                           ; 1 bytes @ 0x3
  1157                           
  1158     0073                     ??_keypad_init:	
  1159                           ; 1 bytes @ 0x3
  1160                           
  1161     0073                     ??_keypad_getkey:	
  1162                           ; 1 bytes @ 0x3
  1163                           
  1164     0073                     ??_secuencia1:	
  1165                           ; 1 bytes @ 0x3
  1166                           
  1167     0073                     ??_secuencia5:	
  1168                           ; 1 bytes @ 0x3
  1169                           
  1170     0073                     ??_funcion_buzzer:	
  1171                           ; 1 bytes @ 0x3
  1172                           
  1173                           
  1174                           ; 1 bytes @ 0x3
  1175     0073                     	ds	1
  1176     0074                     strncmp@r:
  1177                           
  1178                           ; 1 bytes @ 0x4
  1179     0074                     	ds	1
  1180     0075                     LCD_Command@cmd:
  1181     0075                     LCD_Char@dat:	
  1182                           ; 1 bytes @ 0x5
  1183                           
  1184     0075                     adc_read@value_adc:	
  1185                           ; 1 bytes @ 0x5
  1186                           
  1187     0075                     ___awdiv@dividend:	
  1188                           ; 2 bytes @ 0x5
  1189                           
  1190     0075                     ___awmod@dividend:	
  1191                           ; 2 bytes @ 0x5
  1192                           
  1193     0075                     fputc@fp:	
  1194                           ; 2 bytes @ 0x5
  1195                           
  1196     0075                     strncmp@n:	
  1197                           ; 2 bytes @ 0x5
  1198                           
  1199     0075                     ??__Umul8_16:	
  1200                           ; 2 bytes @ 0x5
  1201                           
  1202     0075                     ??_delay_ms_variable:	
  1203                           ; 1 bytes @ 0x5
  1204                           
  1205                           
  1206                           ; 1 bytes @ 0x5
  1207     0075                     	ds	1
  1208     0076                     ?_LCD_String:
  1209     0076                     LCD_Load_Custom_Chars@j:	
  1210                           ; 1 bytes @ 0x6
  1211                           
  1212     0076                     LCD_String@msg:	
  1213                           ; 1 bytes @ 0x6
  1214                           
  1215     0076                     ??_LCD_Init:	
  1216                           ; 2 bytes @ 0x6
  1217                           
  1218     0076                     ??_LCD_Clear:	
  1219                           ; 1 bytes @ 0x6
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x6
  1223     0076                     	ds	1
  1224     0077                     LCD_Load_Custom_Chars@i:
  1225     0077                     vfprintf@cfmt:	
  1226                           ; 1 bytes @ 0x7
  1227                           
  1228     0077                     ??_vfprintf:	
  1229                           ; 1 bytes @ 0x7
  1230                           
  1231     0077                     ??___awdiv:	
  1232                           ; 1 bytes @ 0x7
  1233                           
  1234     0077                     ??___awmod:	
  1235                           ; 1 bytes @ 0x7
  1236                           
  1237                           
  1238                           ; 1 bytes @ 0x7
  1239     0077                     	ds	1
  1240     0078                     ??_LCD_String:
  1241     0078                     ??_LCD_String_xy:	
  1242                           ; 1 bytes @ 0x8
  1243                           
  1244                           
  1245                           	psect	cstackBANK0
  1246     0020                     __pcstackBANK0:	
  1247                           ; 1 bytes @ 0x8
  1248                           
  1249     0020                     ?_LCD_String_xy:
  1250     0020                     ?_blink_led:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253     0020                     LCD_String_xy@pos:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256     0020                     ___awdiv@counter:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259     0020                     ___awmod@counter:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262     0020                     blink_led@on_time:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265     0020                     secuencia1@i:	
  1266                           ; 2 bytes @ 0x0
  1267                           
  1268     0020                     secuencia5@i:	
  1269                           ; 2 bytes @ 0x0
  1270                           
  1271     0020                     __Umul8_16@product:	
  1272                           ; 2 bytes @ 0x0
  1273                           
  1274     0020                     keypad_getkey@letras:	
  1275                           ; 2 bytes @ 0x0
  1276                           
  1277     0020                     ??_strncmp:	
  1278                           ; 16 bytes @ 0x0
  1279                           
  1280     0020                     ??_adc_read:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283     0020                     ??_fputc:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286     0020                     ??_LCD_Load_Custom_Chars:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289     0020                     ??___xxtofl:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292                           
  1293                           ; 1 bytes @ 0x0
  1294     0020                     	ds	1
  1295     0021                     LCD_String_xy@msg:
  1296     0021                     ___awdiv@sign:	
  1297                           ; 1 bytes @ 0x1
  1298                           
  1299     0021                     ___awmod@sign:	
  1300                           ; 1 bytes @ 0x1
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x1
  1304     0021                     	ds	1
  1305     0022                     ?_abs:
  1306     0022                     LCD_String_xy@row:	
  1307                           ; 2 bytes @ 0x2
  1308                           
  1309     0022                     blink_led@off_time:	
  1310                           ; 1 bytes @ 0x2
  1311                           
  1312     0022                     secuencia1@var5:	
  1313                           ; 2 bytes @ 0x2
  1314                           
  1315     0022                     secuencia5@i_354:	
  1316                           ; 2 bytes @ 0x2
  1317                           
  1318     0022                     ___awdiv@quotient:	
  1319                           ; 2 bytes @ 0x2
  1320                           
  1321     0022                     __Umul8_16@word_mpld:	
  1322                           ; 2 bytes @ 0x2
  1323                           
  1324     0022                     abs@a:	
  1325                           ; 2 bytes @ 0x2
  1326                           
  1327                           
  1328                           ; 2 bytes @ 0x2
  1329     0022                     	ds	1
  1330     0023                     LCD_String_xy@location:
  1331                           
  1332                           ; 1 bytes @ 0x3
  1333     0023                     	ds	1
  1334     0024                     __Umul8_16@multiplier:
  1335     0024                     ___xxtofl@sign:	
  1336                           ; 1 bytes @ 0x4
  1337                           
  1338     0024                     blink_led@duration:	
  1339                           ; 1 bytes @ 0x4
  1340                           
  1341     0024                     secuencia1@var3:	
  1342                           ; 2 bytes @ 0x4
  1343                           
  1344     0024                     secuencia5@var12:	
  1345                           ; 2 bytes @ 0x4
  1346                           
  1347     0024                     ??_abs:	
  1348                           ; 2 bytes @ 0x4
  1349                           
  1350                           
  1351                           ; 1 bytes @ 0x4
  1352     0024                     	ds	1
  1353     0025                     ___xxtofl@exp:
  1354                           
  1355                           ; 1 bytes @ 0x5
  1356     0025                     	ds	1
  1357     0026                     secuencia1@var4:
  1358     0026                     secuencia5@var8:	
  1359                           ; 2 bytes @ 0x6
  1360                           
  1361     0026                     ___xxtofl@arg:	
  1362                           ; 2 bytes @ 0x6
  1363                           
  1364     0026                     ??_blink_led:	
  1365                           ; 4 bytes @ 0x6
  1366                           
  1367                           
  1368                           ; 1 bytes @ 0x6
  1369     0026                     	ds	2
  1370     0028                     blink_led@elapsed_time:
  1371     0028                     secuencia5@var7:	
  1372                           ; 2 bytes @ 0x8
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0x8
  1376     0028                     	ds	1
  1377     0029                     ?_vfpfcnvrt:
  1378     0029                     vfpfcnvrt@fp:	
  1379                           ; 1 bytes @ 0x9
  1380                           
  1381                           
  1382                           ; 2 bytes @ 0x9
  1383     0029                     	ds	1
  1384     002A                     ?___flmul:
  1385     002A                     blink_led@led:	
  1386                           ; 4 bytes @ 0xA
  1387                           
  1388     002A                     secuencia5@var1:	
  1389                           ; 1 bytes @ 0xA
  1390                           
  1391     002A                     ___flmul@b:	
  1392                           ; 2 bytes @ 0xA
  1393                           
  1394                           
  1395                           ; 4 bytes @ 0xA
  1396     002A                     	ds	1
  1397     002B                     vfpfcnvrt@fmt:
  1398                           
  1399                           ; 1 bytes @ 0xB
  1400     002B                     	ds	1
  1401     002C                     vfpfcnvrt@ap:
  1402     002C                     secuencia5@var2:	
  1403                           ; 1 bytes @ 0xC
  1404                           
  1405                           
  1406                           ; 2 bytes @ 0xC
  1407     002C                     	ds	1
  1408     002D                     ??_vfpfcnvrt:
  1409                           
  1410                           ; 1 bytes @ 0xD
  1411     002D                     	ds	1
  1412     002E                     secuencia5@var6:
  1413     002E                     ___flmul@a:	
  1414                           ; 2 bytes @ 0xE
  1415                           
  1416                           
  1417                           ; 4 bytes @ 0xE
  1418     002E                     	ds	1
  1419     002F                     vfpfcnvrt@done:
  1420                           
  1421                           ; 1 bytes @ 0xF
  1422     002F                     	ds	1
  1423     0030                     keypad_getkey@valor:
  1424     0030                     vfpfcnvrt@cp:	
  1425                           ; 1 bytes @ 0x10
  1426                           
  1427                           
  1428                           ; 1 bytes @ 0x10
  1429     0030                     	ds	1
  1430     0031                     keypad_getkey@i:
  1431     0031                     vfpfcnvrt@convarg:	
  1432                           ; 2 bytes @ 0x11
  1433                           
  1434                           
  1435                           ; 4 bytes @ 0x11
  1436     0031                     	ds	1
  1437     0032                     ??___flmul:
  1438                           
  1439                           ; 1 bytes @ 0x12
  1440     0032                     	ds	1
  1441     0033                     ??_funcion_seguridad:
  1442                           
  1443                           ; 1 bytes @ 0x13
  1444     0033                     	ds	2
  1445     0035                     vfpfcnvrt@c:
  1446                           
  1447                           ; 1 bytes @ 0x15
  1448     0035                     	ds	1
  1449     0036                     ?_vfprintf:
  1450     0036                     vfprintf@fp:	
  1451                           ; 2 bytes @ 0x16
  1452                           
  1453                           
  1454                           ; 2 bytes @ 0x16
  1455     0036                     	ds	1
  1456     0037                     ___flmul@sign:
  1457                           
  1458                           ; 1 bytes @ 0x17
  1459     0037                     	ds	1
  1460     0038                     vfprintf@fmt:
  1461     0038                     ___flmul@grs:	
  1462                           ; 1 bytes @ 0x18
  1463                           
  1464                           
  1465                           ; 4 bytes @ 0x18
  1466     0038                     	ds	1
  1467     0039                     vfprintf@ap:
  1468                           
  1469                           ; 1 bytes @ 0x19
  1470     0039                     	ds	1
  1471     003A                     ?_sprintf:
  1472     003A                     sprintf@s:	
  1473                           ; 2 bytes @ 0x1A
  1474                           
  1475                           
  1476                           ; 1 bytes @ 0x1A
  1477     003A                     	ds	1
  1478     003B                     sprintf@fmt:
  1479                           
  1480                           ; 1 bytes @ 0x1B
  1481     003B                     	ds	1
  1482     003C                     ___flmul@aexp:
  1483                           
  1484                           ; 1 bytes @ 0x1C
  1485     003C                     	ds	1
  1486     003D                     ___flmul@bexp:
  1487                           
  1488                           ; 1 bytes @ 0x1D
  1489     003D                     	ds	1
  1490     003E                     ___flmul@prod:
  1491                           
  1492                           ; 4 bytes @ 0x1E
  1493     003E                     	ds	2
  1494     0040                     ??_sprintf:
  1495                           
  1496                           ; 1 bytes @ 0x20
  1497     0040                     	ds	1
  1498     0041                     sprintf@ap:
  1499                           
  1500                           ; 1 bytes @ 0x21
  1501     0041                     	ds	1
  1502     0042                     ___flmul@temp:
  1503     0042                     sprintf@f:	
  1504                           ; 2 bytes @ 0x22
  1505                           
  1506                           
  1507                           ; 11 bytes @ 0x22
  1508     0042                     	ds	2
  1509     0044                     ?___fltol:
  1510     0044                     ___fltol@f1:	
  1511                           ; 4 bytes @ 0x24
  1512                           
  1513                           
  1514                           ; 4 bytes @ 0x24
  1515     0044                     	ds	4
  1516     0048                     ??___fltol:
  1517                           
  1518                           ; 1 bytes @ 0x28
  1519     0048                     	ds	4
  1520     004C                     ___fltol@sign1:
  1521                           
  1522                           ; 1 bytes @ 0x2C
  1523     004C                     	ds	1
  1524     004D                     ___fltol@exp1:
  1525     004D                     ??_funcion_monitoreo_eventos:	
  1526                           ; 1 bytes @ 0x2D
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0x2D
  1530     004D                     	ds	1
  1531     004E                     ??_funcion_monitoreo_ambiental:
  1532                           
  1533                           ; 1 bytes @ 0x2E
  1534     004E                     	ds	3
  1535     0051                     funcion_monitoreo_eventos@ir:
  1536     0051                     funcion_monitoreo_ambiental@temperatura:	
  1537                           ; 1 bytes @ 0x31
  1538                           
  1539                           
  1540                           ; 2 bytes @ 0x31
  1541     0051                     	ds	1
  1542     0052                     funcion_monitoreo_eventos@hall:
  1543                           
  1544                           ; 1 bytes @ 0x32
  1545     0052                     	ds	1
  1546     0053                     funcion_monitoreo_ambiental@value_adc:
  1547                           
  1548                           ; 2 bytes @ 0x33
  1549     0053                     	ds	2
  1550     0055                     ??_main:
  1551                           
  1552                           ; 1 bytes @ 0x35
  1553     0055                     	ds	3
  1554                           
  1555                           	psect	maintext
  1556     039B                     __pmaintext:	
  1557 ;;
  1558 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1559 ;;
  1560 ;; *************** function _main *****************
  1561 ;; Defined at:
  1562 ;;		line 305 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  2  290[None  ] int 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : B00/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1576 ;;      Params:         0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0
  1578 ;;      Temps:          0       3       0       0       0
  1579 ;;      Totals:         0       3       0       0       0
  1580 ;;Total ram usage:        3 bytes
  1581 ;; Hardware stack levels required when called: 7
  1582 ;; This function calls:
  1583 ;;		_LCD_Clear
  1584 ;;		_LCD_Init
  1585 ;;		_LCD_Load_Custom_Chars
  1586 ;;		_LCD_String_xy
  1587 ;;		_Timer1_start
  1588 ;;		_adc_init
  1589 ;;		_funcion_buzzer
  1590 ;;		_funcion_monitoreo_ambiental
  1591 ;;		_funcion_monitoreo_eventos
  1592 ;;		_funcion_seguridad
  1593 ;;		_keypad_init
  1594 ;;		_secuencia1
  1595 ;;		_secuencia5
  1596 ;; This function is called by:
  1597 ;;		Startup code after reset
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601     039B                     _main:	
  1602                           ;psect for function _main
  1603                           
  1604     039B                     l3627:	
  1605                           ;incstack = 0
  1606                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1607                           
  1608                           
  1609                           ;main.c: 306:     OSCCON = 0x71;
  1610     039B  3071               	movlw	113
  1611     039C  1683               	bsf	3,5	;RP0=1, select bank1
  1612     039D  1303               	bcf	3,6	;RP1=0, select bank1
  1613     039E  008F               	movwf	15	;volatile
  1614     039F                     l3629:
  1615                           
  1616                           ;main.c: 307:     LCD_Init();
  1617     039F  120A  158A  20D9  120A  118A  	fcall	_LCD_Init
  1618     03A4                     l3631:
  1619                           
  1620                           ;main.c: 308:     LCD_String_xy(0,0,"BIENVENIDO");
  1621     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1622     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1623     03A6  01A0               	clrf	LCD_String_xy@pos
  1624     03A7  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1625     03A8  00A1               	movwf	LCD_String_xy@msg
  1626     03A9  3000               	movlw	0
  1627     03AA  120A  158A  2103  120A  118A  	fcall	_LCD_String_xy
  1628     03AF                     l3633:
  1629                           
  1630                           ;main.c: 309:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1631     03AF  3015               	movlw	21
  1632     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1633     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1634     03B2  00D7               	movwf	??_main+2
  1635     03B3  304B               	movlw	75
  1636     03B4  00D6               	movwf	??_main+1
  1637     03B5  30BD               	movlw	189
  1638     03B6  00D5               	movwf	??_main
  1639     03B7                     u4187:
  1640     03B7  0BD5               	decfsz	??_main,f
  1641     03B8  2BB7               	goto	u4187
  1642     03B9  0BD6               	decfsz	??_main+1,f
  1643     03BA  2BB7               	goto	u4187
  1644     03BB  0BD7               	decfsz	??_main+2,f
  1645     03BC  2BB7               	goto	u4187
  1646     03BD  2BBE               	nop2
  1647     03BE                     l3635:
  1648                           
  1649                           ;main.c: 310:     LCD_Clear();
  1650     03BE  160A  118A  2730  120A  118A  	fcall	_LCD_Clear
  1651     03C3                     l3637:
  1652                           
  1653                           ;main.c: 312:     keypad_init();
  1654     03C3  160A  118A  2704  120A  118A  	fcall	_keypad_init
  1655     03C8                     l3639:
  1656                           
  1657                           ;main.c: 313:     LCD_Load_Custom_Chars();
  1658     03C8  120A  158A  21D4  120A  118A  	fcall	_LCD_Load_Custom_Chars
  1659     03CD                     l3641:
  1660                           
  1661                           ;main.c: 314:     adc_init();
  1662     03CD  160A  118A  2720  120A  118A  	fcall	_adc_init
  1663     03D2                     l3643:
  1664                           
  1665                           ;main.c: 316:     TRISE = 0;
  1666     03D2  1683               	bsf	3,5	;RP0=1, select bank1
  1667     03D3  1303               	bcf	3,6	;RP1=0, select bank1
  1668     03D4  0189               	clrf	9	;volatile
  1669     03D5                     l3645:
  1670                           
  1671                           ;main.c: 317:     TRISD = 0;
  1672     03D5  0188               	clrf	8	;volatile
  1673     03D6                     l3647:
  1674                           
  1675                           ;main.c: 318:     PORTD = 0;
  1676     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1677     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1678     03D8  0188               	clrf	8	;volatile
  1679     03D9                     l3649:
  1680                           
  1681                           ;main.c: 319:     TRISC3 = 1;
  1682     03D9  1683               	bsf	3,5	;RP0=1, select bank1
  1683     03DA  1303               	bcf	3,6	;RP1=0, select bank1
  1684     03DB  1587               	bsf	7,3	;volatile
  1685     03DC                     l3651:
  1686                           
  1687                           ;main.c: 320:     TRISAbits.TRISA0 = 1;
  1688     03DC  1405               	bsf	5,0	;volatile
  1689     03DD                     l3653:
  1690                           
  1691                           ;main.c: 321:     TRISAbits.TRISA1 = 1;
  1692     03DD  1485               	bsf	5,1	;volatile
  1693     03DE                     l3655:
  1694                           
  1695                           ;main.c: 323:     TRISAbits.TRISA2 = 1;
  1696     03DE  1505               	bsf	5,2	;volatile
  1697     03DF                     l3657:
  1698                           
  1699                           ;main.c: 324:     ANSELbits.ANS2 = 0;
  1700     03DF  1683               	bsf	3,5	;RP0=1, select bank3
  1701     03E0  1703               	bsf	3,6	;RP1=1, select bank3
  1702     03E1  1108               	bcf	8,2	;volatile
  1703     03E2                     l3659:
  1704                           
  1705                           ;main.c: 325:     TRISAbits.TRISA3 = 1;
  1706     03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1707     03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1708     03E4  1585               	bsf	5,3	;volatile
  1709     03E5                     l3661:
  1710                           
  1711                           ;main.c: 326:     ANSELbits.ANS3 = 0;
  1712     03E5  1683               	bsf	3,5	;RP0=1, select bank3
  1713     03E6  1703               	bsf	3,6	;RP1=1, select bank3
  1714     03E7  1188               	bcf	8,3	;volatile
  1715     03E8                     l3663:
  1716                           
  1717                           ;main.c: 329:     Timer1_start();
  1718     03E8  160A  118A  2711  120A  118A  	fcall	_Timer1_start
  1719     03ED  2C92               	goto	l3723
  1720     03EE                     l3665:
  1721                           
  1722                           ;main.c: 335:                 funcion_seguridad();
  1723     03EE  120A  118A  24B3  120A  118A  	fcall	_funcion_seguridad
  1724     03F3                     l3667:
  1725                           
  1726                           ;main.c: 336:                 if(clavecorrecta==1){
  1727     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1728     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1729     03F5  0362               	decf	_clavecorrecta,w
  1730     03F6  0463               	iorwf	_clavecorrecta+1,w
  1731     03F7  1D03               	btfss	3,2
  1732     03F8  2BFA               	goto	u4091
  1733     03F9  2BFB               	goto	u4090
  1734     03FA                     u4091:
  1735     03FA  2C02               	goto	l3673
  1736     03FB                     u4090:
  1737     03FB                     l3669:
  1738                           
  1739                           ;main.c: 337:                     count_5sec=0;
  1740     03FB  01DA               	clrf	_count_5sec
  1741     03FC  01DB               	clrf	_count_5sec+1
  1742                           
  1743                           ;main.c: 338:                     flag_count_5sec=0;
  1744     03FD  01D8               	clrf	_flag_count_5sec
  1745     03FE  01D9               	clrf	_flag_count_5sec+1
  1746     03FF                     l3671:
  1747                           
  1748                           ;main.c: 339:                     estadoactual = MONITOREO_AMBIENTAL;
  1749     03FF  3001               	movlw	1
  1750     0400  00F9               	movwf	_estadoactual
  1751                           
  1752                           ;main.c: 340:                 }else if(sis_bloqueado==1){
  1753     0401  2C92               	goto	l3723
  1754     0402                     l3673:
  1755     0402  0360               	decf	_sis_bloqueado,w
  1756     0403  0461               	iorwf	_sis_bloqueado+1,w
  1757     0404  1D03               	btfss	3,2
  1758     0405  2C07               	goto	u4101
  1759     0406  2C08               	goto	u4100
  1760     0407                     u4101:
  1761     0407  2C92               	goto	l292
  1762     0408                     u4100:
  1763     0408                     l3675:
  1764                           
  1765                           ;main.c: 341:                     estadoactual = BLOQUEADO;
  1766     0408  3005               	movlw	5
  1767     0409  00F9               	movwf	_estadoactual
  1768     040A  2C92               	goto	l3723
  1769     040B                     l298:	
  1770                           ;main.c: 344:             case MONITOREO_AMBIENTAL:
  1771                           
  1772                           
  1773                           ;main.c: 346:                 PORTAbits.RA5 = 0;
  1774     040B  1285               	bcf	5,5	;volatile
  1775     040C                     l3677:
  1776                           
  1777                           ;main.c: 348:                 funcion_monitoreo_ambiental();
  1778     040C  120A  158A  25C6  120A  118A  	fcall	_funcion_monitoreo_ambiental
  1779     0411                     l3679:
  1780                           
  1781                           ;main.c: 349:                 if(temp>37 && luz>480){
  1782     0411  1283               	bcf	3,5	;RP0=0, select bank0
  1783     0412  1303               	bcf	3,6	;RP1=0, select bank0
  1784     0413  086B               	movf	_temp+1,w
  1785     0414  3A80               	xorlw	128
  1786     0415  00FF               	movwf	btemp+1
  1787     0416  3080               	movlw	128
  1788     0417  027F               	subwf	btemp+1,w
  1789     0418  1D03               	skipz
  1790     0419  2C1C               	goto	u4115
  1791     041A  3026               	movlw	38
  1792     041B  026A               	subwf	_temp,w
  1793     041C                     u4115:
  1794     041C  1C03               	skipc
  1795     041D  2C1F               	goto	u4111
  1796     041E  2C20               	goto	u4110
  1797     041F                     u4111:
  1798     041F  2C32               	goto	l3687
  1799     0420                     u4110:
  1800     0420                     l3681:
  1801     0420  3001               	movlw	1
  1802     0421  1283               	bcf	3,5	;RP0=0, select bank0
  1803     0422  1303               	bcf	3,6	;RP1=0, select bank0
  1804     0423  0269               	subwf	_luz+1,w
  1805     0424  30E1               	movlw	225
  1806     0425  1903               	skipnz
  1807     0426  0268               	subwf	_luz,w
  1808     0427  1C03               	skipc
  1809     0428  2C2A               	goto	u4121
  1810     0429  2C2B               	goto	u4120
  1811     042A                     u4121:
  1812     042A  2C32               	goto	l3687
  1813     042B                     u4120:
  1814     042B                     l3683:
  1815                           
  1816                           ;main.c: 350:                     estadoactual = ALARMA;
  1817     042B  3003               	movlw	3
  1818     042C  00F9               	movwf	_estadoactual
  1819     042D                     l3685:
  1820                           
  1821                           ;main.c: 351:                     count_3sec=0;
  1822     042D  01DE               	clrf	_count_3sec
  1823     042E  01DF               	clrf	_count_3sec+1
  1824                           
  1825                           ;main.c: 352:                     flag_count_3sec=0;
  1826     042F  01DC               	clrf	_flag_count_3sec
  1827     0430  01DD               	clrf	_flag_count_3sec+1
  1828                           
  1829                           ;main.c: 353:                 }else if(flag_count_5sec == 1){
  1830     0431  2C92               	goto	l3723
  1831     0432                     l3687:
  1832     0432  1283               	bcf	3,5	;RP0=0, select bank0
  1833     0433  1303               	bcf	3,6	;RP1=0, select bank0
  1834     0434  0358               	decf	_flag_count_5sec,w
  1835     0435  0459               	iorwf	_flag_count_5sec+1,w
  1836     0436  1D03               	btfss	3,2
  1837     0437  2C39               	goto	u4131
  1838     0438  2C3A               	goto	u4130
  1839     0439                     u4131:
  1840     0439  2C92               	goto	l292
  1841     043A                     u4130:
  1842     043A                     l3689:
  1843                           
  1844                           ;main.c: 354:                     estadoactual = MONITOREO_EVENTOS;
  1845     043A  3002               	movlw	2
  1846     043B  00F9               	movwf	_estadoactual
  1847     043C                     l3691:
  1848                           
  1849                           ;main.c: 355:                     flag_count_3sec=0;
  1850     043C  01DC               	clrf	_flag_count_3sec
  1851     043D  01DD               	clrf	_flag_count_3sec+1
  1852                           
  1853                           ;main.c: 356:                     count_3sec=0;
  1854     043E  01DE               	clrf	_count_3sec
  1855     043F  01DF               	clrf	_count_3sec+1
  1856                           
  1857                           ;main.c: 357:                     flag_count_5sec=0;
  1858     0440  01D8               	clrf	_flag_count_5sec
  1859     0441  01D9               	clrf	_flag_count_5sec+1
  1860     0442  2C92               	goto	l3723
  1861     0443                     l3693:
  1862                           
  1863                           ;main.c: 361:                 funcion_monitoreo_eventos();
  1864     0443  120A  158A  239C  120A  118A  	fcall	_funcion_monitoreo_eventos
  1865     0448                     l3695:
  1866                           
  1867                           ;main.c: 362:                 if(puerta_ventana==1){
  1868     0448  1283               	bcf	3,5	;RP0=0, select bank0
  1869     0449  1303               	bcf	3,6	;RP1=0, select bank0
  1870     044A  0366               	decf	_puerta_ventana,w
  1871     044B  0467               	iorwf	_puerta_ventana+1,w
  1872     044C  1D03               	btfss	3,2
  1873     044D  2C4F               	goto	u4141
  1874     044E  2C50               	goto	u4140
  1875     044F                     u4141:
  1876     044F  2C53               	goto	l3699
  1877     0450                     u4140:
  1878     0450                     l3697:
  1879                           
  1880                           ;main.c: 363:                     estadoactual = ALERTA;
  1881     0450  3004               	movlw	4
  1882     0451  00F9               	movwf	_estadoactual
  1883                           
  1884                           ;main.c: 364:                 }else if(flag_count_3sec==1){
  1885     0452  2C92               	goto	l3723
  1886     0453                     l3699:
  1887     0453  035C               	decf	_flag_count_3sec,w
  1888     0454  045D               	iorwf	_flag_count_3sec+1,w
  1889     0455  1D03               	btfss	3,2
  1890     0456  2C58               	goto	u4151
  1891     0457  2C59               	goto	u4150
  1892     0458                     u4151:
  1893     0458  2C92               	goto	l292
  1894     0459                     u4150:
  1895     0459                     l3701:
  1896                           
  1897                           ;main.c: 365:                     count_5sec=0;
  1898     0459  01DA               	clrf	_count_5sec
  1899     045A  01DB               	clrf	_count_5sec+1
  1900     045B                     l3703:
  1901                           
  1902                           ;main.c: 366:                     estadoactual = MONITOREO_AMBIENTAL;
  1903     045B  3001               	movlw	1
  1904     045C  00F9               	movwf	_estadoactual
  1905                           
  1906                           ;main.c: 367:                     flag_count_3sec =0;
  1907     045D  01DC               	clrf	_flag_count_3sec
  1908     045E  01DD               	clrf	_flag_count_3sec+1
  1909     045F  2C92               	goto	l3723
  1910     0460                     l3705:
  1911                           
  1912                           ;main.c: 371:                 funcion_buzzer();
  1913     0460  160A  118A  26FA  120A  118A  	fcall	_funcion_buzzer
  1914     0465                     l3707:
  1915                           
  1916                           ;main.c: 372:                 if(flag_count_3sec==1){
  1917     0465  1283               	bcf	3,5	;RP0=0, select bank0
  1918     0466  1303               	bcf	3,6	;RP1=0, select bank0
  1919     0467  035C               	decf	_flag_count_3sec,w
  1920     0468  045D               	iorwf	_flag_count_3sec+1,w
  1921     0469  1D03               	btfss	3,2
  1922     046A  2C6C               	goto	u4161
  1923     046B  2C6D               	goto	u4160
  1924     046C                     u4161:
  1925     046C  2C92               	goto	l292
  1926     046D                     u4160:
  1927     046D                     l3709:
  1928                           
  1929                           ;main.c: 373:                     estadoactual = MONITOREO_AMBIENTAL;
  1930     046D  3001               	movlw	1
  1931     046E  00F9               	movwf	_estadoactual
  1932     046F                     l3711:
  1933                           
  1934                           ;main.c: 374:                     flag_count_3sec=0;
  1935     046F  01DC               	clrf	_flag_count_3sec
  1936     0470  01DD               	clrf	_flag_count_3sec+1
  1937                           
  1938                           ;main.c: 375:                     count_5sec=0;
  1939     0471  01DA               	clrf	_count_5sec
  1940     0472  01DB               	clrf	_count_5sec+1
  1941     0473  2C92               	goto	l3723
  1942     0474                     l3713:
  1943                           
  1944                           ;main.c: 379:                 boton_reset = PORTCbits.RC3;
  1945     0474  0C07               	rrf	7,w	;volatile
  1946     0475  00D5               	movwf	??_main
  1947     0476  0CD5               	rrf	??_main,f
  1948     0477  0C55               	rrf	??_main,w
  1949     0478  3901               	andlw	1
  1950     0479  00D6               	movwf	??_main+1
  1951     047A  01D7               	clrf	??_main+2
  1952     047B  0856               	movf	??_main+1,w
  1953     047C  00E4               	movwf	_boton_reset
  1954     047D  0857               	movf	??_main+2,w
  1955     047E  00E5               	movwf	_boton_reset+1
  1956                           
  1957                           ;main.c: 380:                 if(boton_reset==1){
  1958     047F  0364               	decf	_boton_reset,w
  1959     0480  0465               	iorwf	_boton_reset+1,w
  1960     0481  1D03               	btfss	3,2
  1961     0482  2C84               	goto	u4171
  1962     0483  2C85               	goto	u4170
  1963     0484                     u4171:
  1964     0484  2C92               	goto	l292
  1965     0485                     u4170:
  1966     0485                     l3715:
  1967                           
  1968                           ;main.c: 381:                     estadoactual = INIT;
  1969     0485  01F9               	clrf	_estadoactual
  1970     0486  2C92               	goto	l3723
  1971     0487                     l3717:
  1972                           
  1973                           ;main.c: 385:                 secuencia1();
  1974     0487  120A  158A  232A  120A  118A  	fcall	_secuencia1
  1975                           
  1976                           ;main.c: 386:                 secuencia5();
  1977     048C  120A  118A  26A5  120A  118A  	fcall	_secuencia5
  1978     0491  2C85               	goto	l3715
  1979     0492                     l292:
  1980     0492                     l3723:
  1981     0492  0879               	movf	_estadoactual,w
  1982     0493  1283               	bcf	3,5	;RP0=0, select bank0
  1983     0494  1303               	bcf	3,6	;RP1=0, select bank0
  1984     0495  00D5               	movwf	??_main
  1985     0496  01D6               	clrf	??_main+1
  1986                           
  1987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1988                           ; Switch size 1, requested type "simple"
  1989                           ; Number of cases is 1, Range of values is 0 to 0
  1990                           ; switch strategies available:
  1991                           ; Name         Instructions Cycles
  1992                           ; simple_byte            4     3 (average)
  1993                           ; direct_byte           11     8 (fixed)
  1994                           ; jumptable            260     6 (fixed)
  1995                           ;	Chosen strategy is simple_byte
  1996     0497  0856               	movf	??_main+1,w
  1997     0498  3A00               	xorlw	0	; case 0
  1998     0499  1903               	skipnz
  1999     049A  2C9C               	goto	l3761
  2000     049B  2C92               	goto	l3723
  2001     049C                     l3761:
  2002                           
  2003                           ; Switch size 1, requested type "simple"
  2004                           ; Number of cases is 6, Range of values is 0 to 5
  2005                           ; switch strategies available:
  2006                           ; Name         Instructions Cycles
  2007                           ; simple_byte           19    10 (average)
  2008                           ; direct_byte           26     8 (fixed)
  2009                           ; jumptable            260     6 (fixed)
  2010                           ;	Chosen strategy is simple_byte
  2011     049C  0855               	movf	??_main,w
  2012     049D  3A00               	xorlw	0	; case 0
  2013     049E  1903               	skipnz
  2014     049F  2BEE               	goto	l3665
  2015     04A0  3A01               	xorlw	1	; case 1
  2016     04A1  1903               	skipnz
  2017     04A2  2C0B               	goto	l298
  2018     04A3  3A03               	xorlw	3	; case 2
  2019     04A4  1903               	skipnz
  2020     04A5  2C43               	goto	l3693
  2021     04A6  3A01               	xorlw	1	; case 3
  2022     04A7  1903               	skipnz
  2023     04A8  2C60               	goto	l3705
  2024     04A9  3A07               	xorlw	7	; case 4
  2025     04AA  1903               	skipnz
  2026     04AB  2C74               	goto	l3713
  2027     04AC  3A01               	xorlw	1	; case 5
  2028     04AD  1903               	skipnz
  2029     04AE  2C87               	goto	l3717
  2030     04AF  2C92               	goto	l3723
  2031     04B0  120A  118A  280E   	ljmp	start
  2032     04B3                     __end_of_main:
  2033                           
  2034                           	psect	text1
  2035     06A5                     __ptext1:	
  2036 ;; *************** function _secuencia5 *****************
  2037 ;; Defined at:
  2038 ;;		line 176 in file "main.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  i               2    2[BANK0 ] int 
  2043 ;;  i               2    0[BANK0 ] int 
  2044 ;;  var6            2   14[BANK0 ] volatile unsigned int 
  2045 ;;  var2            2   12[BANK0 ] volatile unsigned int 
  2046 ;;  var1            2   10[BANK0 ] volatile unsigned int 
  2047 ;;  var7            2    8[BANK0 ] volatile unsigned int 
  2048 ;;  var8            2    6[BANK0 ] volatile unsigned int 
  2049 ;;  var12           2    4[BANK0 ] volatile unsigned int 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, btemp+1
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         0      16       0       0       0
  2061 ;;      Temps:          3       0       0       0       0
  2062 ;;      Totals:         3      16       0       0       0
  2063 ;;Total ram usage:       19 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073     06A5                     _secuencia5:	
  2074                           ;psect for function _secuencia5
  2075                           
  2076     06A5                     l2829:	
  2077                           ;incstack = 0
  2078                           ; Regs used in _secuencia5: [wreg+status,2+status,0+btemp+1]
  2079                           
  2080                           
  2081                           ;main.c: 177: volatile unsigned int var1=0xA0,var2=0x01,var12 = 0;
  2082     06A5  30A0               	movlw	160
  2083     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2084     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2085     06A8  00AA               	movwf	secuencia5@var1	;volatile
  2086     06A9  3000               	movlw	0
  2087     06AA  00AB               	movwf	secuencia5@var1+1	;volatile
  2088     06AB  3001               	movlw	1
  2089     06AC  00AC               	movwf	secuencia5@var2	;volatile
  2090     06AD  3000               	movlw	0
  2091     06AE  00AD               	movwf	secuencia5@var2+1	;volatile
  2092     06AF                     l2831:
  2093     06AF  01A4               	clrf	secuencia5@var12	;volatile
  2094     06B0  01A5               	clrf	secuencia5@var12+1	;volatile
  2095     06B1                     l2833:
  2096                           
  2097                           ;main.c: 178:     for (int i = 0; i < 2; i++) {
  2098     06B1  01A0               	clrf	secuencia5@i
  2099     06B2  01A1               	clrf	secuencia5@i+1
  2100     06B3                     l2839:
  2101                           
  2102                           ;main.c: 179:         var12 = var1 | var2;
  2103     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2104     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2105     06B5  082C               	movf	secuencia5@var2,w	;volatile
  2106     06B6  042A               	iorwf	secuencia5@var1,w	;volatile
  2107     06B7  00A4               	movwf	secuencia5@var12	;volatile
  2108     06B8  082D               	movf	secuencia5@var2+1,w	;volatile
  2109     06B9  042B               	iorwf	secuencia5@var1+1,w	;volatile
  2110     06BA  00A5               	movwf	secuencia5@var12+1	;volatile
  2111                           
  2112                           ;main.c: 180:         PORTD = (unsigned char)(var12);
  2113     06BB  0824               	movf	secuencia5@var12,w	;volatile
  2114     06BC  0088               	movwf	8	;volatile
  2115                           
  2116                           ;main.c: 181:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2117     06BD  3006               	movlw	6
  2118     06BE  00F5               	movwf	??_secuencia5+2
  2119     06BF  3013               	movlw	19
  2120     06C0  00F4               	movwf	??_secuencia5+1
  2121     06C1  30AD               	movlw	173
  2122     06C2  00F3               	movwf	??_secuencia5
  2123     06C3                     u4197:
  2124     06C3  0BF3               	decfsz	??_secuencia5,f
  2125     06C4  2EC3               	goto	u4197
  2126     06C5  0BF4               	decfsz	??_secuencia5+1,f
  2127     06C6  2EC3               	goto	u4197
  2128     06C7  0BF5               	decfsz	??_secuencia5+2,f
  2129     06C8  2EC3               	goto	u4197
  2130     06C9  2ECA               	nop2
  2131     06CA                     l2841:
  2132                           
  2133                           ;main.c: 182:         var1 = var1 >> 1;
  2134     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2135     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2136     06CC  082B               	movf	secuencia5@var1+1,w	;volatile
  2137     06CD  00F4               	movwf	??_secuencia5+1
  2138     06CE  082A               	movf	secuencia5@var1,w	;volatile
  2139     06CF  00F3               	movwf	??_secuencia5
  2140     06D0  1003               	clrc
  2141     06D1  0CF4               	rrf	??_secuencia5+1,f
  2142     06D2  0CF3               	rrf	??_secuencia5,f
  2143     06D3  0873               	movf	??_secuencia5,w
  2144     06D4  00AA               	movwf	secuencia5@var1	;volatile
  2145     06D5  0874               	movf	??_secuencia5+1,w
  2146     06D6  00AB               	movwf	secuencia5@var1+1	;volatile
  2147     06D7                     l2843:
  2148                           
  2149                           ;main.c: 183:         var2 = var2 << 1;
  2150     06D7  1003               	clrc
  2151     06D8  0D2C               	rlf	secuencia5@var2,w	;volatile
  2152     06D9  00AC               	movwf	secuencia5@var2	;volatile
  2153     06DA  0D2D               	rlf	secuencia5@var2+1,w	;volatile
  2154     06DB  00AD               	movwf	secuencia5@var2+1	;volatile
  2155     06DC                     l2845:
  2156                           
  2157                           ;main.c: 184:         var12 = var1 | var2;
  2158     06DC  082C               	movf	secuencia5@var2,w	;volatile
  2159     06DD  042A               	iorwf	secuencia5@var1,w	;volatile
  2160     06DE  00A4               	movwf	secuencia5@var12	;volatile
  2161     06DF  082D               	movf	secuencia5@var2+1,w	;volatile
  2162     06E0  042B               	iorwf	secuencia5@var1+1,w	;volatile
  2163     06E1  00A5               	movwf	secuencia5@var12+1	;volatile
  2164     06E2                     l2847:
  2165                           
  2166                           ;main.c: 185:         PORTD = (unsigned char)(var12);
  2167     06E2  0824               	movf	secuencia5@var12,w	;volatile
  2168     06E3  0088               	movwf	8	;volatile
  2169     06E4                     l2849:
  2170                           
  2171                           ;main.c: 186:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2172     06E4  3006               	movlw	6
  2173     06E5  00F5               	movwf	??_secuencia5+2
  2174     06E6  3013               	movlw	19
  2175     06E7  00F4               	movwf	??_secuencia5+1
  2176     06E8  30AD               	movlw	173
  2177     06E9  00F3               	movwf	??_secuencia5
  2178     06EA                     u4207:
  2179     06EA  0BF3               	decfsz	??_secuencia5,f
  2180     06EB  2EEA               	goto	u4207
  2181     06EC  0BF4               	decfsz	??_secuencia5+1,f
  2182     06ED  2EEA               	goto	u4207
  2183     06EE  0BF5               	decfsz	??_secuencia5+2,f
  2184     06EF  2EEA               	goto	u4207
  2185     06F0  2EF1               	nop2
  2186     06F1                     l2851:
  2187                           
  2188                           ;main.c: 187:         var12 = var1 | var2;
  2189     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2190     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2191     06F3  082C               	movf	secuencia5@var2,w	;volatile
  2192     06F4  042A               	iorwf	secuencia5@var1,w	;volatile
  2193     06F5  00A4               	movwf	secuencia5@var12	;volatile
  2194     06F6  082D               	movf	secuencia5@var2+1,w	;volatile
  2195     06F7  042B               	iorwf	secuencia5@var1+1,w	;volatile
  2196     06F8  00A5               	movwf	secuencia5@var12+1	;volatile
  2197     06F9                     l2853:
  2198                           
  2199                           ;main.c: 188:         var1 = var1 << 1;
  2200     06F9  1003               	clrc
  2201     06FA  0D2A               	rlf	secuencia5@var1,w	;volatile
  2202     06FB  00AA               	movwf	secuencia5@var1	;volatile
  2203     06FC  0D2B               	rlf	secuencia5@var1+1,w	;volatile
  2204     06FD  00AB               	movwf	secuencia5@var1+1	;volatile
  2205     06FE                     l2855:
  2206                           
  2207                           ;main.c: 189:         var2 = var2 << 1;
  2208     06FE  1003               	clrc
  2209     06FF  0D2C               	rlf	secuencia5@var2,w	;volatile
  2210     0700  00AC               	movwf	secuencia5@var2	;volatile
  2211     0701  0D2D               	rlf	secuencia5@var2+1,w	;volatile
  2212     0702  00AD               	movwf	secuencia5@var2+1	;volatile
  2213     0703                     l2857:
  2214                           
  2215                           ;main.c: 190:     }
  2216     0703  3001               	movlw	1
  2217     0704  07A0               	addwf	secuencia5@i,f
  2218     0705  1803               	skipnc
  2219     0706  0AA1               	incf	secuencia5@i+1,f
  2220     0707  3000               	movlw	0
  2221     0708  07A1               	addwf	secuencia5@i+1,f
  2222     0709                     l2859:
  2223     0709  0821               	movf	secuencia5@i+1,w
  2224     070A  3A80               	xorlw	128
  2225     070B  00FF               	movwf	btemp+1
  2226     070C  3080               	movlw	128
  2227     070D  027F               	subwf	btemp+1,w
  2228     070E  1D03               	skipz
  2229     070F  2F12               	goto	u3135
  2230     0710  3002               	movlw	2
  2231     0711  0220               	subwf	secuencia5@i,w
  2232     0712                     u3135:
  2233     0712  1C03               	skipc
  2234     0713  2F15               	goto	u3131
  2235     0714  2F16               	goto	u3130
  2236     0715                     u3131:
  2237     0715  2EB3               	goto	l2839
  2238     0716                     u3130:
  2239     0716                     l2861:
  2240                           
  2241                           ;main.c: 191:        volatile unsigned int var6=0xA0,var7=0x08,var8 = 0;
  2242     0716  30A0               	movlw	160
  2243     0717  1283               	bcf	3,5	;RP0=0, select bank0
  2244     0718  1303               	bcf	3,6	;RP1=0, select bank0
  2245     0719  00AE               	movwf	secuencia5@var6	;volatile
  2246     071A  3000               	movlw	0
  2247     071B  00AF               	movwf	secuencia5@var6+1	;volatile
  2248     071C  3008               	movlw	8
  2249     071D  00A8               	movwf	secuencia5@var7	;volatile
  2250     071E  3000               	movlw	0
  2251     071F  00A9               	movwf	secuencia5@var7+1	;volatile
  2252     0720                     l2863:
  2253     0720  01A6               	clrf	secuencia5@var8	;volatile
  2254     0721  01A7               	clrf	secuencia5@var8+1	;volatile
  2255     0722                     l2865:
  2256                           
  2257                           ;main.c: 192:     for (int i = 0; i < 2; i++){
  2258     0722  01A2               	clrf	secuencia5@i_354
  2259     0723  01A3               	clrf	secuencia5@i_354+1
  2260     0724                     l2871:
  2261                           
  2262                           ;main.c: 193:         var8 = var6 | var7;
  2263     0724  1283               	bcf	3,5	;RP0=0, select bank0
  2264     0725  1303               	bcf	3,6	;RP1=0, select bank0
  2265     0726  0828               	movf	secuencia5@var7,w	;volatile
  2266     0727  042E               	iorwf	secuencia5@var6,w	;volatile
  2267     0728  00A6               	movwf	secuencia5@var8	;volatile
  2268     0729  0829               	movf	secuencia5@var7+1,w	;volatile
  2269     072A  042F               	iorwf	secuencia5@var6+1,w	;volatile
  2270     072B  00A7               	movwf	secuencia5@var8+1	;volatile
  2271                           
  2272                           ;main.c: 194:         PORTD = (unsigned char)(var8);
  2273     072C  0826               	movf	secuencia5@var8,w	;volatile
  2274     072D  0088               	movwf	8	;volatile
  2275                           
  2276                           ;main.c: 195:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2277     072E  3006               	movlw	6
  2278     072F  00F5               	movwf	??_secuencia5+2
  2279     0730  3013               	movlw	19
  2280     0731  00F4               	movwf	??_secuencia5+1
  2281     0732  30AD               	movlw	173
  2282     0733  00F3               	movwf	??_secuencia5
  2283     0734                     u4217:
  2284     0734  0BF3               	decfsz	??_secuencia5,f
  2285     0735  2F34               	goto	u4217
  2286     0736  0BF4               	decfsz	??_secuencia5+1,f
  2287     0737  2F34               	goto	u4217
  2288     0738  0BF5               	decfsz	??_secuencia5+2,f
  2289     0739  2F34               	goto	u4217
  2290     073A  2F3B               	nop2
  2291     073B                     l2873:
  2292                           
  2293                           ;main.c: 196:         var6 = var6 >> 1;
  2294     073B  1283               	bcf	3,5	;RP0=0, select bank0
  2295     073C  1303               	bcf	3,6	;RP1=0, select bank0
  2296     073D  082F               	movf	secuencia5@var6+1,w	;volatile
  2297     073E  00F4               	movwf	??_secuencia5+1
  2298     073F  082E               	movf	secuencia5@var6,w	;volatile
  2299     0740  00F3               	movwf	??_secuencia5
  2300     0741  1003               	clrc
  2301     0742  0CF4               	rrf	??_secuencia5+1,f
  2302     0743  0CF3               	rrf	??_secuencia5,f
  2303     0744  0873               	movf	??_secuencia5,w
  2304     0745  00AE               	movwf	secuencia5@var6	;volatile
  2305     0746  0874               	movf	??_secuencia5+1,w
  2306     0747  00AF               	movwf	secuencia5@var6+1	;volatile
  2307     0748                     l2875:
  2308                           
  2309                           ;main.c: 197:         var7 = var7 >> 1;
  2310     0748  0829               	movf	secuencia5@var7+1,w	;volatile
  2311     0749  00F4               	movwf	??_secuencia5+1
  2312     074A  0828               	movf	secuencia5@var7,w	;volatile
  2313     074B  00F3               	movwf	??_secuencia5
  2314     074C  1003               	clrc
  2315     074D  0CF4               	rrf	??_secuencia5+1,f
  2316     074E  0CF3               	rrf	??_secuencia5,f
  2317     074F  0873               	movf	??_secuencia5,w
  2318     0750  00A8               	movwf	secuencia5@var7	;volatile
  2319     0751  0874               	movf	??_secuencia5+1,w
  2320     0752  00A9               	movwf	secuencia5@var7+1	;volatile
  2321                           
  2322                           ;main.c: 198:         var8 = var6 | var7;
  2323     0753  0828               	movf	secuencia5@var7,w	;volatile
  2324     0754  042E               	iorwf	secuencia5@var6,w	;volatile
  2325     0755  00A6               	movwf	secuencia5@var8	;volatile
  2326     0756  0829               	movf	secuencia5@var7+1,w	;volatile
  2327     0757  042F               	iorwf	secuencia5@var6+1,w	;volatile
  2328     0758  00A7               	movwf	secuencia5@var8+1	;volatile
  2329                           
  2330                           ;main.c: 199:         PORTD = (unsigned char)(var8);
  2331     0759  0826               	movf	secuencia5@var8,w	;volatile
  2332     075A  0088               	movwf	8	;volatile
  2333                           
  2334                           ;main.c: 200:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2335     075B  3006               	movlw	6
  2336     075C  00F5               	movwf	??_secuencia5+2
  2337     075D  3013               	movlw	19
  2338     075E  00F4               	movwf	??_secuencia5+1
  2339     075F  30AD               	movlw	173
  2340     0760  00F3               	movwf	??_secuencia5
  2341     0761                     u4227:
  2342     0761  0BF3               	decfsz	??_secuencia5,f
  2343     0762  2F61               	goto	u4227
  2344     0763  0BF4               	decfsz	??_secuencia5+1,f
  2345     0764  2F61               	goto	u4227
  2346     0765  0BF5               	decfsz	??_secuencia5+2,f
  2347     0766  2F61               	goto	u4227
  2348     0767  2F68               	nop2
  2349                           
  2350                           ;main.c: 201:         var8 = var6 | var6;
  2351     0768  1283               	bcf	3,5	;RP0=0, select bank0
  2352     0769  1303               	bcf	3,6	;RP1=0, select bank0
  2353     076A  082E               	movf	secuencia5@var6,w	;volatile
  2354     076B  042E               	iorwf	secuencia5@var6,w	;volatile
  2355     076C  00A6               	movwf	secuencia5@var8	;volatile
  2356     076D  082F               	movf	secuencia5@var6+1,w	;volatile
  2357     076E  042F               	iorwf	secuencia5@var6+1,w	;volatile
  2358     076F  00A7               	movwf	secuencia5@var8+1	;volatile
  2359                           
  2360                           ;main.c: 202:         var6 = var6 << 1;
  2361     0770  1003               	clrc
  2362     0771  0D2E               	rlf	secuencia5@var6,w	;volatile
  2363     0772  00AE               	movwf	secuencia5@var6	;volatile
  2364     0773  0D2F               	rlf	secuencia5@var6+1,w	;volatile
  2365     0774  00AF               	movwf	secuencia5@var6+1	;volatile
  2366     0775                     l2877:
  2367                           
  2368                           ;main.c: 203:         var7 = var7 >> 1;
  2369     0775  0829               	movf	secuencia5@var7+1,w	;volatile
  2370     0776  00F4               	movwf	??_secuencia5+1
  2371     0777  0828               	movf	secuencia5@var7,w	;volatile
  2372     0778  00F3               	movwf	??_secuencia5
  2373     0779  1003               	clrc
  2374     077A  0CF4               	rrf	??_secuencia5+1,f
  2375     077B  0CF3               	rrf	??_secuencia5,f
  2376     077C  0873               	movf	??_secuencia5,w
  2377     077D  00A8               	movwf	secuencia5@var7	;volatile
  2378     077E  0874               	movf	??_secuencia5+1,w
  2379     077F  00A9               	movwf	secuencia5@var7+1	;volatile
  2380     0780                     l2879:
  2381                           
  2382                           ;main.c: 204:     }
  2383     0780  3001               	movlw	1
  2384     0781  07A2               	addwf	secuencia5@i_354,f
  2385     0782  1803               	skipnc
  2386     0783  0AA3               	incf	secuencia5@i_354+1,f
  2387     0784  3000               	movlw	0
  2388     0785  07A3               	addwf	secuencia5@i_354+1,f
  2389     0786                     l2881:
  2390     0786  0823               	movf	secuencia5@i_354+1,w
  2391     0787  3A80               	xorlw	128
  2392     0788  00FF               	movwf	btemp+1
  2393     0789  3080               	movlw	128
  2394     078A  027F               	subwf	btemp+1,w
  2395     078B  1D03               	skipz
  2396     078C  2F8F               	goto	u3145
  2397     078D  3002               	movlw	2
  2398     078E  0222               	subwf	secuencia5@i_354,w
  2399     078F                     u3145:
  2400     078F  1C03               	skipc
  2401     0790  2F92               	goto	u3141
  2402     0791  2F93               	goto	u3140
  2403     0792                     u3141:
  2404     0792  2F24               	goto	l2871
  2405     0793                     u3140:
  2406     0793                     l266:
  2407     0793  0008               	return
  2408     0794                     __end_of_secuencia5:
  2409                           
  2410                           	psect	text2
  2411     0B2A                     __ptext2:	
  2412 ;; *************** function _secuencia1 *****************
  2413 ;; Defined at:
  2414 ;;		line 153 in file "main.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  i               2    0[BANK0 ] int 
  2419 ;;  var4            2    6[BANK0 ] volatile unsigned int 
  2420 ;;  var3            2    4[BANK0 ] volatile unsigned int 
  2421 ;;  var5            2    2[BANK0 ] volatile unsigned int 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, btemp+1
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2431 ;;      Params:         0       0       0       0       0
  2432 ;;      Locals:         0       8       0       0       0
  2433 ;;      Temps:          3       0       0       0       0
  2434 ;;      Totals:         3       8       0       0       0
  2435 ;;Total ram usage:       11 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 1
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445     0B2A                     _secuencia1:	
  2446                           ;psect for function _secuencia1
  2447                           
  2448     0B2A                     l2797:	
  2449                           ;incstack = 0
  2450                           ; Regs used in _secuencia1: [wreg+status,2+status,0+btemp+1]
  2451                           
  2452                           
  2453                           ;main.c: 154: volatile unsigned int var3 = 0xA0,var4 = 0x01,var5 = 0;
  2454     0B2A  30A0               	movlw	160
  2455     0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  2456     0B2C  1303               	bcf	3,6	;RP1=0, select bank0
  2457     0B2D  00A4               	movwf	secuencia1@var3	;volatile
  2458     0B2E  3000               	movlw	0
  2459     0B2F  00A5               	movwf	secuencia1@var3+1	;volatile
  2460     0B30  3001               	movlw	1
  2461     0B31  00A6               	movwf	secuencia1@var4	;volatile
  2462     0B32  3000               	movlw	0
  2463     0B33  00A7               	movwf	secuencia1@var4+1	;volatile
  2464     0B34                     l2799:
  2465     0B34  01A2               	clrf	secuencia1@var5	;volatile
  2466     0B35  01A3               	clrf	secuencia1@var5+1	;volatile
  2467     0B36                     l2801:
  2468                           
  2469                           ;main.c: 155: for (int i = 0; i < 2; i++) {
  2470     0B36  01A0               	clrf	secuencia1@i
  2471     0B37  01A1               	clrf	secuencia1@i+1
  2472     0B38                     l2807:
  2473                           
  2474                           ;main.c: 156:         var5 = var3 | var4;
  2475     0B38  1283               	bcf	3,5	;RP0=0, select bank0
  2476     0B39  1303               	bcf	3,6	;RP1=0, select bank0
  2477     0B3A  0826               	movf	secuencia1@var4,w	;volatile
  2478     0B3B  0424               	iorwf	secuencia1@var3,w	;volatile
  2479     0B3C  00A2               	movwf	secuencia1@var5	;volatile
  2480     0B3D  0827               	movf	secuencia1@var4+1,w	;volatile
  2481     0B3E  0425               	iorwf	secuencia1@var3+1,w	;volatile
  2482     0B3F  00A3               	movwf	secuencia1@var5+1	;volatile
  2483                           
  2484                           ;main.c: 157:         PORTD = (unsigned char)(var5);
  2485     0B40  0822               	movf	secuencia1@var5,w	;volatile
  2486     0B41  0088               	movwf	8	;volatile
  2487                           
  2488                           ;main.c: 158:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2489     0B42  3006               	movlw	6
  2490     0B43  00F5               	movwf	??_secuencia1+2
  2491     0B44  3013               	movlw	19
  2492     0B45  00F4               	movwf	??_secuencia1+1
  2493     0B46  30AD               	movlw	173
  2494     0B47  00F3               	movwf	??_secuencia1
  2495     0B48                     u4237:
  2496     0B48  0BF3               	decfsz	??_secuencia1,f
  2497     0B49  2B48               	goto	u4237
  2498     0B4A  0BF4               	decfsz	??_secuencia1+1,f
  2499     0B4B  2B48               	goto	u4237
  2500     0B4C  0BF5               	decfsz	??_secuencia1+2,f
  2501     0B4D  2B48               	goto	u4237
  2502     0B4E  2B4F               	nop2
  2503     0B4F                     l2809:
  2504                           
  2505                           ;main.c: 161:         var3 = var3 >> 1;
  2506     0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  2507     0B50  1303               	bcf	3,6	;RP1=0, select bank0
  2508     0B51  0825               	movf	secuencia1@var3+1,w	;volatile
  2509     0B52  00F4               	movwf	??_secuencia1+1
  2510     0B53  0824               	movf	secuencia1@var3,w	;volatile
  2511     0B54  00F3               	movwf	??_secuencia1
  2512     0B55  1003               	clrc
  2513     0B56  0CF4               	rrf	??_secuencia1+1,f
  2514     0B57  0CF3               	rrf	??_secuencia1,f
  2515     0B58  0873               	movf	??_secuencia1,w
  2516     0B59  00A4               	movwf	secuencia1@var3	;volatile
  2517     0B5A  0874               	movf	??_secuencia1+1,w
  2518     0B5B  00A5               	movwf	secuencia1@var3+1	;volatile
  2519     0B5C                     l2811:
  2520                           
  2521                           ;main.c: 162:         var4 = var4 << 1;
  2522     0B5C  1003               	clrc
  2523     0B5D  0D26               	rlf	secuencia1@var4,w	;volatile
  2524     0B5E  00A6               	movwf	secuencia1@var4	;volatile
  2525     0B5F  0D27               	rlf	secuencia1@var4+1,w	;volatile
  2526     0B60  00A7               	movwf	secuencia1@var4+1	;volatile
  2527     0B61                     l2813:
  2528                           
  2529                           ;main.c: 165:         var5 = var3 | var4;
  2530     0B61  0826               	movf	secuencia1@var4,w	;volatile
  2531     0B62  0424               	iorwf	secuencia1@var3,w	;volatile
  2532     0B63  00A2               	movwf	secuencia1@var5	;volatile
  2533     0B64  0827               	movf	secuencia1@var4+1,w	;volatile
  2534     0B65  0425               	iorwf	secuencia1@var3+1,w	;volatile
  2535     0B66  00A3               	movwf	secuencia1@var5+1	;volatile
  2536     0B67                     l2815:
  2537                           
  2538                           ;main.c: 166:         PORTD = (unsigned char)(var5);
  2539     0B67  0822               	movf	secuencia1@var5,w	;volatile
  2540     0B68  0088               	movwf	8	;volatile
  2541     0B69                     l2817:
  2542                           
  2543                           ;main.c: 167:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2544     0B69  3006               	movlw	6
  2545     0B6A  00F5               	movwf	??_secuencia1+2
  2546     0B6B  3013               	movlw	19
  2547     0B6C  00F4               	movwf	??_secuencia1+1
  2548     0B6D  30AD               	movlw	173
  2549     0B6E  00F3               	movwf	??_secuencia1
  2550     0B6F                     u4247:
  2551     0B6F  0BF3               	decfsz	??_secuencia1,f
  2552     0B70  2B6F               	goto	u4247
  2553     0B71  0BF4               	decfsz	??_secuencia1+1,f
  2554     0B72  2B6F               	goto	u4247
  2555     0B73  0BF5               	decfsz	??_secuencia1+2,f
  2556     0B74  2B6F               	goto	u4247
  2557     0B75  2B76               	nop2
  2558     0B76                     l2819:
  2559                           
  2560                           ;main.c: 170:         var5 = var3 | var4;
  2561     0B76  1283               	bcf	3,5	;RP0=0, select bank0
  2562     0B77  1303               	bcf	3,6	;RP1=0, select bank0
  2563     0B78  0826               	movf	secuencia1@var4,w	;volatile
  2564     0B79  0424               	iorwf	secuencia1@var3,w	;volatile
  2565     0B7A  00A2               	movwf	secuencia1@var5	;volatile
  2566     0B7B  0827               	movf	secuencia1@var4+1,w	;volatile
  2567     0B7C  0425               	iorwf	secuencia1@var3+1,w	;volatile
  2568     0B7D  00A3               	movwf	secuencia1@var5+1	;volatile
  2569     0B7E                     l2821:
  2570                           
  2571                           ;main.c: 171:         var3 = var3 << 1;
  2572     0B7E  1003               	clrc
  2573     0B7F  0D24               	rlf	secuencia1@var3,w	;volatile
  2574     0B80  00A4               	movwf	secuencia1@var3	;volatile
  2575     0B81  0D25               	rlf	secuencia1@var3+1,w	;volatile
  2576     0B82  00A5               	movwf	secuencia1@var3+1	;volatile
  2577     0B83                     l2823:
  2578                           
  2579                           ;main.c: 172:         var4 = var4 << 1;
  2580     0B83  1003               	clrc
  2581     0B84  0D26               	rlf	secuencia1@var4,w	;volatile
  2582     0B85  00A6               	movwf	secuencia1@var4	;volatile
  2583     0B86  0D27               	rlf	secuencia1@var4+1,w	;volatile
  2584     0B87  00A7               	movwf	secuencia1@var4+1	;volatile
  2585     0B88                     l2825:
  2586                           
  2587                           ;main.c: 173:     }
  2588     0B88  3001               	movlw	1
  2589     0B89  07A0               	addwf	secuencia1@i,f
  2590     0B8A  1803               	skipnc
  2591     0B8B  0AA1               	incf	secuencia1@i+1,f
  2592     0B8C  3000               	movlw	0
  2593     0B8D  07A1               	addwf	secuencia1@i+1,f
  2594     0B8E                     l2827:
  2595     0B8E  0821               	movf	secuencia1@i+1,w
  2596     0B8F  3A80               	xorlw	128
  2597     0B90  00FF               	movwf	btemp+1
  2598     0B91  3080               	movlw	128
  2599     0B92  027F               	subwf	btemp+1,w
  2600     0B93  1D03               	skipz
  2601     0B94  2B97               	goto	u3125
  2602     0B95  3002               	movlw	2
  2603     0B96  0220               	subwf	secuencia1@i,w
  2604     0B97                     u3125:
  2605     0B97  1C03               	skipc
  2606     0B98  2B9A               	goto	u3121
  2607     0B99  2B9B               	goto	u3120
  2608     0B9A                     u3121:
  2609     0B9A  2B38               	goto	l2807
  2610     0B9B                     u3120:
  2611     0B9B                     l259:
  2612     0B9B  0008               	return
  2613     0B9C                     __end_of_secuencia1:
  2614                           
  2615                           	psect	text3
  2616     1704                     __ptext3:	
  2617 ;; *************** function _keypad_init *****************
  2618 ;; Defined at:
  2619 ;;		line 38 in file "KEYPAD.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647     1704                     _keypad_init:	
  2648                           ;psect for function _keypad_init
  2649                           
  2650     1704                     l2789:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  2653                           
  2654                           
  2655                           ;KEYPAD.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  2656     1704  30F0               	movlw	240
  2657     1705  1683               	bsf	3,5	;RP0=1, select bank1
  2658     1706  1303               	bcf	3,6	;RP1=0, select bank1
  2659     1707  0586               	andwf	6,f	;volatile
  2660                           
  2661                           ;KEYPAD.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  2662     1708  30F0               	movlw	240
  2663     1709  0486               	iorwf	6,f	;volatile
  2664     170A                     l2791:
  2665                           
  2666                           ;KEYPAD.c: 42:     OPTION_REGbits.nRBPU = 0;
  2667     170A  1381               	bcf	1,7	;volatile
  2668     170B                     l2793:
  2669                           
  2670                           ;KEYPAD.c: 43:     WPUB = 0xFF;
  2671     170B  30FF               	movlw	255
  2672     170C  0095               	movwf	21	;volatile
  2673     170D                     l2795:
  2674                           
  2675                           ;KEYPAD.c: 44:     ANSELH = 0;
  2676     170D  1683               	bsf	3,5	;RP0=1, select bank3
  2677     170E  1703               	bsf	3,6	;RP1=1, select bank3
  2678     170F  0189               	clrf	9	;volatile
  2679     1710                     l59:
  2680     1710  0008               	return
  2681     1711                     __end_of_keypad_init:
  2682                           
  2683                           	psect	text4
  2684     04B3                     __ptext4:	
  2685 ;; *************** function _funcion_seguridad *****************
  2686 ;; Defined at:
  2687 ;;		line 207 in file "main.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2701 ;;      Params:         0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0
  2703 ;;      Temps:          0       3       0       0       0
  2704 ;;      Totals:         0       3       0       0       0
  2705 ;;Total ram usage:        3 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 4
  2708 ;; This function calls:
  2709 ;;		_LCD_Char
  2710 ;;		_LCD_Clear
  2711 ;;		_LCD_Command
  2712 ;;		_LCD_String_xy
  2713 ;;		_blink_led
  2714 ;;		_keypad_getkey
  2715 ;;		_strncmp
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721     04B3                     _funcion_seguridad:	
  2722                           ;psect for function _funcion_seguridad
  2723                           
  2724     04B3                     l3519:	
  2725                           ;incstack = 0
  2726                           ; Regs used in _funcion_seguridad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2727                           
  2728                           
  2729                           ;main.c: 208:     LCD_Clear();
  2730     04B3  160A  118A  2730  120A  118A  	fcall	_LCD_Clear
  2731     04B8                     l3521:
  2732                           
  2733                           ;main.c: 210:     LCD_String_xy(0,0,"Press a Key     ");
  2734     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2735     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2736     04BA  01A0               	clrf	LCD_String_xy@pos
  2737     04BB  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2738     04BC  00A1               	movwf	LCD_String_xy@msg
  2739     04BD  3000               	movlw	0
  2740     04BE  120A  158A  2103  120A  118A  	fcall	_LCD_String_xy
  2741     04C3                     l3523:
  2742                           
  2743                           ;main.c: 211:         LCD_Command(0xc0);
  2744     04C3  30C0               	movlw	192
  2745     04C4  120A  158A  212F  120A  118A  	fcall	_LCD_Command
  2746     04C9                     l269:	
  2747                           ;main.c: 212:         do {
  2748                           
  2749                           
  2750                           ;main.c: 213:                 key = keypad_getkey();
  2751     04C9  120A  158A  271F  120A  118A  	fcall	_keypad_getkey
  2752     04CE  00FA               	movwf	_key
  2753     04CF                     l3525:
  2754                           
  2755                           ;main.c: 214:                 if (key != 0) {
  2756     04CF  087A               	movf	_key,w
  2757     04D0  1903               	btfsc	3,2
  2758     04D1  2CD3               	goto	u4031
  2759     04D2  2CD4               	goto	u4030
  2760     04D3                     u4031:
  2761     04D3  2CE2               	goto	l3533
  2762     04D4                     u4030:
  2763     04D4                     l3527:
  2764                           
  2765                           ;main.c: 215:                     LCD_Char('*');
  2766     04D4  302A               	movlw	42
  2767     04D5  120A  158A  2165  120A  118A  	fcall	_LCD_Char
  2768     04DA                     l3529:
  2769                           
  2770                           ;main.c: 216:                     pass_user[idx++] = key;
  2771     04DA  0878               	movf	_idx,w
  2772     04DB  3ED0               	addlw	(low (_pass_user| 0))& (0+255)
  2773     04DC  0084               	movwf	4
  2774     04DD  087A               	movf	_key,w
  2775     04DE  1383               	bcf	3,7	;select IRP bank1
  2776     04DF  0080               	movwf	0
  2777     04E0                     l3531:
  2778     04E0  3001               	movlw	1
  2779     04E1  07F8               	addwf	_idx,f
  2780     04E2                     l3533:
  2781                           
  2782                           ;main.c: 219:         }while(idx < 5);
  2783     04E2  3005               	movlw	5
  2784     04E3  0278               	subwf	_idx,w
  2785     04E4  1C03               	skipc
  2786     04E5  2CE7               	goto	u4041
  2787     04E6  2CE8               	goto	u4040
  2788     04E7                     u4041:
  2789     04E7  2CC9               	goto	l269
  2790     04E8                     u4040:
  2791     04E8                     l3535:
  2792                           
  2793                           ;main.c: 221:         if(strncmp(pass_user,password,4)==0){
  2794     04E8  30D0               	movlw	(low (_pass_user| 0))& (0+255)
  2795     04E9  00F3               	movwf	strncmp@l
  2796     04EA  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
  2797     04EB  00F4               	movwf	strncmp@r
  2798     04EC  3004               	movlw	4
  2799     04ED  00F5               	movwf	strncmp@n
  2800     04EE  3000               	movlw	0
  2801     04EF  00F6               	movwf	strncmp@n+1
  2802     04F0  120A  158A  226B  120A  118A  	fcall	_strncmp
  2803     04F5  0873               	movf	?_strncmp,w
  2804     04F6  0474               	iorwf	?_strncmp+1,w
  2805     04F7  1D03               	btfss	3,2
  2806     04F8  2CFA               	goto	u4051
  2807     04F9  2CFB               	goto	u4050
  2808     04FA                     u4051:
  2809     04FA  2D2E               	goto	l3549
  2810     04FB                     u4050:
  2811     04FB                     l3537:
  2812                           
  2813                           ;main.c: 222:             LCD_Clear();
  2814     04FB  160A  118A  2730  120A  118A  	fcall	_LCD_Clear
  2815     0500                     l3539:
  2816                           
  2817                           ;main.c: 223:             LCD_String_xy(0,0,"Clave Correcta");
  2818     0500  1283               	bcf	3,5	;RP0=0, select bank0
  2819     0501  1303               	bcf	3,6	;RP1=0, select bank0
  2820     0502  01A0               	clrf	LCD_String_xy@pos
  2821     0503  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2822     0504  00A1               	movwf	LCD_String_xy@msg
  2823     0505  3000               	movlw	0
  2824     0506  120A  158A  2103  120A  118A  	fcall	_LCD_String_xy
  2825     050B                     l3541:
  2826                           
  2827                           ;main.c: 224:             LCD_Char(1);
  2828     050B  3001               	movlw	1
  2829     050C  120A  158A  2165  120A  118A  	fcall	_LCD_Char
  2830     0511                     l3543:
  2831                           
  2832                           ;main.c: 225:             blink_led('V', 500, 500, 3000);
  2833     0511  30F4               	movlw	244
  2834     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2835     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2836     0514  00A0               	movwf	blink_led@on_time
  2837     0515  3001               	movlw	1
  2838     0516  00A1               	movwf	blink_led@on_time+1
  2839     0517  30F4               	movlw	244
  2840     0518  00A2               	movwf	blink_led@off_time
  2841     0519  3001               	movlw	1
  2842     051A  00A3               	movwf	blink_led@off_time+1
  2843     051B  30B8               	movlw	184
  2844     051C  00A4               	movwf	blink_led@duration
  2845     051D  300B               	movlw	11
  2846     051E  00A5               	movwf	blink_led@duration+1
  2847     051F  3056               	movlw	86
  2848     0520  120A  158A  22C7  120A  118A  	fcall	_blink_led
  2849     0525                     l3545:
  2850                           
  2851                           ;main.c: 226:             intentos = 0;
  2852     0525  1283               	bcf	3,5	;RP0=0, select bank0
  2853     0526  1303               	bcf	3,6	;RP1=0, select bank0
  2854     0527  01EC               	clrf	_intentos
  2855     0528  01ED               	clrf	_intentos+1
  2856     0529                     l3547:
  2857                           
  2858                           ;main.c: 228:             clavecorrecta=1;
  2859     0529  3001               	movlw	1
  2860     052A  00E2               	movwf	_clavecorrecta
  2861     052B  3000               	movlw	0
  2862     052C  00E3               	movwf	_clavecorrecta+1
  2863                           
  2864                           ;main.c: 229:         }
  2865     052D  2D9F               	goto	l3577
  2866     052E                     l3549:
  2867                           
  2868                           ;main.c: 231:             LCD_Clear();
  2869     052E  160A  118A  2730  120A  118A  	fcall	_LCD_Clear
  2870     0533                     l3551:
  2871                           
  2872                           ;main.c: 232:             LCD_String_xy(0,0,"Clave Incorrecta");
  2873     0533  1283               	bcf	3,5	;RP0=0, select bank0
  2874     0534  1303               	bcf	3,6	;RP1=0, select bank0
  2875     0535  01A0               	clrf	LCD_String_xy@pos
  2876     0536  302A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2877     0537  00A1               	movwf	LCD_String_xy@msg
  2878     0538  3000               	movlw	0
  2879     0539  120A  158A  2103  120A  118A  	fcall	_LCD_String_xy
  2880     053E                     l3553:
  2881                           
  2882                           ;main.c: 233:             LCD_Char(2);
  2883     053E  3002               	movlw	2
  2884     053F  120A  158A  2165  120A  118A  	fcall	_LCD_Char
  2885     0544                     l3555:
  2886                           
  2887                           ;main.c: 234:             clavecorrecta=0;
  2888     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2889     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2890     0546  01E2               	clrf	_clavecorrecta
  2891     0547  01E3               	clrf	_clavecorrecta+1
  2892     0548                     l3557:
  2893                           
  2894                           ;main.c: 235:             sis_bloqueado=0;
  2895     0548  01E0               	clrf	_sis_bloqueado
  2896     0549  01E1               	clrf	_sis_bloqueado+1
  2897     054A                     l3559:
  2898                           
  2899                           ;main.c: 236:             blink_led('A', 300, 700, 2000);
  2900     054A  302C               	movlw	44
  2901     054B  00A0               	movwf	blink_led@on_time
  2902     054C  3001               	movlw	1
  2903     054D  00A1               	movwf	blink_led@on_time+1
  2904     054E  30BC               	movlw	188
  2905     054F  00A2               	movwf	blink_led@off_time
  2906     0550  3002               	movlw	2
  2907     0551  00A3               	movwf	blink_led@off_time+1
  2908     0552  30D0               	movlw	208
  2909     0553  00A4               	movwf	blink_led@duration
  2910     0554  3007               	movlw	7
  2911     0555  00A5               	movwf	blink_led@duration+1
  2912     0556  3041               	movlw	65
  2913     0557  120A  158A  22C7  120A  118A  	fcall	_blink_led
  2914     055C                     l3561:
  2915                           
  2916                           ;main.c: 237:             intentos = intentos + 1;
  2917     055C  1283               	bcf	3,5	;RP0=0, select bank0
  2918     055D  1303               	bcf	3,6	;RP1=0, select bank0
  2919     055E  086C               	movf	_intentos,w
  2920     055F  3E01               	addlw	1
  2921     0560  00EC               	movwf	_intentos
  2922     0561  086D               	movf	_intentos+1,w
  2923     0562  1803               	skipnc
  2924     0563  3E01               	addlw	1
  2925     0564  3E00               	addlw	0
  2926     0565  00ED               	movwf	_intentos+1
  2927     0566                     l3563:
  2928                           
  2929                           ;main.c: 238:             if(intentos ==3){
  2930     0566  3003               	movlw	3
  2931     0567  066C               	xorwf	_intentos,w
  2932     0568  046D               	iorwf	_intentos+1,w
  2933     0569  1D03               	btfss	3,2
  2934     056A  2D6C               	goto	u4061
  2935     056B  2D6D               	goto	u4060
  2936     056C                     u4061:
  2937     056C  2D9F               	goto	l3577
  2938     056D                     u4060:
  2939     056D                     l3565:
  2940                           
  2941                           ;main.c: 239:                 sis_bloqueado=1;
  2942     056D  3001               	movlw	1
  2943     056E  00E0               	movwf	_sis_bloqueado
  2944     056F  3000               	movlw	0
  2945     0570  00E1               	movwf	_sis_bloqueado+1
  2946     0571                     l3567:
  2947                           
  2948                           ;main.c: 240:                 LCD_Clear();
  2949     0571  160A  118A  2730  120A  118A  	fcall	_LCD_Clear
  2950     0576                     l3569:
  2951                           
  2952                           ;main.c: 241:                 LCD_String_xy(0,0,"sistema bloqueado");
  2953     0576  1283               	bcf	3,5	;RP0=0, select bank0
  2954     0577  1303               	bcf	3,6	;RP1=0, select bank0
  2955     0578  01A0               	clrf	LCD_String_xy@pos
  2956     0579  3007               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2957     057A  00A1               	movwf	LCD_String_xy@msg
  2958     057B  3000               	movlw	0
  2959     057C  120A  158A  2103  120A  118A  	fcall	_LCD_String_xy
  2960     0581                     l3571:
  2961                           
  2962                           ;main.c: 242:                 LCD_Char(0);
  2963     0581  3000               	movlw	0
  2964     0582  120A  158A  2165  120A  118A  	fcall	_LCD_Char
  2965     0587                     l3573:
  2966                           
  2967                           ;main.c: 243:                 blink_led('R', 300, 500, 3000);
  2968     0587  302C               	movlw	44
  2969     0588  1283               	bcf	3,5	;RP0=0, select bank0
  2970     0589  1303               	bcf	3,6	;RP1=0, select bank0
  2971     058A  00A0               	movwf	blink_led@on_time
  2972     058B  3001               	movlw	1
  2973     058C  00A1               	movwf	blink_led@on_time+1
  2974     058D  30F4               	movlw	244
  2975     058E  00A2               	movwf	blink_led@off_time
  2976     058F  3001               	movlw	1
  2977     0590  00A3               	movwf	blink_led@off_time+1
  2978     0591  30B8               	movlw	184
  2979     0592  00A4               	movwf	blink_led@duration
  2980     0593  300B               	movlw	11
  2981     0594  00A5               	movwf	blink_led@duration+1
  2982     0595  3052               	movlw	82
  2983     0596  120A  158A  22C7  120A  118A  	fcall	_blink_led
  2984     059B                     l3575:
  2985                           
  2986                           ;main.c: 244:                 intentos = 0;
  2987     059B  1283               	bcf	3,5	;RP0=0, select bank0
  2988     059C  1303               	bcf	3,6	;RP1=0, select bank0
  2989     059D  01EC               	clrf	_intentos
  2990     059E  01ED               	clrf	_intentos+1
  2991     059F                     l3577:
  2992                           
  2993                           ;main.c: 247:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  2994     059F  3015               	movlw	21
  2995     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2996     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2997     05A2  00B5               	movwf	??_funcion_seguridad+2
  2998     05A3  304B               	movlw	75
  2999     05A4  00B4               	movwf	??_funcion_seguridad+1
  3000     05A5  30BD               	movlw	189
  3001     05A6  00B3               	movwf	??_funcion_seguridad
  3002     05A7                     u4257:
  3003     05A7  0BB3               	decfsz	??_funcion_seguridad,f
  3004     05A8  2DA7               	goto	u4257
  3005     05A9  0BB4               	decfsz	??_funcion_seguridad+1,f
  3006     05AA  2DA7               	goto	u4257
  3007     05AB  0BB5               	decfsz	??_funcion_seguridad+2,f
  3008     05AC  2DA7               	goto	u4257
  3009     05AD  2DAE               	nop2
  3010     05AE                     l3579:
  3011                           
  3012                           ;main.c: 248:         LCD_Clear();
  3013     05AE  160A  118A  2730  120A  118A  	fcall	_LCD_Clear
  3014     05B3                     l3581:
  3015                           
  3016                           ;main.c: 249:         idx = 0;
  3017     05B3  01F8               	clrf	_idx
  3018     05B4                     l275:
  3019     05B4  0008               	return
  3020     05B5                     __end_of_funcion_seguridad:
  3021                           
  3022                           	psect	text5
  3023     0A6B                     __ptext5:	
  3024 ;; *************** function _strncmp *****************
  3025 ;; Defined at:
  3026 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  l               1    3[COMMON] PTR const unsigned char 
  3029 ;;		 -> pass_user(5), 
  3030 ;;  r               1    4[COMMON] PTR const unsigned char 
  3031 ;;		 -> password(6), 
  3032 ;;  n               2    5[COMMON] unsigned int 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  2    3[COMMON] int 
  3037 ;; Registers used:
  3038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         4       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0
  3046 ;;      Temps:          0       2       0       0       0
  3047 ;;      Totals:         4       2       0       0       0
  3048 ;;Total ram usage:        6 bytes
  3049 ;; Hardware stack levels used: 2
  3050 ;; Hardware stack levels required when called: 1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_funcion_seguridad
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058     0A6B                     _strncmp:	
  3059                           ;psect for function _strncmp
  3060                           
  3061     0A6B                     l3401:	
  3062                           ;incstack = 0
  3063                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  3064                           
  3065     0A6B  3001               	movlw	1
  3066     0A6C  02F5               	subwf	strncmp@n,f
  3067     0A6D  3000               	movlw	0
  3068     0A6E  1C03               	skipc
  3069     0A6F  03F6               	decf	strncmp@n+1,f
  3070     0A70  02F6               	subwf	strncmp@n+1,f
  3071     0A71  0A75               	incf	strncmp@n,w
  3072     0A72  1D03               	skipz
  3073     0A73  2A78               	goto	u3791
  3074     0A74  0A76               	incf	strncmp@n+1,w
  3075     0A75  1D03               	btfss	3,2
  3076     0A76  2A78               	goto	u3791
  3077     0A77  2A79               	goto	u3790
  3078     0A78                     u3791:
  3079     0A78  2A86               	goto	l3411
  3080     0A79                     u3790:
  3081     0A79                     l3403:
  3082     0A79  01F3               	clrf	?_strncmp
  3083     0A7A  01F4               	clrf	?_strncmp+1
  3084     0A7B  2AC6               	goto	l976
  3085     0A7C                     l3407:
  3086     0A7C  3001               	movlw	1
  3087     0A7D  07F3               	addwf	strncmp@l,f
  3088     0A7E  3001               	movlw	1
  3089     0A7F  07F4               	addwf	strncmp@r,f
  3090     0A80                     l3409:
  3091     0A80  3001               	movlw	1
  3092     0A81  02F5               	subwf	strncmp@n,f
  3093     0A82  3000               	movlw	0
  3094     0A83  1C03               	skipc
  3095     0A84  03F6               	decf	strncmp@n+1,f
  3096     0A85  02F6               	subwf	strncmp@n+1,f
  3097     0A86                     l3411:
  3098     0A86  0873               	movf	strncmp@l,w
  3099     0A87  0084               	movwf	4
  3100     0A88  1383               	bcf	3,7	;select IRP bank0
  3101     0A89  0800               	movf	0,w
  3102     0A8A  1903               	btfsc	3,2
  3103     0A8B  2A8D               	goto	u3801
  3104     0A8C  2A8E               	goto	u3800
  3105     0A8D                     u3801:
  3106     0A8D  2AB2               	goto	l3419
  3107     0A8E                     u3800:
  3108     0A8E                     l3413:
  3109     0A8E  0874               	movf	strncmp@r,w
  3110     0A8F  0084               	movwf	4
  3111     0A90  120A  158A  200A  120A  158A  	fcall	stringdir
  3112     0A95  3A00               	xorlw	0
  3113     0A96  1903               	skipnz
  3114     0A97  2A99               	goto	u3811
  3115     0A98  2A9A               	goto	u3810
  3116     0A99                     u3811:
  3117     0A99  2AB2               	goto	l3419
  3118     0A9A                     u3810:
  3119     0A9A                     l3415:
  3120     0A9A  0875               	movf	strncmp@n,w
  3121     0A9B  0476               	iorwf	strncmp@n+1,w
  3122     0A9C  1903               	btfsc	3,2
  3123     0A9D  2A9F               	goto	u3821
  3124     0A9E  2AA0               	goto	u3820
  3125     0A9F                     u3821:
  3126     0A9F  2AB2               	goto	l3419
  3127     0AA0                     u3820:
  3128     0AA0                     l3417:
  3129     0AA0  0874               	movf	strncmp@r,w
  3130     0AA1  0084               	movwf	4
  3131     0AA2  120A  158A  200A  120A  158A  	fcall	stringdir
  3132     0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  3133     0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  3134     0AA9  00A0               	movwf	??_strncmp
  3135     0AAA  0873               	movf	strncmp@l,w
  3136     0AAB  0084               	movwf	4
  3137     0AAC  0800               	movf	0,w
  3138     0AAD  0620               	xorwf	??_strncmp,w
  3139     0AAE  1903               	skipnz
  3140     0AAF  2AB1               	goto	u3831
  3141     0AB0  2AB2               	goto	u3830
  3142     0AB1                     u3831:
  3143     0AB1  2A7C               	goto	l3407
  3144     0AB2                     u3830:
  3145     0AB2                     l3419:
  3146     0AB2  0874               	movf	strncmp@r,w
  3147     0AB3  0084               	movwf	4
  3148     0AB4  120A  158A  200A  120A  158A  	fcall	stringdir
  3149     0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  3150     0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  3151     0ABB  00A0               	movwf	??_strncmp
  3152     0ABC  0873               	movf	strncmp@l,w
  3153     0ABD  0084               	movwf	4
  3154     0ABE  0800               	movf	0,w
  3155     0ABF  00A1               	movwf	??_strncmp+1
  3156     0AC0  0820               	movf	??_strncmp,w
  3157     0AC1  0221               	subwf	??_strncmp+1,w
  3158     0AC2  00F3               	movwf	?_strncmp
  3159     0AC3  01F4               	clrf	?_strncmp+1
  3160     0AC4  1C03               	skipc
  3161     0AC5  03F4               	decf	?_strncmp+1,f
  3162     0AC6                     l976:
  3163     0AC6  0008               	return
  3164     0AC7                     __end_of_strncmp:
  3165                           
  3166                           	psect	text6
  3167     0F1F                     __ptext6:	
  3168 ;; *************** function _keypad_getkey *****************
  3169 ;; Defined at:
  3170 ;;		line 59 in file "KEYPAD.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  3175 ;;  i               2   17[BANK0 ] int 
  3176 ;;  valor           1   16[BANK0 ] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      unsigned char 
  3179 ;; Registers used:
  3180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         0      19       0       0       0
  3188 ;;      Temps:          4       0       0       0       0
  3189 ;;      Totals:         4      19       0       0       0
  3190 ;;Total ram usage:       23 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_funcion_seguridad
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200     0F1F                     _keypad_getkey:	
  3201                           ;psect for function _keypad_getkey
  3202                           
  3203     0F1F                     l2337:	
  3204                           ;incstack = 0
  3205                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  3206                           
  3207                           
  3208                           ;KEYPAD.c: 61: char letras[4][4]={ {'1','2','3','A'},
  3209     0F1F  30D5               	movlw	keypad_getkey@F1398& (0+255)
  3210     0F20  0084               	movwf	4
  3211     0F21  3020               	movlw	low keypad_getkey@letras
  3212     0F22  00F3               	movwf	??_keypad_getkey
  3213     0F23  3010               	movlw	16
  3214     0F24  00F4               	movwf	??_keypad_getkey+1
  3215     0F25                     u2120:
  3216     0F25  1383               	bcf	3,7	;select IRP bank1
  3217     0F26  0800               	movf	0,w
  3218     0F27  00F5               	movwf	??_keypad_getkey+2
  3219     0F28  0A04               	incf	4,w
  3220     0F29  00F6               	movwf	??_keypad_getkey+3
  3221     0F2A  0873               	movf	??_keypad_getkey,w
  3222     0F2B  0084               	movwf	4
  3223     0F2C  0875               	movf	??_keypad_getkey+2,w
  3224     0F2D  0080               	movwf	0
  3225     0F2E  0A04               	incf	4,w
  3226     0F2F  00F3               	movwf	??_keypad_getkey
  3227     0F30  0876               	movf	??_keypad_getkey+3,w
  3228     0F31  0084               	movwf	4
  3229     0F32  0BF4               	decfsz	??_keypad_getkey+1,f
  3230     0F33  2F25               	goto	u2120
  3231     0F34                     l2339:
  3232     0F34                     l2341:
  3233                           
  3234                           ;KEYPAD.c: 66: char valor=0;
  3235     0F34  1283               	bcf	3,5	;RP0=0, select bank0
  3236     0F35  1303               	bcf	3,6	;RP1=0, select bank0
  3237     0F36  01B0               	clrf	keypad_getkey@valor
  3238     0F37                     l2343:
  3239                           
  3240                           ;KEYPAD.c: 68: for(i=0;i<4;i++){
  3241     0F37  01B1               	clrf	keypad_getkey@i
  3242     0F38  01B2               	clrf	keypad_getkey@i+1
  3243     0F39                     l2349:
  3244                           
  3245                           ;KEYPAD.c: 70:    if(i==0){
  3246     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3247     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3248     0F3B  0831               	movf	keypad_getkey@i,w
  3249     0F3C  0432               	iorwf	keypad_getkey@i+1,w
  3250     0F3D  1D03               	btfss	3,2
  3251     0F3E  2F40               	goto	u2131
  3252     0F3F  2F41               	goto	u2130
  3253     0F40                     u2131:
  3254     0F40  2F66               	goto	l2371
  3255     0F41                     u2130:
  3256     0F41                     l2351:
  3257                           
  3258                           ;KEYPAD.c: 72:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  3259     0F41  30FE               	movlw	254
  3260     0F42  0086               	movwf	6	;volatile
  3261     0F43                     l2353:
  3262                           
  3263                           ;KEYPAD.c: 73:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  3264     0F43  3042               	movlw	66
  3265     0F44  00F3               	movwf	??_keypad_getkey
  3266     0F45                     u4267:
  3267     0F45  0BF3               	decfsz	??_keypad_getkey,f
  3268     0F46  2F45               	goto	u4267
  3269     0F47  0000               	nop
  3270                           
  3271                           ;KEYPAD.c: 74:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  3272     0F48  2F4B               	goto	l2357
  3273     0F49                     l2355:
  3274     0F49  0820               	movf	keypad_getkey@letras,w
  3275     0F4A  00B0               	movwf	keypad_getkey@valor
  3276     0F4B                     l2357:
  3277     0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3278     0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3279     0F4D  1E06               	btfss	6,4	;volatile
  3280     0F4E  2F50               	goto	u2141
  3281     0F4F  2F51               	goto	u2140
  3282     0F50                     u2141:
  3283     0F50  2F49               	goto	l2355
  3284     0F51                     u2140:
  3285     0F51  2F54               	goto	l2361
  3286     0F52                     l2359:
  3287     0F52  0821               	movf	keypad_getkey@letras+1,w
  3288     0F53  00B0               	movwf	keypad_getkey@valor
  3289     0F54                     l2361:
  3290     0F54  1E86               	btfss	6,5	;volatile
  3291     0F55  2F57               	goto	u2151
  3292     0F56  2F58               	goto	u2150
  3293     0F57                     u2151:
  3294     0F57  2F52               	goto	l2359
  3295     0F58                     u2150:
  3296     0F58  2F5B               	goto	l2365
  3297     0F59                     l2363:
  3298     0F59  0822               	movf	keypad_getkey@letras+2,w
  3299     0F5A  00B0               	movwf	keypad_getkey@valor
  3300     0F5B                     l2365:
  3301     0F5B  1F06               	btfss	6,6	;volatile
  3302     0F5C  2F5E               	goto	u2161
  3303     0F5D  2F5F               	goto	u2160
  3304     0F5E                     u2161:
  3305     0F5E  2F59               	goto	l2363
  3306     0F5F                     u2160:
  3307     0F5F  2F62               	goto	l2369
  3308     0F60                     l2367:
  3309     0F60  0823               	movf	keypad_getkey@letras+3,w
  3310     0F61  00B0               	movwf	keypad_getkey@valor
  3311     0F62                     l2369:
  3312     0F62  1F86               	btfss	6,7	;volatile
  3313     0F63  2F65               	goto	u2171
  3314     0F64  2F66               	goto	u2170
  3315     0F65                     u2171:
  3316     0F65  2F60               	goto	l2367
  3317     0F66                     u2170:
  3318     0F66                     l2371:
  3319                           
  3320                           ;KEYPAD.c: 80:    if(i==1){
  3321     0F66  0331               	decf	keypad_getkey@i,w
  3322     0F67  0432               	iorwf	keypad_getkey@i+1,w
  3323     0F68  1D03               	btfss	3,2
  3324     0F69  2F6B               	goto	u2181
  3325     0F6A  2F6C               	goto	u2180
  3326     0F6B                     u2181:
  3327     0F6B  2F91               	goto	l2393
  3328     0F6C                     u2180:
  3329     0F6C                     l2373:
  3330                           
  3331                           ;KEYPAD.c: 81:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  3332     0F6C  30FD               	movlw	253
  3333     0F6D  0086               	movwf	6	;volatile
  3334     0F6E                     l2375:
  3335                           
  3336                           ;KEYPAD.c: 82:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  3337     0F6E  3042               	movlw	66
  3338     0F6F  00F3               	movwf	??_keypad_getkey
  3339     0F70                     u4277:
  3340     0F70  0BF3               	decfsz	??_keypad_getkey,f
  3341     0F71  2F70               	goto	u4277
  3342     0F72  0000               	nop
  3343                           
  3344                           ;KEYPAD.c: 83:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  3345     0F73  2F76               	goto	l2379
  3346     0F74                     l2377:
  3347     0F74  0824               	movf	keypad_getkey@letras+4,w
  3348     0F75  00B0               	movwf	keypad_getkey@valor
  3349     0F76                     l2379:
  3350     0F76  1283               	bcf	3,5	;RP0=0, select bank0
  3351     0F77  1303               	bcf	3,6	;RP1=0, select bank0
  3352     0F78  1E06               	btfss	6,4	;volatile
  3353     0F79  2F7B               	goto	u2191
  3354     0F7A  2F7C               	goto	u2190
  3355     0F7B                     u2191:
  3356     0F7B  2F74               	goto	l2377
  3357     0F7C                     u2190:
  3358     0F7C  2F7F               	goto	l2383
  3359     0F7D                     l2381:
  3360     0F7D  0825               	movf	keypad_getkey@letras+5,w
  3361     0F7E  00B0               	movwf	keypad_getkey@valor
  3362     0F7F                     l2383:
  3363     0F7F  1E86               	btfss	6,5	;volatile
  3364     0F80  2F82               	goto	u2201
  3365     0F81  2F83               	goto	u2200
  3366     0F82                     u2201:
  3367     0F82  2F7D               	goto	l2381
  3368     0F83                     u2200:
  3369     0F83  2F86               	goto	l2387
  3370     0F84                     l2385:
  3371     0F84  0826               	movf	keypad_getkey@letras+6,w
  3372     0F85  00B0               	movwf	keypad_getkey@valor
  3373     0F86                     l2387:
  3374     0F86  1F06               	btfss	6,6	;volatile
  3375     0F87  2F89               	goto	u2211
  3376     0F88  2F8A               	goto	u2210
  3377     0F89                     u2211:
  3378     0F89  2F84               	goto	l2385
  3379     0F8A                     u2210:
  3380     0F8A  2F8D               	goto	l2391
  3381     0F8B                     l2389:
  3382     0F8B  0827               	movf	keypad_getkey@letras+7,w
  3383     0F8C  00B0               	movwf	keypad_getkey@valor
  3384     0F8D                     l2391:
  3385     0F8D  1F86               	btfss	6,7	;volatile
  3386     0F8E  2F90               	goto	u2221
  3387     0F8F  2F91               	goto	u2220
  3388     0F90                     u2221:
  3389     0F90  2F8B               	goto	l2389
  3390     0F91                     u2220:
  3391     0F91                     l2393:
  3392                           
  3393                           ;KEYPAD.c: 89:    if(i==2){
  3394     0F91  3002               	movlw	2
  3395     0F92  0631               	xorwf	keypad_getkey@i,w
  3396     0F93  0432               	iorwf	keypad_getkey@i+1,w
  3397     0F94  1D03               	btfss	3,2
  3398     0F95  2F97               	goto	u2231
  3399     0F96  2F98               	goto	u2230
  3400     0F97                     u2231:
  3401     0F97  2FBD               	goto	l2415
  3402     0F98                     u2230:
  3403     0F98                     l2395:
  3404                           
  3405                           ;KEYPAD.c: 90:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  3406     0F98  30FB               	movlw	251
  3407     0F99  0086               	movwf	6	;volatile
  3408     0F9A                     l2397:
  3409                           
  3410                           ;KEYPAD.c: 91:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  3411     0F9A  3042               	movlw	66
  3412     0F9B  00F3               	movwf	??_keypad_getkey
  3413     0F9C                     u4287:
  3414     0F9C  0BF3               	decfsz	??_keypad_getkey,f
  3415     0F9D  2F9C               	goto	u4287
  3416     0F9E  0000               	nop
  3417                           
  3418                           ;KEYPAD.c: 92:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  3419     0F9F  2FA2               	goto	l2401
  3420     0FA0                     l2399:
  3421     0FA0  0828               	movf	keypad_getkey@letras+8,w
  3422     0FA1  00B0               	movwf	keypad_getkey@valor
  3423     0FA2                     l2401:
  3424     0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  3425     0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  3426     0FA4  1E06               	btfss	6,4	;volatile
  3427     0FA5  2FA7               	goto	u2241
  3428     0FA6  2FA8               	goto	u2240
  3429     0FA7                     u2241:
  3430     0FA7  2FA0               	goto	l2399
  3431     0FA8                     u2240:
  3432     0FA8  2FAB               	goto	l2405
  3433     0FA9                     l2403:
  3434     0FA9  0829               	movf	keypad_getkey@letras+9,w
  3435     0FAA  00B0               	movwf	keypad_getkey@valor
  3436     0FAB                     l2405:
  3437     0FAB  1E86               	btfss	6,5	;volatile
  3438     0FAC  2FAE               	goto	u2251
  3439     0FAD  2FAF               	goto	u2250
  3440     0FAE                     u2251:
  3441     0FAE  2FA9               	goto	l2403
  3442     0FAF                     u2250:
  3443     0FAF  2FB2               	goto	l2409
  3444     0FB0                     l2407:
  3445     0FB0  082A               	movf	keypad_getkey@letras+10,w
  3446     0FB1  00B0               	movwf	keypad_getkey@valor
  3447     0FB2                     l2409:
  3448     0FB2  1F06               	btfss	6,6	;volatile
  3449     0FB3  2FB5               	goto	u2261
  3450     0FB4  2FB6               	goto	u2260
  3451     0FB5                     u2261:
  3452     0FB5  2FB0               	goto	l2407
  3453     0FB6                     u2260:
  3454     0FB6  2FB9               	goto	l2413
  3455     0FB7                     l2411:
  3456     0FB7  082B               	movf	keypad_getkey@letras+11,w
  3457     0FB8  00B0               	movwf	keypad_getkey@valor
  3458     0FB9                     l2413:
  3459     0FB9  1F86               	btfss	6,7	;volatile
  3460     0FBA  2FBC               	goto	u2271
  3461     0FBB  2FBD               	goto	u2270
  3462     0FBC                     u2271:
  3463     0FBC  2FB7               	goto	l2411
  3464     0FBD                     u2270:
  3465     0FBD                     l2415:
  3466                           
  3467                           ;KEYPAD.c: 98:    if(i==3){
  3468     0FBD  3003               	movlw	3
  3469     0FBE  0631               	xorwf	keypad_getkey@i,w
  3470     0FBF  0432               	iorwf	keypad_getkey@i+1,w
  3471     0FC0  1D03               	btfss	3,2
  3472     0FC1  2FC3               	goto	u2281
  3473     0FC2  2FC4               	goto	u2280
  3474     0FC3                     u2281:
  3475     0FC3  2FE9               	goto	l2437
  3476     0FC4                     u2280:
  3477     0FC4                     l2417:
  3478                           
  3479                           ;KEYPAD.c: 99:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  3480     0FC4  30F7               	movlw	247
  3481     0FC5  0086               	movwf	6	;volatile
  3482     0FC6                     l2419:
  3483                           
  3484                           ;KEYPAD.c: 100:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  3485     0FC6  3042               	movlw	66
  3486     0FC7  00F3               	movwf	??_keypad_getkey
  3487     0FC8                     u4297:
  3488     0FC8  0BF3               	decfsz	??_keypad_getkey,f
  3489     0FC9  2FC8               	goto	u4297
  3490     0FCA  0000               	nop
  3491                           
  3492                           ;KEYPAD.c: 101:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  3493     0FCB  2FCE               	goto	l2423
  3494     0FCC                     l2421:
  3495     0FCC  082C               	movf	keypad_getkey@letras+12,w
  3496     0FCD  00B0               	movwf	keypad_getkey@valor
  3497     0FCE                     l2423:
  3498     0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  3499     0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  3500     0FD0  1E06               	btfss	6,4	;volatile
  3501     0FD1  2FD3               	goto	u2291
  3502     0FD2  2FD4               	goto	u2290
  3503     0FD3                     u2291:
  3504     0FD3  2FCC               	goto	l2421
  3505     0FD4                     u2290:
  3506     0FD4  2FD7               	goto	l2427
  3507     0FD5                     l2425:
  3508     0FD5  082D               	movf	keypad_getkey@letras+13,w
  3509     0FD6  00B0               	movwf	keypad_getkey@valor
  3510     0FD7                     l2427:
  3511     0FD7  1E86               	btfss	6,5	;volatile
  3512     0FD8  2FDA               	goto	u2301
  3513     0FD9  2FDB               	goto	u2300
  3514     0FDA                     u2301:
  3515     0FDA  2FD5               	goto	l2425
  3516     0FDB                     u2300:
  3517     0FDB  2FDE               	goto	l2431
  3518     0FDC                     l2429:
  3519     0FDC  082E               	movf	keypad_getkey@letras+14,w
  3520     0FDD  00B0               	movwf	keypad_getkey@valor
  3521     0FDE                     l2431:
  3522     0FDE  1F06               	btfss	6,6	;volatile
  3523     0FDF  2FE1               	goto	u2311
  3524     0FE0  2FE2               	goto	u2310
  3525     0FE1                     u2311:
  3526     0FE1  2FDC               	goto	l2429
  3527     0FE2                     u2310:
  3528     0FE2  2FE5               	goto	l2435
  3529     0FE3                     l2433:
  3530     0FE3  082F               	movf	keypad_getkey@letras+15,w
  3531     0FE4  00B0               	movwf	keypad_getkey@valor
  3532     0FE5                     l2435:
  3533     0FE5  1F86               	btfss	6,7	;volatile
  3534     0FE6  2FE8               	goto	u2321
  3535     0FE7  2FE9               	goto	u2320
  3536     0FE8                     u2321:
  3537     0FE8  2FE3               	goto	l2433
  3538     0FE9                     u2320:
  3539     0FE9                     l2437:
  3540                           
  3541                           ;KEYPAD.c: 106:    }
  3542     0FE9  3001               	movlw	1
  3543     0FEA  07B1               	addwf	keypad_getkey@i,f
  3544     0FEB  1803               	skipnc
  3545     0FEC  0AB2               	incf	keypad_getkey@i+1,f
  3546     0FED  3000               	movlw	0
  3547     0FEE  07B2               	addwf	keypad_getkey@i+1,f
  3548     0FEF                     l2439:
  3549     0FEF  0832               	movf	keypad_getkey@i+1,w
  3550     0FF0  3A80               	xorlw	128
  3551     0FF1  00FF               	movwf	btemp+1
  3552     0FF2  3080               	movlw	128
  3553     0FF3  027F               	subwf	btemp+1,w
  3554     0FF4  1D03               	skipz
  3555     0FF5  2FF8               	goto	u2335
  3556     0FF6  3004               	movlw	4
  3557     0FF7  0231               	subwf	keypad_getkey@i,w
  3558     0FF8                     u2335:
  3559     0FF8  1C03               	skipc
  3560     0FF9  2FFB               	goto	u2331
  3561     0FFA  2FFC               	goto	u2330
  3562     0FFB                     u2331:
  3563     0FFB  2F39               	goto	l2349
  3564     0FFC                     u2330:
  3565     0FFC                     l2441:
  3566                           
  3567                           ;KEYPAD.c: 108:    return valor;
  3568     0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  3569     0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  3570     0FFE  0830               	movf	keypad_getkey@valor,w
  3571     0FFF                     l118:
  3572     0FFF  0008               	return
  3573     1000                     __end_of_keypad_getkey:
  3574                           
  3575                           	psect	text7
  3576     0AC7                     __ptext7:	
  3577 ;; *************** function _blink_led *****************
  3578 ;; Defined at:
  3579 ;;		line 126 in file "main.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  led             1    wreg     unsigned char 
  3582 ;;  on_time         2    0[BANK0 ] unsigned int 
  3583 ;;  off_time        2    2[BANK0 ] unsigned int 
  3584 ;;  duration        2    4[BANK0 ] unsigned int 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  led             1   10[BANK0 ] unsigned char 
  3587 ;;  elapsed_time    2    8[BANK0 ] unsigned int 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, pclath, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3597 ;;      Params:         0       6       0       0       0
  3598 ;;      Locals:         0       3       0       0       0
  3599 ;;      Temps:          0       2       0       0       0
  3600 ;;      Totals:         0      11       0       0       0
  3601 ;;Total ram usage:       11 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; Hardware stack levels required when called: 2
  3604 ;; This function calls:
  3605 ;;		_delay_ms_variable
  3606 ;; This function is called by:
  3607 ;;		_funcion_seguridad
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611     0AC7                     _blink_led:	
  3612                           ;psect for function _blink_led
  3613                           
  3614                           
  3615                           ;incstack = 0
  3616                           ; Regs used in _blink_led: [wreg+status,2+status,0+pclath+cstack]
  3617                           ;blink_led@led stored from wreg
  3618     0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  3619     0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  3620     0AC9  00AA               	movwf	blink_led@led
  3621     0ACA                     l3367:
  3622                           
  3623                           ;main.c: 127:     unsigned int elapsed_time = 0;
  3624     0ACA  01A8               	clrf	blink_led@elapsed_time
  3625     0ACB  01A9               	clrf	blink_led@elapsed_time+1
  3626                           
  3627                           ;main.c: 129:     while (elapsed_time < duration) {
  3628     0ACC  2B1F               	goto	l3399
  3629     0ACD                     l3369:
  3630                           
  3631                           ;main.c: 130:         if (led == 'V') {
  3632     0ACD  3056               	movlw	86
  3633     0ACE  062A               	xorwf	blink_led@led,w
  3634     0ACF  1D03               	btfss	3,2
  3635     0AD0  2AD2               	goto	u3721
  3636     0AD1  2AD3               	goto	u3720
  3637     0AD2                     u3721:
  3638     0AD2  2AD5               	goto	l3373
  3639     0AD3                     u3720:
  3640     0AD3                     l3371:
  3641                           
  3642                           ;main.c: 131:             PORTEbits.RE1 = 1;
  3643     0AD3  1489               	bsf	9,1	;volatile
  3644                           
  3645                           ;main.c: 132:         } else if (led == 'A') {
  3646     0AD4  2AE4               	goto	l3381
  3647     0AD5                     l3373:
  3648     0AD5  3041               	movlw	65
  3649     0AD6  062A               	xorwf	blink_led@led,w
  3650     0AD7  1D03               	btfss	3,2
  3651     0AD8  2ADA               	goto	u3731
  3652     0AD9  2ADB               	goto	u3730
  3653     0ADA                     u3731:
  3654     0ADA  2ADD               	goto	l3377
  3655     0ADB                     u3730:
  3656     0ADB                     l3375:
  3657                           
  3658                           ;main.c: 133:             PORTEbits.RE2 = 1;
  3659     0ADB  1509               	bsf	9,2	;volatile
  3660                           
  3661                           ;main.c: 134:         } else if (led == 'R') {
  3662     0ADC  2AE4               	goto	l3381
  3663     0ADD                     l3377:
  3664     0ADD  3052               	movlw	82
  3665     0ADE  062A               	xorwf	blink_led@led,w
  3666     0ADF  1D03               	btfss	3,2
  3667     0AE0  2AE2               	goto	u3741
  3668     0AE1  2AE3               	goto	u3740
  3669     0AE2                     u3741:
  3670     0AE2  2AE4               	goto	l3381
  3671     0AE3                     u3740:
  3672     0AE3                     l3379:
  3673                           
  3674                           ;main.c: 135:             PORTEbits.RE0 = 1;
  3675     0AE3  1409               	bsf	9,0	;volatile
  3676     0AE4                     l3381:
  3677                           
  3678                           ;main.c: 137:         delay_ms_variable(on_time);
  3679     0AE4  0821               	movf	blink_led@on_time+1,w
  3680     0AE5  00F4               	movwf	delay_ms_variable@ms+1
  3681     0AE6  0820               	movf	blink_led@on_time,w
  3682     0AE7  00F3               	movwf	delay_ms_variable@ms
  3683     0AE8  120A  158A  2097  120A  158A  	fcall	_delay_ms_variable
  3684     0AED                     l3383:
  3685                           
  3686                           ;main.c: 140:         if (led == 'V') {
  3687     0AED  3056               	movlw	86
  3688     0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  3689     0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  3690     0AF0  062A               	xorwf	blink_led@led,w
  3691     0AF1  1D03               	btfss	3,2
  3692     0AF2  2AF4               	goto	u3751
  3693     0AF3  2AF5               	goto	u3750
  3694     0AF4                     u3751:
  3695     0AF4  2AF7               	goto	l3387
  3696     0AF5                     u3750:
  3697     0AF5                     l3385:
  3698                           
  3699                           ;main.c: 141:             PORTEbits.RE1 = 0;
  3700     0AF5  1089               	bcf	9,1	;volatile
  3701                           
  3702                           ;main.c: 142:         } else if (led == 'A') {
  3703     0AF6  2B06               	goto	l3395
  3704     0AF7                     l3387:
  3705     0AF7  3041               	movlw	65
  3706     0AF8  062A               	xorwf	blink_led@led,w
  3707     0AF9  1D03               	btfss	3,2
  3708     0AFA  2AFC               	goto	u3761
  3709     0AFB  2AFD               	goto	u3760
  3710     0AFC                     u3761:
  3711     0AFC  2AFF               	goto	l3391
  3712     0AFD                     u3760:
  3713     0AFD                     l3389:
  3714                           
  3715                           ;main.c: 143:             PORTEbits.RE2 = 0;
  3716     0AFD  1109               	bcf	9,2	;volatile
  3717                           
  3718                           ;main.c: 144:         } else if (led == 'R') {
  3719     0AFE  2B06               	goto	l3395
  3720     0AFF                     l3391:
  3721     0AFF  3052               	movlw	82
  3722     0B00  062A               	xorwf	blink_led@led,w
  3723     0B01  1D03               	btfss	3,2
  3724     0B02  2B04               	goto	u3771
  3725     0B03  2B05               	goto	u3770
  3726     0B04                     u3771:
  3727     0B04  2B06               	goto	l3395
  3728     0B05                     u3770:
  3729     0B05                     l3393:
  3730                           
  3731                           ;main.c: 145:             PORTEbits.RE0 = 0;
  3732     0B05  1009               	bcf	9,0	;volatile
  3733     0B06                     l3395:
  3734                           
  3735                           ;main.c: 147:         delay_ms_variable(off_time);
  3736     0B06  0823               	movf	blink_led@off_time+1,w
  3737     0B07  00F4               	movwf	delay_ms_variable@ms+1
  3738     0B08  0822               	movf	blink_led@off_time,w
  3739     0B09  00F3               	movwf	delay_ms_variable@ms
  3740     0B0A  120A  158A  2097  120A  158A  	fcall	_delay_ms_variable
  3741     0B0F                     l3397:
  3742                           
  3743                           ;main.c: 149:         elapsed_time += on_time + off_time;
  3744     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  3745     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  3746     0B11  0822               	movf	blink_led@off_time,w
  3747     0B12  0720               	addwf	blink_led@on_time,w
  3748     0B13  00A6               	movwf	??_blink_led
  3749     0B14  0823               	movf	blink_led@off_time+1,w
  3750     0B15  1803               	skipnc
  3751     0B16  0A23               	incf	blink_led@off_time+1,w
  3752     0B17  0721               	addwf	blink_led@on_time+1,w
  3753     0B18  00A7               	movwf	??_blink_led+1
  3754     0B19  0826               	movf	??_blink_led,w
  3755     0B1A  07A8               	addwf	blink_led@elapsed_time,f
  3756     0B1B  1803               	skipnc
  3757     0B1C  0AA9               	incf	blink_led@elapsed_time+1,f
  3758     0B1D  0827               	movf	??_blink_led+1,w
  3759     0B1E  07A9               	addwf	blink_led@elapsed_time+1,f
  3760     0B1F                     l3399:
  3761                           
  3762                           ;main.c: 129:     while (elapsed_time < duration) {
  3763     0B1F  0825               	movf	blink_led@duration+1,w
  3764     0B20  0229               	subwf	blink_led@elapsed_time+1,w
  3765     0B21  1D03               	skipz
  3766     0B22  2B25               	goto	u3785
  3767     0B23  0824               	movf	blink_led@duration,w
  3768     0B24  0228               	subwf	blink_led@elapsed_time,w
  3769     0B25                     u3785:
  3770     0B25  1C03               	skipc
  3771     0B26  2B28               	goto	u3781
  3772     0B27  2B29               	goto	u3780
  3773     0B28                     u3781:
  3774     0B28  2ACD               	goto	l3369
  3775     0B29                     u3780:
  3776     0B29                     l254:
  3777     0B29  0008               	return
  3778     0B2A                     __end_of_blink_led:
  3779                           
  3780                           	psect	text8
  3781     0897                     __ptext8:	
  3782 ;; *************** function _delay_ms_variable *****************
  3783 ;; Defined at:
  3784 ;;		line 119 in file "main.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  ms              2    3[COMMON] unsigned int 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      void 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3798 ;;      Params:         2       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0
  3800 ;;      Temps:          2       0       0       0       0
  3801 ;;      Totals:         4       0       0       0       0
  3802 ;;Total ram usage:        4 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_blink_led
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812     0897                     _delay_ms_variable:	
  3813                           ;psect for function _delay_ms_variable
  3814                           
  3815     0897                     l2289:	
  3816                           ;incstack = 0
  3817                           ; Regs used in _delay_ms_variable: [wreg+status,2+status,0]
  3818                           
  3819                           
  3820                           ;main.c: 120:     while (ms--) {
  3821     0897  28A1               	goto	l2293
  3822     0898                     l2291:
  3823                           
  3824                           ;main.c: 121:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3825     0898  3003               	movlw	3
  3826     0899  00F6               	movwf	??_delay_ms_variable+1
  3827     089A  3097               	movlw	151
  3828     089B  00F5               	movwf	??_delay_ms_variable
  3829     089C                     u4307:
  3830     089C  0BF5               	decfsz	??_delay_ms_variable,f
  3831     089D  289C               	goto	u4307
  3832     089E  0BF6               	decfsz	??_delay_ms_variable+1,f
  3833     089F  289C               	goto	u4307
  3834     08A0  28A1               	nop2
  3835     08A1                     l2293:
  3836                           
  3837                           ;main.c: 120:     while (ms--) {
  3838     08A1  3001               	movlw	1
  3839     08A2  02F3               	subwf	delay_ms_variable@ms,f
  3840     08A3  3000               	movlw	0
  3841     08A4  1C03               	skipc
  3842     08A5  03F4               	decf	delay_ms_variable@ms+1,f
  3843     08A6  02F4               	subwf	delay_ms_variable@ms+1,f
  3844     08A7  0A73               	incf	delay_ms_variable@ms,w
  3845     08A8  1D03               	skipz
  3846     08A9  28AE               	goto	u2061
  3847     08AA  0A74               	incf	delay_ms_variable@ms+1,w
  3848     08AB  1D03               	btfss	3,2
  3849     08AC  28AE               	goto	u2061
  3850     08AD  28AF               	goto	u2060
  3851     08AE                     u2061:
  3852     08AE  2898               	goto	l2291
  3853     08AF                     u2060:
  3854     08AF                     l238:
  3855     08AF  0008               	return
  3856     08B0                     __end_of_delay_ms_variable:
  3857                           
  3858                           	psect	text9
  3859     0B9C                     __ptext9:	
  3860 ;; *************** function _funcion_monitoreo_eventos *****************
  3861 ;; Defined at:
  3862 ;;		line 271 in file "main.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  hall            1   50[BANK0 ] unsigned char 
  3867 ;;  ir              1   49[BANK0 ] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3877 ;;      Params:         0       0       0       0       0
  3878 ;;      Locals:         0       2       0       0       0
  3879 ;;      Temps:          0       4       0       0       0
  3880 ;;      Totals:         0       6       0       0       0
  3881 ;;Total ram usage:        6 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 6
  3884 ;; This function calls:
  3885 ;;		_LCD_Clear
  3886 ;;		_LCD_Command
  3887 ;;		_LCD_String
  3888 ;;		_LCD_String_xy
  3889 ;;		_sprintf
  3890 ;; This function is called by:
  3891 ;;		_main
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895     0B9C                     _funcion_monitoreo_eventos:	
  3896                           ;psect for function _funcion_monitoreo_eventos
  3897                           
  3898     0B9C                     l3603:	
  3899                           ;incstack = 0
  3900                           ; Regs used in _funcion_monitoreo_eventos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  3901                           
  3902                           
  3903                           ;main.c: 273:     unsigned char ir, hall;;main.c: 275:     ir = PORTAbits.RA2;
  3904     0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  3905     0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  3906     0B9E  0C05               	rrf	5,w	;volatile
  3907     0B9F  00CD               	movwf	??_funcion_monitoreo_eventos
  3908     0BA0  0C4D               	rrf	??_funcion_monitoreo_eventos,w
  3909     0BA1  3901               	andlw	1
  3910     0BA2  00D1               	movwf	funcion_monitoreo_eventos@ir
  3911                           
  3912                           ;main.c: 276:     hall = PORTAbits.RA3;
  3913     0BA3  0C05               	rrf	5,w	;volatile
  3914     0BA4  00CD               	movwf	??_funcion_monitoreo_eventos
  3915     0BA5  0CCD               	rrf	??_funcion_monitoreo_eventos,f
  3916     0BA6  0C4D               	rrf	??_funcion_monitoreo_eventos,w
  3917     0BA7  3901               	andlw	1
  3918     0BA8  00D2               	movwf	funcion_monitoreo_eventos@hall
  3919     0BA9                     l3605:
  3920                           
  3921                           ;main.c: 277:     LCD_Clear();
  3922     0BA9  160A  118A  2730  120A  158A  	fcall	_LCD_Clear
  3923     0BAE                     l3607:
  3924                           
  3925                           ;main.c: 278:     LCD_String_xy(0,0,"EVENTOS");
  3926     0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  3927     0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  3928     0BB0  01A0               	clrf	LCD_String_xy@pos
  3929     0BB1  307E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3930     0BB2  00A1               	movwf	LCD_String_xy@msg
  3931     0BB3  3000               	movlw	0
  3932     0BB4  120A  158A  2103  120A  158A  	fcall	_LCD_String_xy
  3933     0BB9                     l3609:
  3934                           
  3935                           ;main.c: 279:     LCD_Command(0xC0);
  3936     0BB9  30C0               	movlw	192
  3937     0BBA  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  3938     0BBF                     l3611:
  3939                           
  3940                           ;main.c: 280:     sprintf(StringTemperature, "PU: %d  VE: %d", ir, hall);
  3941     0BBF  30B0               	movlw	(low (_StringTemperature| 0))& (0+255)
  3942     0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  3943     0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  3944     0BC2  00BA               	movwf	sprintf@s
  3945     0BC3  305A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  3946     0BC4  00BB               	movwf	sprintf@fmt
  3947     0BC5  0851               	movf	funcion_monitoreo_eventos@ir,w
  3948     0BC6  00CD               	movwf	??_funcion_monitoreo_eventos
  3949     0BC7  01CE               	clrf	??_funcion_monitoreo_eventos+1
  3950     0BC8  084D               	movf	??_funcion_monitoreo_eventos,w
  3951     0BC9  00BC               	movwf	?_sprintf+2
  3952     0BCA  084E               	movf	??_funcion_monitoreo_eventos+1,w
  3953     0BCB  00BD               	movwf	?_sprintf+3
  3954     0BCC  0852               	movf	funcion_monitoreo_eventos@hall,w
  3955     0BCD  00CF               	movwf	??_funcion_monitoreo_eventos+2
  3956     0BCE  01D0               	clrf	??_funcion_monitoreo_eventos+3
  3957     0BCF  084F               	movf	??_funcion_monitoreo_eventos+2,w
  3958     0BD0  00BE               	movwf	?_sprintf+4
  3959     0BD1  0850               	movf	??_funcion_monitoreo_eventos+3,w
  3960     0BD2  00BF               	movwf	?_sprintf+5
  3961     0BD3  160A  118A  2792  120A  158A  	fcall	_sprintf
  3962     0BD8                     l3613:
  3963                           
  3964                           ;main.c: 281:     LCD_String(StringTemperature);
  3965     0BD8  30B0               	movlw	(low (_StringTemperature| 0))& (0+255)
  3966     0BD9  00F6               	movwf	LCD_String@msg
  3967     0BDA  3000               	movlw	0
  3968     0BDB  00F7               	movwf	LCD_String@msg+1
  3969     0BDC  160A  118A  27DA  120A  158A  	fcall	_LCD_String
  3970     0BE1                     l3615:
  3971                           
  3972                           ;main.c: 282:     _delay((unsigned long)((500)*(8000000/4000.0)));
  3973     0BE1  3006               	movlw	6
  3974     0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  3975     0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  3976     0BE4  00CF               	movwf	??_funcion_monitoreo_eventos+2
  3977     0BE5  3013               	movlw	19
  3978     0BE6  00CE               	movwf	??_funcion_monitoreo_eventos+1
  3979     0BE7  30AD               	movlw	173
  3980     0BE8  00CD               	movwf	??_funcion_monitoreo_eventos
  3981     0BE9                     u4317:
  3982     0BE9  0BCD               	decfsz	??_funcion_monitoreo_eventos,f
  3983     0BEA  2BE9               	goto	u4317
  3984     0BEB  0BCE               	decfsz	??_funcion_monitoreo_eventos+1,f
  3985     0BEC  2BE9               	goto	u4317
  3986     0BED  0BCF               	decfsz	??_funcion_monitoreo_eventos+2,f
  3987     0BEE  2BE9               	goto	u4317
  3988     0BEF                     l3617:
  3989                           
  3990                           ;main.c: 284:     if (PORTAbits.RA2 == 1 && PORTAbits.RA3 == 1){
  3991     0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  3992     0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  3993     0BF1  1D05               	btfss	5,2	;volatile
  3994     0BF2  2BF4               	goto	u4071
  3995     0BF3  2BF5               	goto	u4070
  3996     0BF4                     u4071:
  3997     0BF4  2BFE               	goto	l3623
  3998     0BF5                     u4070:
  3999     0BF5                     l3619:
  4000     0BF5  1D85               	btfss	5,3	;volatile
  4001     0BF6  2BF8               	goto	u4081
  4002     0BF7  2BF9               	goto	u4080
  4003     0BF8                     u4081:
  4004     0BF8  2BFE               	goto	l3623
  4005     0BF9                     u4080:
  4006     0BF9                     l3621:
  4007                           
  4008                           ;main.c: 285:         puerta_ventana = 1;
  4009     0BF9  3001               	movlw	1
  4010     0BFA  00E6               	movwf	_puerta_ventana
  4011     0BFB  3000               	movlw	0
  4012     0BFC  00E7               	movwf	_puerta_ventana+1
  4013                           
  4014                           ;main.c: 286:     }
  4015     0BFD  2C00               	goto	l3625
  4016     0BFE                     l3623:
  4017                           
  4018                           ;main.c: 288:         puerta_ventana = 0;
  4019     0BFE  01E6               	clrf	_puerta_ventana
  4020     0BFF  01E7               	clrf	_puerta_ventana+1
  4021     0C00                     l3625:
  4022                           
  4023                           ;main.c: 290:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4024     0C00  3006               	movlw	6
  4025     0C01  1283               	bcf	3,5	;RP0=0, select bank0
  4026     0C02  1303               	bcf	3,6	;RP1=0, select bank0
  4027     0C03  00CF               	movwf	??_funcion_monitoreo_eventos+2
  4028     0C04  3013               	movlw	19
  4029     0C05  00CE               	movwf	??_funcion_monitoreo_eventos+1
  4030     0C06  30AD               	movlw	173
  4031     0C07  00CD               	movwf	??_funcion_monitoreo_eventos
  4032     0C08                     u4327:
  4033     0C08  0BCD               	decfsz	??_funcion_monitoreo_eventos,f
  4034     0C09  2C08               	goto	u4327
  4035     0C0A  0BCE               	decfsz	??_funcion_monitoreo_eventos+1,f
  4036     0C0B  2C08               	goto	u4327
  4037     0C0C  0BCF               	decfsz	??_funcion_monitoreo_eventos+2,f
  4038     0C0D  2C08               	goto	u4327
  4039     0C0E                     l283:
  4040     0C0E  0008               	return
  4041     0C0F                     __end_of_funcion_monitoreo_eventos:
  4042                           
  4043                           	psect	text10
  4044     0DC6                     __ptext10:	
  4045 ;; *************** function _funcion_monitoreo_ambiental *****************
  4046 ;; Defined at:
  4047 ;;		line 252 in file "main.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;		None
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  value_adc       2   51[BANK0 ] int 
  4052 ;;  temperatura     2   49[BANK0 ] unsigned int 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4062 ;;      Params:         0       0       0       0       0
  4063 ;;      Locals:         0       4       0       0       0
  4064 ;;      Temps:          0       3       0       0       0
  4065 ;;      Totals:         0       7       0       0       0
  4066 ;;Total ram usage:        7 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 6
  4069 ;; This function calls:
  4070 ;;		_LCD_Clear
  4071 ;;		_LCD_Command
  4072 ;;		_LCD_String
  4073 ;;		_LCD_String_xy
  4074 ;;		___flmul
  4075 ;;		___fltol
  4076 ;;		___xxtofl
  4077 ;;		_adc_read
  4078 ;;		_sprintf
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084     0DC6                     _funcion_monitoreo_ambiental:	
  4085                           ;psect for function _funcion_monitoreo_ambiental
  4086                           
  4087     0DC6                     l3583:	
  4088                           ;incstack = 0
  4089                           ; Regs used in _funcion_monitoreo_ambiental: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  4090                           
  4091                           
  4092                           ;main.c: 253:         LCD_Clear();
  4093     0DC6  160A  118A  2730  120A  158A  	fcall	_LCD_Clear
  4094     0DCB                     l3585:
  4095                           
  4096                           ;main.c: 254:         LCD_String_xy(0,0,"AMBIENTAL");
  4097     0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4098     0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4099     0DCD  01A0               	clrf	LCD_String_xy@pos
  4100     0DCE  3074               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4101     0DCF  00A1               	movwf	LCD_String_xy@msg
  4102     0DD0  3000               	movlw	0
  4103     0DD1  120A  158A  2103  120A  158A  	fcall	_LCD_String_xy
  4104     0DD6                     l3587:
  4105                           
  4106                           ;main.c: 255:         LCD_Command(0xC0);
  4107     0DD6  30C0               	movlw	192
  4108     0DD7  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  4109     0DDC                     l3589:
  4110                           
  4111                           ;main.c: 256:         unsigned int temperatura = adc_read(0);
  4112     0DDC  3000               	movlw	0
  4113     0DDD  00F3               	movwf	adc_read@channel
  4114     0DDE  00F4               	movwf	adc_read@channel+1
  4115     0DDF  120A  158A  219B  120A  158A  	fcall	_adc_read
  4116     0DE4  0874               	movf	?_adc_read+1,w
  4117     0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  4118     0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  4119     0DE7  00D2               	movwf	funcion_monitoreo_ambiental@temperatura+1
  4120     0DE8  0873               	movf	?_adc_read,w
  4121     0DE9  00D1               	movwf	funcion_monitoreo_ambiental@temperatura
  4122     0DEA                     l3591:
  4123                           
  4124                           ;main.c: 257:         luz = adc_read(1);
  4125     0DEA  3001               	movlw	1
  4126     0DEB  00F3               	movwf	adc_read@channel
  4127     0DEC  3000               	movlw	0
  4128     0DED  00F4               	movwf	adc_read@channel+1
  4129     0DEE  120A  158A  219B  120A  158A  	fcall	_adc_read
  4130     0DF3  0874               	movf	?_adc_read+1,w
  4131     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  4132     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  4133     0DF6  00E9               	movwf	_luz+1
  4134     0DF7  0873               	movf	?_adc_read,w
  4135     0DF8  00E8               	movwf	_luz
  4136     0DF9                     l3593:
  4137                           
  4138                           ;main.c: 263:         int value_adc = 1023 - (int)temperatura;
  4139     0DF9  30FF               	movlw	255
  4140     0DFA  00CE               	movwf	??_funcion_monitoreo_ambiental
  4141     0DFB  3003               	movlw	3
  4142     0DFC  00CF               	movwf	??_funcion_monitoreo_ambiental+1
  4143     0DFD  0851               	movf	funcion_monitoreo_ambiental@temperatura,w
  4144     0DFE  024E               	subwf	??_funcion_monitoreo_ambiental,w
  4145     0DFF  00D3               	movwf	funcion_monitoreo_ambiental@value_adc
  4146     0E00  0852               	movf	funcion_monitoreo_ambiental@temperatura+1,w
  4147     0E01  1C03               	skipc
  4148     0E02  0A52               	incf	funcion_monitoreo_ambiental@temperatura+1,w
  4149     0E03  024F               	subwf	??_funcion_monitoreo_ambiental+1,w
  4150     0E04  00D4               	movwf	funcion_monitoreo_ambiental@value_adc+1
  4151     0E05                     l3595:
  4152                           
  4153                           ;main.c: 264:         temp = (int)(value_adc * 0.04058);
  4154     0E05  0853               	movf	funcion_monitoreo_ambiental@value_adc,w
  4155     0E06  00F3               	movwf	___xxtofl@val
  4156     0E07  0854               	movf	funcion_monitoreo_ambiental@value_adc+1,w
  4157     0E08  00F4               	movwf	___xxtofl@val+1
  4158     0E09  3000               	movlw	0
  4159     0E0A  1BF4               	btfsc	___xxtofl@val+1,7
  4160     0E0B  30FF               	movlw	255
  4161     0E0C  00F5               	movwf	___xxtofl@val+2
  4162     0E0D  00F6               	movwf	___xxtofl@val+3
  4163     0E0E  3001               	movlw	1
  4164     0E0F  120A  158A  2669  120A  158A  	fcall	___xxtofl
  4165     0E14  0876               	movf	?___xxtofl+3,w
  4166     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  4167     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  4168     0E17  00B1               	movwf	___flmul@a+3
  4169     0E18  0875               	movf	?___xxtofl+2,w
  4170     0E19  00B0               	movwf	___flmul@a+2
  4171     0E1A  0874               	movf	?___xxtofl+1,w
  4172     0E1B  00AF               	movwf	___flmul@a+1
  4173     0E1C  0873               	movf	?___xxtofl,w
  4174     0E1D  00AE               	movwf	___flmul@a
  4175     0E1E  303D               	movlw	61
  4176     0E1F  00AD               	movwf	___flmul@b+3
  4177     0E20  3026               	movlw	38
  4178     0E21  00AC               	movwf	___flmul@b+2
  4179     0E22  3037               	movlw	55
  4180     0E23  00AB               	movwf	___flmul@b+1
  4181     0E24  3037               	movlw	55
  4182     0E25  00AA               	movwf	___flmul@b
  4183     0E26  120A  118A  2059  120A  158A  	fcall	___flmul
  4184     0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  4185     0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  4186     0E2D  082D               	movf	?___flmul+3,w
  4187     0E2E  00C7               	movwf	___fltol@f1+3
  4188     0E2F  082C               	movf	?___flmul+2,w
  4189     0E30  00C6               	movwf	___fltol@f1+2
  4190     0E31  082B               	movf	?___flmul+1,w
  4191     0E32  00C5               	movwf	___fltol@f1+1
  4192     0E33  082A               	movf	?___flmul,w
  4193     0E34  00C4               	movwf	___fltol@f1
  4194     0E35  120A  158A  240F  120A  158A  	fcall	___fltol
  4195     0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  4196     0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  4197     0E3C  0845               	movf	?___fltol+1,w
  4198     0E3D  00EB               	movwf	_temp+1
  4199     0E3E  0844               	movf	?___fltol,w
  4200     0E3F  00EA               	movwf	_temp
  4201     0E40                     l3597:
  4202                           
  4203                           ;main.c: 265:         sprintf(StringTemperature, "TEMP: %d  L: %d", temp, luz);
  4204     0E40  30B0               	movlw	(low (_StringTemperature| 0))& (0+255)
  4205     0E41  00BA               	movwf	sprintf@s
  4206     0E42  303B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4207     0E43  00BB               	movwf	sprintf@fmt
  4208     0E44  086B               	movf	_temp+1,w
  4209     0E45  00BD               	movwf	?_sprintf+3
  4210     0E46  086A               	movf	_temp,w
  4211     0E47  00BC               	movwf	?_sprintf+2
  4212     0E48  0869               	movf	_luz+1,w
  4213     0E49  00BF               	movwf	?_sprintf+5
  4214     0E4A  0868               	movf	_luz,w
  4215     0E4B  00BE               	movwf	?_sprintf+4
  4216     0E4C  160A  118A  2792  120A  158A  	fcall	_sprintf
  4217     0E51                     l3599:
  4218                           
  4219                           ;main.c: 267:         LCD_String(StringTemperature);
  4220     0E51  30B0               	movlw	(low (_StringTemperature| 0))& (0+255)
  4221     0E52  00F6               	movwf	LCD_String@msg
  4222     0E53  3000               	movlw	0
  4223     0E54  00F7               	movwf	LCD_String@msg+1
  4224     0E55  160A  118A  27DA  120A  158A  	fcall	_LCD_String
  4225     0E5A                     l3601:
  4226                           
  4227                           ;main.c: 268:         _delay((unsigned long)((500)*(8000000/4000.0)));
  4228     0E5A  3006               	movlw	6
  4229     0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  4230     0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  4231     0E5D  00D0               	movwf	??_funcion_monitoreo_ambiental+2
  4232     0E5E  3013               	movlw	19
  4233     0E5F  00CF               	movwf	??_funcion_monitoreo_ambiental+1
  4234     0E60  30AD               	movlw	173
  4235     0E61  00CE               	movwf	??_funcion_monitoreo_ambiental
  4236     0E62                     u4337:
  4237     0E62  0BCE               	decfsz	??_funcion_monitoreo_ambiental,f
  4238     0E63  2E62               	goto	u4337
  4239     0E64  0BCF               	decfsz	??_funcion_monitoreo_ambiental+1,f
  4240     0E65  2E62               	goto	u4337
  4241     0E66  0BD0               	decfsz	??_funcion_monitoreo_ambiental+2,f
  4242     0E67  2E62               	goto	u4337
  4243     0E68                     l278:
  4244     0E68  0008               	return
  4245     0E69                     __end_of_funcion_monitoreo_ambiental:
  4246                           
  4247                           	psect	text11
  4248     1792                     __ptext11:	
  4249 ;; *************** function _sprintf *****************
  4250 ;; Defined at:
  4251 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  s               1   26[BANK0 ] PTR unsigned char 
  4254 ;;		 -> StringTemperature(32), 
  4255 ;;  fmt             1   27[BANK0 ] PTR const unsigned char 
  4256 ;;		 -> STR_8(15), STR_6(16), 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  f              11   34[BANK0 ] struct _IO_FILE
  4259 ;;  ret             2    0        int 
  4260 ;;  ap              1   33[BANK0 ] PTR void [1]
  4261 ;;		 -> ?_sprintf(2), 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  2   26[BANK0 ] int 
  4264 ;; Registers used:
  4265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4271 ;;      Params:         0       6       0       0       0
  4272 ;;      Locals:         0      12       0       0       0
  4273 ;;      Temps:          0       1       0       0       0
  4274 ;;      Totals:         0      19       0       0       0
  4275 ;;Total ram usage:       19 bytes
  4276 ;; Hardware stack levels used: 1
  4277 ;; Hardware stack levels required when called: 5
  4278 ;; This function calls:
  4279 ;;		_vfprintf
  4280 ;; This function is called by:
  4281 ;;		_funcion_monitoreo_ambiental
  4282 ;;		_funcion_monitoreo_eventos
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286     1792                     _sprintf:	
  4287                           ;psect for function _sprintf
  4288                           
  4289     1792                     l3439:	
  4290                           ;incstack = 0
  4291                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4292                           
  4293     1792  303C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4294     1793  1283               	bcf	3,5	;RP0=0, select bank0
  4295     1794  1303               	bcf	3,6	;RP1=0, select bank0
  4296     1795  00C1               	movwf	sprintf@ap
  4297     1796                     l3441:
  4298     1796  083A               	movf	sprintf@s,w
  4299     1797  00C2               	movwf	sprintf@f
  4300     1798  3000               	movlw	0
  4301     1799  00C3               	movwf	sprintf@f+1
  4302     179A                     l3443:
  4303     179A  01C4               	clrf	sprintf@f+2
  4304     179B  01C5               	clrf	sprintf@f+3
  4305     179C                     l3445:
  4306     179C  01CB               	clrf	sprintf@f+9
  4307     179D  01CC               	clrf	sprintf@f+10
  4308     179E                     l3447:
  4309     179E  3042               	movlw	low sprintf@f
  4310     179F  00B6               	movwf	vfprintf@fp
  4311     17A0  3000               	movlw	high sprintf@f
  4312     17A1  00B7               	movwf	vfprintf@fp+1
  4313     17A2  083B               	movf	sprintf@fmt,w
  4314     17A3  00B8               	movwf	vfprintf@fmt
  4315     17A4  3041               	movlw	(low (sprintf@ap| 0))& (0+255)
  4316     17A5  00B9               	movwf	vfprintf@ap
  4317     17A6  160A  118A  27B5  160A  118A  	fcall	_vfprintf
  4318     17AB                     l3449:
  4319     17AB  1283               	bcf	3,5	;RP0=0, select bank0
  4320     17AC  1303               	bcf	3,6	;RP1=0, select bank0
  4321     17AD  0844               	movf	sprintf@f+2,w
  4322     17AE  073A               	addwf	sprintf@s,w
  4323     17AF  00C0               	movwf	??_sprintf
  4324     17B0  0840               	movf	??_sprintf,w
  4325     17B1  0084               	movwf	4
  4326     17B2  1383               	bcf	3,7	;select IRP bank0
  4327     17B3  0180               	clrf	0
  4328     17B4                     l898:
  4329     17B4  0008               	return
  4330     17B5                     __end_of_sprintf:
  4331                           
  4332                           	psect	text12
  4333     17B5                     __ptext12:	
  4334 ;; *************** function _vfprintf *****************
  4335 ;; Defined at:
  4336 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  fp              2   22[BANK0 ] PTR struct _IO_FILE
  4339 ;;		 -> sprintf@f(11), 
  4340 ;;  fmt             1   24[BANK0 ] PTR const unsigned char 
  4341 ;;		 -> STR_8(15), STR_6(16), 
  4342 ;;  ap              1   25[BANK0 ] PTR PTR void 
  4343 ;;		 -> sprintf@ap(1), 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  cfmt            1    7[COMMON] PTR unsigned char 
  4346 ;;		 -> STR_8(15), STR_6(16), 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  2   22[BANK0 ] int 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4356 ;;      Params:         0       4       0       0       0
  4357 ;;      Locals:         1       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0
  4359 ;;      Totals:         1       4       0       0       0
  4360 ;;Total ram usage:        5 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 4
  4363 ;; This function calls:
  4364 ;;		_vfpfcnvrt
  4365 ;; This function is called by:
  4366 ;;		_sprintf
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370     17B5                     _vfprintf:	
  4371                           ;psect for function _vfprintf
  4372                           
  4373     17B5                     l3343:	
  4374                           ;incstack = 0
  4375                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4376                           
  4377                           
  4378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4379     17B5  1283               	bcf	3,5	;RP0=0, select bank0
  4380     17B6  1303               	bcf	3,6	;RP1=0, select bank0
  4381     17B7  0838               	movf	vfprintf@fmt,w
  4382     17B8  00F7               	movwf	vfprintf@cfmt
  4383                           
  4384                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4385     17B9  2FC9               	goto	l3347
  4386     17BA                     l3345:
  4387                           
  4388                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4389     17BA  1283               	bcf	3,5	;RP0=0, select bank0
  4390     17BB  1303               	bcf	3,6	;RP1=0, select bank0
  4391     17BC  0836               	movf	vfprintf@fp,w
  4392     17BD  00A9               	movwf	vfpfcnvrt@fp
  4393     17BE  0837               	movf	vfprintf@fp+1,w
  4394     17BF  00AA               	movwf	vfpfcnvrt@fp+1
  4395     17C0  3077               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4396     17C1  00AB               	movwf	vfpfcnvrt@fmt
  4397     17C2  0839               	movf	vfprintf@ap,w
  4398     17C3  00AC               	movwf	vfpfcnvrt@ap
  4399     17C4  120A  118A  25B5  160A  118A  	fcall	_vfpfcnvrt
  4400     17C9                     l3347:
  4401                           
  4402                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4403     17C9  0877               	movf	vfprintf@cfmt,w
  4404     17CA  0084               	movwf	4
  4405     17CB  120A  158A  200A  160A  118A  	fcall	stringdir
  4406     17D0  3A00               	xorlw	0
  4407     17D1  1D03               	skipz
  4408     17D2  2FD4               	goto	u3701
  4409     17D3  2FD5               	goto	u3700
  4410     17D4                     u3701:
  4411     17D4  2FBA               	goto	l3345
  4412     17D5                     u3700:
  4413     17D5                     l3349:
  4414                           
  4415                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4416     17D5  1283               	bcf	3,5	;RP0=0, select bank0
  4417     17D6  1303               	bcf	3,6	;RP1=0, select bank0
  4418     17D7  01B6               	clrf	?_vfprintf
  4419     17D8  01B7               	clrf	?_vfprintf+1
  4420     17D9                     l942:
  4421     17D9  0008               	return
  4422     17DA                     __end_of_vfprintf:
  4423                           
  4424                           	psect	text13
  4425     05B5                     __ptext13:	
  4426 ;; *************** function _vfpfcnvrt *****************
  4427 ;; Defined at:
  4428 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  4431 ;;		 -> sprintf@f(11), 
  4432 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  4433 ;;		 -> vfprintf@cfmt(1), 
  4434 ;;  ap              1   12[BANK0 ] PTR PTR void 
  4435 ;;		 -> sprintf@ap(1), 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  convarg         4   17[BANK0 ] struct .
  4438 ;;  c               1   21[BANK0 ] unsigned char 
  4439 ;;  cp              1   16[BANK0 ] PTR unsigned char 
  4440 ;;		 -> STR_8(15), STR_6(16), 
  4441 ;;  done            1   15[BANK0 ] _Bool 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4451 ;;      Params:         0       4       0       0       0
  4452 ;;      Locals:         0       7       0       0       0
  4453 ;;      Temps:          0       2       0       0       0
  4454 ;;      Totals:         0      13       0       0       0
  4455 ;;Total ram usage:       13 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 3
  4458 ;; This function calls:
  4459 ;;		___awdiv
  4460 ;;		___awmod
  4461 ;;		_abs
  4462 ;;		_fputc
  4463 ;; This function is called by:
  4464 ;;		_vfprintf
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468     05B5                     _vfpfcnvrt:	
  4469                           ;psect for function _vfpfcnvrt
  4470                           
  4471     05B5                     l3291:	
  4472                           ;incstack = 0
  4473                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4474                           
  4475                           
  4476                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4477     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  4478     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  4479     05B7  082B               	movf	vfpfcnvrt@fmt,w
  4480     05B8  0084               	movwf	4
  4481     05B9  0800               	movf	0,w
  4482     05BA  0084               	movwf	4
  4483     05BB  120A  158A  200A  120A  118A  	fcall	stringdir
  4484     05C0  3A25               	xorlw	37
  4485     05C1  1D03               	skipz
  4486     05C2  2DC4               	goto	u3601
  4487     05C3  2DC5               	goto	u3600
  4488     05C4                     u3601:
  4489     05C4  2E8B               	goto	l3337
  4490     05C5                     u3600:
  4491     05C5                     l3293:
  4492                           
  4493                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4494     05C5  082B               	movf	vfpfcnvrt@fmt,w
  4495     05C6  0084               	movwf	4
  4496     05C7  3001               	movlw	1
  4497     05C8  0780               	addwf	0,f
  4498     05C9                     l3295:
  4499                           
  4500                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4501     05C9  1683               	bsf	3,5	;RP0=1, select bank1
  4502     05CA  1303               	bcf	3,6	;RP1=0, select bank1
  4503     05CB  01A0               	clrf	_width^(0+128)
  4504     05CC  01A1               	clrf	(_width+1)^(0+128)
  4505     05CD  3000               	movlw	0
  4506     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  4507     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  4508     05D0  00EE               	movwf	_flags
  4509     05D1                     l3297:
  4510                           
  4511                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4512     05D1  30FF               	movlw	255
  4513     05D2  1683               	bsf	3,5	;RP0=1, select bank1
  4514     05D3  1303               	bcf	3,6	;RP1=0, select bank1
  4515     05D4  00A2               	movwf	_prec^(0+128)
  4516     05D5  30FF               	movlw	255
  4517     05D6  00A3               	movwf	(_prec^(0+128)+1)
  4518     05D7                     l3299:
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4521     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  4522     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  4523     05D9  082B               	movf	vfpfcnvrt@fmt,w
  4524     05DA  0084               	movwf	4
  4525     05DB  0800               	movf	0,w
  4526     05DC  00B0               	movwf	vfpfcnvrt@cp
  4527     05DD                     l3301:
  4528                           
  4529                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4530     05DD  0830               	movf	vfpfcnvrt@cp,w
  4531     05DE  0084               	movwf	4
  4532     05DF  120A  158A  200A  120A  118A  	fcall	stringdir
  4533     05E4  3A64               	xorlw	100
  4534     05E5  1903               	skipnz
  4535     05E6  2DE8               	goto	u3611
  4536     05E7  2DE9               	goto	u3610
  4537     05E8                     u3611:
  4538     05E8  2DF5               	goto	l3305
  4539     05E9                     u3610:
  4540     05E9                     l3303:
  4541     05E9  0830               	movf	vfpfcnvrt@cp,w
  4542     05EA  0084               	movwf	4
  4543     05EB  120A  158A  200A  120A  118A  	fcall	stringdir
  4544     05F0  3A69               	xorlw	105
  4545     05F1  1D03               	skipz
  4546     05F2  2DF4               	goto	u3621
  4547     05F3  2DF5               	goto	u3620
  4548     05F4                     u3621:
  4549     05F4  2E84               	goto	l3333
  4550     05F5                     u3620:
  4551     05F5                     l3305:
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4554     05F5  082C               	movf	vfpfcnvrt@ap,w
  4555     05F6  0084               	movwf	4
  4556     05F7  1383               	bcf	3,7	;select IRP bank0
  4557     05F8  0800               	movf	0,w
  4558     05F9  00FF               	movwf	btemp+1
  4559     05FA  3002               	movlw	2
  4560     05FB  0780               	addwf	0,f
  4561     05FC  087F               	movf	btemp+1,w
  4562     05FD  0084               	movwf	4
  4563     05FE  0800               	movf	0,w
  4564     05FF  00B1               	movwf	vfpfcnvrt@convarg
  4565     0600  0A84               	incf	4,f
  4566     0601  0800               	movf	0,w
  4567     0602  00B2               	movwf	vfpfcnvrt@convarg+1
  4568     0603                     l3307:
  4569                           
  4570                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4571     0603  082B               	movf	vfpfcnvrt@fmt,w
  4572     0604  0084               	movwf	4
  4573     0605  0830               	movf	vfpfcnvrt@cp,w
  4574     0606  3E01               	addlw	1
  4575     0607  0080               	movwf	0
  4576     0608                     l3309:
  4577                           
  4578                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4579     0608  3020               	movlw	32
  4580     0609  00B5               	movwf	vfpfcnvrt@c
  4581     060A                     l3311:
  4582                           
  4583                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4584     060A  1BB2               	btfsc	vfpfcnvrt@convarg+1,7
  4585     060B  2E0D               	goto	u3631
  4586     060C  2E0F               	goto	u3630
  4587     060D                     u3631:
  4588     060D  3001               	movlw	1
  4589     060E  2E10               	goto	u3640
  4590     060F                     u3630:
  4591     060F  3000               	movlw	0
  4592     0610                     u3640:
  4593     0610  00AF               	movwf	vfpfcnvrt@done
  4594     0611                     l3313:
  4595                           
  4596                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4597     0611  3001               	movlw	1
  4598     0612  02B5               	subwf	vfpfcnvrt@c,f
  4599     0613  0835               	movf	vfpfcnvrt@c,w
  4600     0614  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4601     0615  0084               	movwf	4
  4602     0616  300A               	movlw	10
  4603     0617  00F3               	movwf	___awmod@divisor
  4604     0618  3000               	movlw	0
  4605     0619  00F4               	movwf	___awmod@divisor+1
  4606     061A  0832               	movf	vfpfcnvrt@convarg+1,w
  4607     061B  00F6               	movwf	___awmod@dividend+1
  4608     061C  0831               	movf	vfpfcnvrt@convarg,w
  4609     061D  00F5               	movwf	___awmod@dividend
  4610     061E  120A  158A  2212  120A  118A  	fcall	___awmod
  4611     0623  0874               	movf	?___awmod+1,w
  4612     0624  1283               	bcf	3,5	;RP0=0, select bank0
  4613     0625  1303               	bcf	3,6	;RP1=0, select bank0
  4614     0626  00A3               	movwf	abs@a+1
  4615     0627  0873               	movf	?___awmod,w
  4616     0628  00A2               	movwf	abs@a
  4617     0629  160A  118A  2740  120A  118A  	fcall	_abs
  4618     062E  1283               	bcf	3,5	;RP0=0, select bank0
  4619     062F  1303               	bcf	3,6	;RP1=0, select bank0
  4620     0630  0822               	movf	?_abs,w
  4621     0631  3E30               	addlw	48
  4622     0632  1783               	bsf	3,7	;select IRP bank3
  4623     0633  0080               	movwf	0
  4624     0634                     l3315:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4627     0634  300A               	movlw	10
  4628     0635  00F3               	movwf	___awdiv@divisor
  4629     0636  3000               	movlw	0
  4630     0637  00F4               	movwf	___awdiv@divisor+1
  4631     0638  0832               	movf	vfpfcnvrt@convarg+1,w
  4632     0639  00F6               	movwf	___awdiv@dividend+1
  4633     063A  0831               	movf	vfpfcnvrt@convarg,w
  4634     063B  00F5               	movwf	___awdiv@dividend
  4635     063C  120A  118A  2794  120A  118A  	fcall	___awdiv
  4636     0641  0874               	movf	?___awdiv+1,w
  4637     0642  1283               	bcf	3,5	;RP0=0, select bank0
  4638     0643  1303               	bcf	3,6	;RP1=0, select bank0
  4639     0644  00B2               	movwf	vfpfcnvrt@convarg+1
  4640     0645  0873               	movf	?___awdiv,w
  4641     0646  00B1               	movwf	vfpfcnvrt@convarg
  4642     0647                     l3317:
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4645     0647  0831               	movf	vfpfcnvrt@convarg,w
  4646     0648  0432               	iorwf	vfpfcnvrt@convarg+1,w
  4647     0649  1903               	btfsc	3,2
  4648     064A  2E4C               	goto	u3651
  4649     064B  2E4D               	goto	u3650
  4650     064C                     u3651:
  4651     064C  2E52               	goto	l3321
  4652     064D                     u3650:
  4653     064D                     l3319:
  4654     064D  0835               	movf	vfpfcnvrt@c,w
  4655     064E  1D03               	btfss	3,2
  4656     064F  2E51               	goto	u3661
  4657     0650  2E52               	goto	u3660
  4658     0651                     u3661:
  4659     0651  2E11               	goto	l3313
  4660     0652                     u3660:
  4661     0652                     l3321:
  4662                           
  4663                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4664     0652  0835               	movf	vfpfcnvrt@c,w
  4665     0653  1903               	btfsc	3,2
  4666     0654  2E56               	goto	u3671
  4667     0655  2E57               	goto	u3670
  4668     0656                     u3671:
  4669     0656  2E7D               	goto	l3331
  4670     0657                     u3670:
  4671     0657                     l3323:
  4672     0657  082F               	movf	vfpfcnvrt@done,w
  4673     0658  1903               	btfsc	3,2
  4674     0659  2E5B               	goto	u3681
  4675     065A  2E5C               	goto	u3680
  4676     065B                     u3681:
  4677     065B  2E7D               	goto	l3331
  4678     065C                     u3680:
  4679     065C                     l3325:
  4680                           
  4681                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4682     065C  3001               	movlw	1
  4683     065D  02B5               	subwf	vfpfcnvrt@c,f
  4684     065E  0835               	movf	vfpfcnvrt@c,w
  4685     065F  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4686     0660  0084               	movwf	4
  4687     0661  302D               	movlw	45
  4688     0662  1783               	bsf	3,7	;select IRP bank3
  4689     0663  0080               	movwf	0
  4690     0664  2E7D               	goto	l3331
  4691     0665                     l3327:
  4692                           
  4693                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4694     0665  0835               	movf	vfpfcnvrt@c,w
  4695     0666  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4696     0667  0084               	movwf	4
  4697     0668  1783               	bsf	3,7	;select IRP bank3
  4698     0669  0800               	movf	0,w
  4699     066A  00AD               	movwf	??_vfpfcnvrt
  4700     066B  01AE               	clrf	??_vfpfcnvrt+1
  4701     066C  082D               	movf	??_vfpfcnvrt,w
  4702     066D  00F3               	movwf	fputc@c
  4703     066E  082E               	movf	??_vfpfcnvrt+1,w
  4704     066F  00F4               	movwf	fputc@c+1
  4705     0670  0829               	movf	vfpfcnvrt@fp,w
  4706     0671  00F5               	movwf	fputc@fp
  4707     0672  082A               	movf	vfpfcnvrt@fp+1,w
  4708     0673  00F6               	movwf	fputc@fp+1
  4709     0674  120A  158A  2485  120A  118A  	fcall	_fputc
  4710     0679                     l3329:
  4711     0679  3001               	movlw	1
  4712     067A  1283               	bcf	3,5	;RP0=0, select bank0
  4713     067B  1303               	bcf	3,6	;RP1=0, select bank0
  4714     067C  07B5               	addwf	vfpfcnvrt@c,f
  4715     067D                     l3331:
  4716                           
  4717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4718     067D  3020               	movlw	32
  4719     067E  0635               	xorwf	vfpfcnvrt@c,w
  4720     067F  1D03               	btfss	3,2
  4721     0680  2E82               	goto	u3691
  4722     0681  2E83               	goto	u3690
  4723     0682                     u3691:
  4724     0682  2E65               	goto	l3327
  4725     0683                     u3690:
  4726     0683  2EA4               	goto	l936
  4727     0684                     l3333:
  4728                           
  4729                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4730     0684  1283               	bcf	3,5	;RP0=0, select bank0
  4731     0685  1303               	bcf	3,6	;RP1=0, select bank0
  4732     0686  082B               	movf	vfpfcnvrt@fmt,w
  4733     0687  0084               	movwf	4
  4734     0688  3001               	movlw	1
  4735     0689  0780               	addwf	0,f
  4736     068A  2EA4               	goto	l936
  4737     068B                     l3337:
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4740     068B  082B               	movf	vfpfcnvrt@fmt,w
  4741     068C  0084               	movwf	4
  4742     068D  0800               	movf	0,w
  4743     068E  0084               	movwf	4
  4744     068F  120A  158A  200A  120A  118A  	fcall	stringdir
  4745     0694  00AD               	movwf	??_vfpfcnvrt
  4746     0695  01AE               	clrf	??_vfpfcnvrt+1
  4747     0696  082D               	movf	??_vfpfcnvrt,w
  4748     0697  00F3               	movwf	fputc@c
  4749     0698  082E               	movf	??_vfpfcnvrt+1,w
  4750     0699  00F4               	movwf	fputc@c+1
  4751     069A  0829               	movf	vfpfcnvrt@fp,w
  4752     069B  00F5               	movwf	fputc@fp
  4753     069C  082A               	movf	vfpfcnvrt@fp+1,w
  4754     069D  00F6               	movwf	fputc@fp+1
  4755     069E  120A  158A  2485  120A  118A  	fcall	_fputc
  4756     06A3  2E84               	goto	l3333
  4757     06A4                     l936:
  4758     06A4  0008               	return
  4759     06A5                     __end_of_vfpfcnvrt:
  4760                           
  4761                           	psect	text14
  4762     0C85                     __ptext14:	
  4763 ;; *************** function _fputc *****************
  4764 ;; Defined at:
  4765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  c               2    3[COMMON] int 
  4768 ;;  fp              2    5[COMMON] PTR struct _IO_FILE
  4769 ;;		 -> sprintf@f(11), 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2    3[COMMON] int 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4781 ;;      Params:         4       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0
  4783 ;;      Temps:          0       9       0       0       0
  4784 ;;      Totals:         4       9       0       0       0
  4785 ;;Total ram usage:       13 bytes
  4786 ;; Hardware stack levels used: 1
  4787 ;; Hardware stack levels required when called: 2
  4788 ;; This function calls:
  4789 ;;		_putch
  4790 ;; This function is called by:
  4791 ;;		_vfpfcnvrt
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795     0C85                     _fputc:	
  4796                           ;psect for function _fputc
  4797                           
  4798     0C85                     l3269:	
  4799                           ;incstack = 0
  4800                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4801                           
  4802     0C85  0875               	movf	fputc@fp,w
  4803     0C86  0476               	iorwf	fputc@fp+1,w
  4804     0C87  1903               	btfsc	3,2
  4805     0C88  2C8A               	goto	u3541
  4806     0C89  2C8B               	goto	u3540
  4807     0C8A                     u3541:
  4808     0C8A  2C91               	goto	l3273
  4809     0C8B                     u3540:
  4810     0C8B                     l3271:
  4811     0C8B  0875               	movf	fputc@fp,w
  4812     0C8C  0476               	iorwf	fputc@fp+1,w
  4813     0C8D  1D03               	btfss	3,2
  4814     0C8E  2C90               	goto	u3551
  4815     0C8F  2C91               	goto	u3550
  4816     0C90                     u3551:
  4817     0C90  2C98               	goto	l3275
  4818     0C91                     u3550:
  4819     0C91                     l3273:
  4820     0C91  0873               	movf	fputc@c,w
  4821     0C92  120A  118A  27FB  120A  158A  	fcall	_putch
  4822     0C97  2D24               	goto	l961
  4823     0C98                     l3275:
  4824     0C98  0875               	movf	fputc@fp,w
  4825     0C99  3E09               	addlw	9
  4826     0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  4827     0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  4828     0C9C  00A0               	movwf	??_fputc
  4829     0C9D  0876               	movf	fputc@fp+1,w
  4830     0C9E  1803               	skipnc
  4831     0C9F  3E01               	addlw	1
  4832     0CA0  3E00               	addlw	0
  4833     0CA1  00A1               	movwf	??_fputc+1
  4834     0CA2  0820               	movf	??_fputc,w
  4835     0CA3  0084               	movwf	4
  4836     0CA4  1783               	bsf	3,7
  4837     0CA5  1C21               	btfss	??_fputc+1,0
  4838     0CA6  1383               	bcf	3,7
  4839     0CA7  0800               	movf	0,w
  4840     0CA8  00A2               	movwf	??_fputc+2
  4841     0CA9  0A84               	incf	4,f
  4842     0CAA  0800               	movf	0,w
  4843     0CAB  00A3               	movwf	??_fputc+3
  4844     0CAC  0822               	movf	??_fputc+2,w
  4845     0CAD  0423               	iorwf	??_fputc+3,w
  4846     0CAE  1903               	btfsc	3,2
  4847     0CAF  2CB1               	goto	u3561
  4848     0CB0  2CB2               	goto	u3560
  4849     0CB1                     u3561:
  4850     0CB1  2CE4               	goto	l3279
  4851     0CB2                     u3560:
  4852     0CB2                     l3277:
  4853     0CB2  0875               	movf	fputc@fp,w
  4854     0CB3  3E09               	addlw	9
  4855     0CB4  00A0               	movwf	??_fputc
  4856     0CB5  0876               	movf	fputc@fp+1,w
  4857     0CB6  1803               	skipnc
  4858     0CB7  3E01               	addlw	1
  4859     0CB8  3E00               	addlw	0
  4860     0CB9  00A1               	movwf	??_fputc+1
  4861     0CBA  0820               	movf	??_fputc,w
  4862     0CBB  0084               	movwf	4
  4863     0CBC  1783               	bsf	3,7
  4864     0CBD  1C21               	btfss	??_fputc+1,0
  4865     0CBE  1383               	bcf	3,7
  4866     0CBF  0800               	movf	0,w
  4867     0CC0  00A2               	movwf	??_fputc+2
  4868     0CC1  0A84               	incf	4,f
  4869     0CC2  0800               	movf	0,w
  4870     0CC3  00A3               	movwf	??_fputc+3
  4871     0CC4  0875               	movf	fputc@fp,w
  4872     0CC5  3E02               	addlw	2
  4873     0CC6  00A4               	movwf	??_fputc+4
  4874     0CC7  0876               	movf	fputc@fp+1,w
  4875     0CC8  1803               	skipnc
  4876     0CC9  3E01               	addlw	1
  4877     0CCA  3E00               	addlw	0
  4878     0CCB  00A5               	movwf	??_fputc+5
  4879     0CCC  0824               	movf	??_fputc+4,w
  4880     0CCD  0084               	movwf	4
  4881     0CCE  1783               	bsf	3,7
  4882     0CCF  1C25               	btfss	??_fputc+5,0
  4883     0CD0  1383               	bcf	3,7
  4884     0CD1  0800               	movf	0,w
  4885     0CD2  00A6               	movwf	??_fputc+6
  4886     0CD3  0A84               	incf	4,f
  4887     0CD4  0800               	movf	0,w
  4888     0CD5  00A7               	movwf	??_fputc+7
  4889     0CD6  0827               	movf	??_fputc+7,w
  4890     0CD7  3A80               	xorlw	128
  4891     0CD8  00A8               	movwf	??_fputc+8
  4892     0CD9  0823               	movf	??_fputc+3,w
  4893     0CDA  3A80               	xorlw	128
  4894     0CDB  0228               	subwf	??_fputc+8,w
  4895     0CDC  1D03               	skipz
  4896     0CDD  2CE0               	goto	u3575
  4897     0CDE  0822               	movf	??_fputc+2,w
  4898     0CDF  0226               	subwf	??_fputc+6,w
  4899     0CE0                     u3575:
  4900     0CE0  1803               	skipnc
  4901     0CE1  2CE3               	goto	u3571
  4902     0CE2  2CE4               	goto	u3570
  4903     0CE3                     u3571:
  4904     0CE3  2D24               	goto	l961
  4905     0CE4                     u3570:
  4906     0CE4                     l3279:
  4907     0CE4  0875               	movf	fputc@fp,w
  4908     0CE5  0084               	movwf	4
  4909     0CE6  1783               	bsf	3,7
  4910     0CE7  1C76               	btfss	fputc@fp+1,0
  4911     0CE8  1383               	bcf	3,7
  4912     0CE9  0800               	movf	0,w
  4913     0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  4914     0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  4915     0CEC  00A0               	movwf	??_fputc
  4916     0CED  0A84               	incf	4,f
  4917     0CEE  0800               	movf	0,w
  4918     0CEF  00A1               	movwf	??_fputc+1
  4919     0CF0  0875               	movf	fputc@fp,w
  4920     0CF1  3E02               	addlw	2
  4921     0CF2  00A2               	movwf	??_fputc+2
  4922     0CF3  0876               	movf	fputc@fp+1,w
  4923     0CF4  1803               	skipnc
  4924     0CF5  3E01               	addlw	1
  4925     0CF6  3E00               	addlw	0
  4926     0CF7  00A3               	movwf	??_fputc+3
  4927     0CF8  0822               	movf	??_fputc+2,w
  4928     0CF9  0084               	movwf	4
  4929     0CFA  1783               	bsf	3,7
  4930     0CFB  1C23               	btfss	??_fputc+3,0
  4931     0CFC  1383               	bcf	3,7
  4932     0CFD  0800               	movf	0,w
  4933     0CFE  0720               	addwf	??_fputc,w
  4934     0CFF  00A5               	movwf	??_fputc+5
  4935     0D00  0821               	movf	??_fputc+1,w
  4936     0D01  00A4               	movwf	??_fputc+4
  4937     0D02  1803               	skipnc
  4938     0D03  0AA4               	incf	??_fputc+4,f
  4939     0D04  1F80               	btfss	0,7
  4940     0D05  2D07               	goto	u3580
  4941     0D06  03A4               	decf	??_fputc+4,f
  4942     0D07                     u3580:
  4943     0D07  1283               	bcf	3,5	;RP0=0, select bank0
  4944     0D08  1303               	bcf	3,6	;RP1=0, select bank0
  4945     0D09  0824               	movf	??_fputc+4,w
  4946     0D0A  00A6               	movwf	??_fputc+6
  4947     0D0B  0825               	movf	??_fputc+5,w
  4948     0D0C  0084               	movwf	4
  4949     0D0D  1783               	bsf	3,7
  4950     0D0E  1C26               	btfss	??_fputc+6,0
  4951     0D0F  1383               	bcf	3,7
  4952     0D10  0873               	movf	fputc@c,w
  4953     0D11  0080               	movwf	0
  4954     0D12  0875               	movf	fputc@fp,w
  4955     0D13  3E02               	addlw	2
  4956     0D14  00A0               	movwf	??_fputc
  4957     0D15  0876               	movf	fputc@fp+1,w
  4958     0D16  1803               	skipnc
  4959     0D17  3E01               	addlw	1
  4960     0D18  3E00               	addlw	0
  4961     0D19  00A1               	movwf	??_fputc+1
  4962     0D1A  0820               	movf	??_fputc,w
  4963     0D1B  0084               	movwf	4
  4964     0D1C  1783               	bsf	3,7
  4965     0D1D  1C21               	btfss	??_fputc+1,0
  4966     0D1E  1383               	bcf	3,7
  4967     0D1F  3001               	movlw	1
  4968     0D20  0780               	addwf	0,f
  4969     0D21  0A84               	incf	4,f
  4970     0D22  1803               	skipnc
  4971     0D23  0A80               	incf	0,f
  4972     0D24                     l961:
  4973     0D24  0008               	return
  4974     0D25                     __end_of_fputc:
  4975                           
  4976                           	psect	text15
  4977     07FB                     __ptext15:	
  4978 ;; *************** function _putch *****************
  4979 ;; Defined at:
  4980 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  c               1    wreg     unsigned char 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  c               1    0[COMMON] unsigned char 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4994 ;;      Params:         0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0
  4996 ;;      Temps:          0       0       0       0       0
  4997 ;;      Totals:         0       0       0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_fputc
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008     07FB                     _putch:	
  5009                           ;psect for function _putch
  5010                           
  5011     07FB                     l972:	
  5012                           ;incstack = 0
  5013                           ; Regs used in _putch: [wreg]
  5014                           
  5015     07FB  0008               	return
  5016     07FC                     __end_of_putch:
  5017                           
  5018                           	psect	text16
  5019     1740                     __ptext16:	
  5020 ;; *************** function _abs *****************
  5021 ;; Defined at:
  5022 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  a               2    2[BANK0 ] int 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  2    2[BANK0 ] int 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5036 ;;      Params:         0       2       0       0       0
  5037 ;;      Locals:         0       0       0       0       0
  5038 ;;      Temps:          0       2       0       0       0
  5039 ;;      Totals:         0       4       0       0       0
  5040 ;;Total ram usage:        4 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 1
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_vfpfcnvrt
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050     1740                     _abs:	
  5051                           ;psect for function _abs
  5052                           
  5053     1740                     l3283:	
  5054                           ;incstack = 0
  5055                           ; Regs used in _abs: [wreg+status,2+status,0]
  5056                           
  5057     1740  1283               	bcf	3,5	;RP0=0, select bank0
  5058     1741  1303               	bcf	3,6	;RP1=0, select bank0
  5059     1742  1BA3               	btfsc	abs@a+1,7
  5060     1743  2F45               	goto	u3591
  5061     1744  2F46               	goto	u3590
  5062     1745                     u3591:
  5063     1745  2F47               	goto	l3287
  5064     1746                     u3590:
  5065     1746                     l3285:
  5066     1746  2F52               	goto	l949
  5067     1747                     l3287:
  5068     1747  0922               	comf	abs@a,w
  5069     1748  00A4               	movwf	??_abs
  5070     1749  0923               	comf	abs@a+1,w
  5071     174A  00A5               	movwf	??_abs+1
  5072     174B  0AA4               	incf	??_abs,f
  5073     174C  1903               	skipnz
  5074     174D  0AA5               	incf	??_abs+1,f
  5075     174E  0824               	movf	??_abs,w
  5076     174F  00A2               	movwf	?_abs
  5077     1750  0825               	movf	??_abs+1,w
  5078     1751  00A3               	movwf	?_abs+1
  5079     1752                     l949:
  5080     1752  0008               	return
  5081     1753                     __end_of_abs:
  5082                           
  5083                           	psect	text17
  5084     0A12                     __ptext17:	
  5085 ;; *************** function ___awmod *****************
  5086 ;; Defined at:
  5087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  divisor         2    3[COMMON] int 
  5090 ;;  dividend        2    5[COMMON] int 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  sign            1    1[BANK0 ] unsigned char 
  5093 ;;  counter         1    0[BANK0 ] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  2    3[COMMON] int 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5103 ;;      Params:         4       0       0       0       0
  5104 ;;      Locals:         0       2       0       0       0
  5105 ;;      Temps:          0       0       0       0       0
  5106 ;;      Totals:         4       2       0       0       0
  5107 ;;Total ram usage:        6 bytes
  5108 ;; Hardware stack levels used: 1
  5109 ;; Hardware stack levels required when called: 1
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_vfpfcnvrt
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117     0A12                     ___awmod:	
  5118                           ;psect for function ___awmod
  5119                           
  5120     0A12                     l3231:	
  5121                           ;incstack = 0
  5122                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5123                           
  5124     0A12  1283               	bcf	3,5	;RP0=0, select bank0
  5125     0A13  1303               	bcf	3,6	;RP1=0, select bank0
  5126     0A14  01A1               	clrf	___awmod@sign
  5127     0A15                     l3233:
  5128     0A15  1FF6               	btfss	___awmod@dividend+1,7
  5129     0A16  2A18               	goto	u3451
  5130     0A17  2A19               	goto	u3450
  5131     0A18                     u3451:
  5132     0A18  2A20               	goto	l3239
  5133     0A19                     u3450:
  5134     0A19                     l3235:
  5135     0A19  09F5               	comf	___awmod@dividend,f
  5136     0A1A  09F6               	comf	___awmod@dividend+1,f
  5137     0A1B  0AF5               	incf	___awmod@dividend,f
  5138     0A1C  1903               	skipnz
  5139     0A1D  0AF6               	incf	___awmod@dividend+1,f
  5140     0A1E                     l3237:
  5141     0A1E  3001               	movlw	1
  5142     0A1F  00A1               	movwf	___awmod@sign
  5143     0A20                     l3239:
  5144     0A20  1FF4               	btfss	___awmod@divisor+1,7
  5145     0A21  2A23               	goto	u3461
  5146     0A22  2A24               	goto	u3460
  5147     0A23                     u3461:
  5148     0A23  2A29               	goto	l3243
  5149     0A24                     u3460:
  5150     0A24                     l3241:
  5151     0A24  09F3               	comf	___awmod@divisor,f
  5152     0A25  09F4               	comf	___awmod@divisor+1,f
  5153     0A26  0AF3               	incf	___awmod@divisor,f
  5154     0A27  1903               	skipnz
  5155     0A28  0AF4               	incf	___awmod@divisor+1,f
  5156     0A29                     l3243:
  5157     0A29  0873               	movf	___awmod@divisor,w
  5158     0A2A  0474               	iorwf	___awmod@divisor+1,w
  5159     0A2B  1903               	btfsc	3,2
  5160     0A2C  2A2E               	goto	u3471
  5161     0A2D  2A2F               	goto	u3470
  5162     0A2E                     u3471:
  5163     0A2E  2A5C               	goto	l3261
  5164     0A2F                     u3470:
  5165     0A2F                     l3245:
  5166     0A2F  3001               	movlw	1
  5167     0A30  00A0               	movwf	___awmod@counter
  5168     0A31  2A3B               	goto	l3251
  5169     0A32                     l3247:
  5170     0A32  3001               	movlw	1
  5171     0A33                     u3485:
  5172     0A33  1003               	clrc
  5173     0A34  0DF3               	rlf	___awmod@divisor,f
  5174     0A35  0DF4               	rlf	___awmod@divisor+1,f
  5175     0A36  3EFF               	addlw	-1
  5176     0A37  1D03               	skipz
  5177     0A38  2A33               	goto	u3485
  5178     0A39                     l3249:
  5179     0A39  3001               	movlw	1
  5180     0A3A  07A0               	addwf	___awmod@counter,f
  5181     0A3B                     l3251:
  5182     0A3B  1FF4               	btfss	___awmod@divisor+1,7
  5183     0A3C  2A3E               	goto	u3491
  5184     0A3D  2A3F               	goto	u3490
  5185     0A3E                     u3491:
  5186     0A3E  2A32               	goto	l3247
  5187     0A3F                     u3490:
  5188     0A3F                     l3253:
  5189     0A3F  0874               	movf	___awmod@divisor+1,w
  5190     0A40  0276               	subwf	___awmod@dividend+1,w
  5191     0A41  1D03               	skipz
  5192     0A42  2A45               	goto	u3505
  5193     0A43  0873               	movf	___awmod@divisor,w
  5194     0A44  0275               	subwf	___awmod@dividend,w
  5195     0A45                     u3505:
  5196     0A45  1C03               	skipc
  5197     0A46  2A48               	goto	u3501
  5198     0A47  2A49               	goto	u3500
  5199     0A48                     u3501:
  5200     0A48  2A4F               	goto	l3257
  5201     0A49                     u3500:
  5202     0A49                     l3255:
  5203     0A49  0873               	movf	___awmod@divisor,w
  5204     0A4A  02F5               	subwf	___awmod@dividend,f
  5205     0A4B  0874               	movf	___awmod@divisor+1,w
  5206     0A4C  1C03               	skipc
  5207     0A4D  03F6               	decf	___awmod@dividend+1,f
  5208     0A4E  02F6               	subwf	___awmod@dividend+1,f
  5209     0A4F                     l3257:
  5210     0A4F  3001               	movlw	1
  5211     0A50                     u3515:
  5212     0A50  1003               	clrc
  5213     0A51  0CF4               	rrf	___awmod@divisor+1,f
  5214     0A52  0CF3               	rrf	___awmod@divisor,f
  5215     0A53  3EFF               	addlw	-1
  5216     0A54  1D03               	skipz
  5217     0A55  2A50               	goto	u3515
  5218     0A56                     l3259:
  5219     0A56  3001               	movlw	1
  5220     0A57  02A0               	subwf	___awmod@counter,f
  5221     0A58  1D03               	btfss	3,2
  5222     0A59  2A5B               	goto	u3521
  5223     0A5A  2A5C               	goto	u3520
  5224     0A5B                     u3521:
  5225     0A5B  2A3F               	goto	l3253
  5226     0A5C                     u3520:
  5227     0A5C                     l3261:
  5228     0A5C  0821               	movf	___awmod@sign,w
  5229     0A5D  1903               	btfsc	3,2
  5230     0A5E  2A60               	goto	u3531
  5231     0A5F  2A61               	goto	u3530
  5232     0A60                     u3531:
  5233     0A60  2A66               	goto	l3265
  5234     0A61                     u3530:
  5235     0A61                     l3263:
  5236     0A61  09F5               	comf	___awmod@dividend,f
  5237     0A62  09F6               	comf	___awmod@dividend+1,f
  5238     0A63  0AF5               	incf	___awmod@dividend,f
  5239     0A64  1903               	skipnz
  5240     0A65  0AF6               	incf	___awmod@dividend+1,f
  5241     0A66                     l3265:
  5242     0A66  0876               	movf	___awmod@dividend+1,w
  5243     0A67  00F4               	movwf	?___awmod+1
  5244     0A68  0875               	movf	___awmod@dividend,w
  5245     0A69  00F3               	movwf	?___awmod
  5246     0A6A                     l601:
  5247     0A6A  0008               	return
  5248     0A6B                     __end_of___awmod:
  5249                           
  5250                           	psect	text18
  5251     0794                     __ptext18:	
  5252 ;; *************** function ___awdiv *****************
  5253 ;; Defined at:
  5254 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  divisor         2    3[COMMON] int 
  5257 ;;  dividend        2    5[COMMON] int 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  quotient        2    2[BANK0 ] int 
  5260 ;;  sign            1    1[BANK0 ] unsigned char 
  5261 ;;  counter         1    0[BANK0 ] unsigned char 
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  2    3[COMMON] int 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5271 ;;      Params:         4       0       0       0       0
  5272 ;;      Locals:         0       4       0       0       0
  5273 ;;      Temps:          0       0       0       0       0
  5274 ;;      Totals:         4       4       0       0       0
  5275 ;;Total ram usage:        8 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; Hardware stack levels required when called: 1
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_vfpfcnvrt
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285     0794                     ___awdiv:	
  5286                           ;psect for function ___awdiv
  5287                           
  5288     0794                     l3187:	
  5289                           ;incstack = 0
  5290                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5291                           
  5292     0794  1283               	bcf	3,5	;RP0=0, select bank0
  5293     0795  1303               	bcf	3,6	;RP1=0, select bank0
  5294     0796  01A1               	clrf	___awdiv@sign
  5295     0797                     l3189:
  5296     0797  1FF4               	btfss	___awdiv@divisor+1,7
  5297     0798  2F9A               	goto	u3351
  5298     0799  2F9B               	goto	u3350
  5299     079A                     u3351:
  5300     079A  2FA2               	goto	l3195
  5301     079B                     u3350:
  5302     079B                     l3191:
  5303     079B  09F3               	comf	___awdiv@divisor,f
  5304     079C  09F4               	comf	___awdiv@divisor+1,f
  5305     079D  0AF3               	incf	___awdiv@divisor,f
  5306     079E  1903               	skipnz
  5307     079F  0AF4               	incf	___awdiv@divisor+1,f
  5308     07A0                     l3193:
  5309     07A0  3001               	movlw	1
  5310     07A1  00A1               	movwf	___awdiv@sign
  5311     07A2                     l3195:
  5312     07A2  1FF6               	btfss	___awdiv@dividend+1,7
  5313     07A3  2FA5               	goto	u3361
  5314     07A4  2FA6               	goto	u3360
  5315     07A5                     u3361:
  5316     07A5  2FAD               	goto	l3201
  5317     07A6                     u3360:
  5318     07A6                     l3197:
  5319     07A6  09F5               	comf	___awdiv@dividend,f
  5320     07A7  09F6               	comf	___awdiv@dividend+1,f
  5321     07A8  0AF5               	incf	___awdiv@dividend,f
  5322     07A9  1903               	skipnz
  5323     07AA  0AF6               	incf	___awdiv@dividend+1,f
  5324     07AB                     l3199:
  5325     07AB  3001               	movlw	1
  5326     07AC  06A1               	xorwf	___awdiv@sign,f
  5327     07AD                     l3201:
  5328     07AD  01A2               	clrf	___awdiv@quotient
  5329     07AE  01A3               	clrf	___awdiv@quotient+1
  5330     07AF                     l3203:
  5331     07AF  0873               	movf	___awdiv@divisor,w
  5332     07B0  0474               	iorwf	___awdiv@divisor+1,w
  5333     07B1  1903               	btfsc	3,2
  5334     07B2  2FB4               	goto	u3371
  5335     07B3  2FB5               	goto	u3370
  5336     07B4                     u3371:
  5337     07B4  2FEA               	goto	l3223
  5338     07B5                     u3370:
  5339     07B5                     l3205:
  5340     07B5  3001               	movlw	1
  5341     07B6  00A0               	movwf	___awdiv@counter
  5342     07B7  2FC1               	goto	l3211
  5343     07B8                     l3207:
  5344     07B8  3001               	movlw	1
  5345     07B9                     u3385:
  5346     07B9  1003               	clrc
  5347     07BA  0DF3               	rlf	___awdiv@divisor,f
  5348     07BB  0DF4               	rlf	___awdiv@divisor+1,f
  5349     07BC  3EFF               	addlw	-1
  5350     07BD  1D03               	skipz
  5351     07BE  2FB9               	goto	u3385
  5352     07BF                     l3209:
  5353     07BF  3001               	movlw	1
  5354     07C0  07A0               	addwf	___awdiv@counter,f
  5355     07C1                     l3211:
  5356     07C1  1FF4               	btfss	___awdiv@divisor+1,7
  5357     07C2  2FC4               	goto	u3391
  5358     07C3  2FC5               	goto	u3390
  5359     07C4                     u3391:
  5360     07C4  2FB8               	goto	l3207
  5361     07C5                     u3390:
  5362     07C5                     l3213:
  5363     07C5  3001               	movlw	1
  5364     07C6                     u3405:
  5365     07C6  1003               	clrc
  5366     07C7  0DA2               	rlf	___awdiv@quotient,f
  5367     07C8  0DA3               	rlf	___awdiv@quotient+1,f
  5368     07C9  3EFF               	addlw	-1
  5369     07CA  1D03               	skipz
  5370     07CB  2FC6               	goto	u3405
  5371     07CC  0874               	movf	___awdiv@divisor+1,w
  5372     07CD  0276               	subwf	___awdiv@dividend+1,w
  5373     07CE  1D03               	skipz
  5374     07CF  2FD2               	goto	u3415
  5375     07D0  0873               	movf	___awdiv@divisor,w
  5376     07D1  0275               	subwf	___awdiv@dividend,w
  5377     07D2                     u3415:
  5378     07D2  1C03               	skipc
  5379     07D3  2FD5               	goto	u3411
  5380     07D4  2FD6               	goto	u3410
  5381     07D5                     u3411:
  5382     07D5  2FDD               	goto	l3219
  5383     07D6                     u3410:
  5384     07D6                     l3215:
  5385     07D6  0873               	movf	___awdiv@divisor,w
  5386     07D7  02F5               	subwf	___awdiv@dividend,f
  5387     07D8  0874               	movf	___awdiv@divisor+1,w
  5388     07D9  1C03               	skipc
  5389     07DA  03F6               	decf	___awdiv@dividend+1,f
  5390     07DB  02F6               	subwf	___awdiv@dividend+1,f
  5391     07DC                     l3217:
  5392     07DC  1422               	bsf	___awdiv@quotient,0
  5393     07DD                     l3219:
  5394     07DD  3001               	movlw	1
  5395     07DE                     u3425:
  5396     07DE  1003               	clrc
  5397     07DF  0CF4               	rrf	___awdiv@divisor+1,f
  5398     07E0  0CF3               	rrf	___awdiv@divisor,f
  5399     07E1  3EFF               	addlw	-1
  5400     07E2  1D03               	skipz
  5401     07E3  2FDE               	goto	u3425
  5402     07E4                     l3221:
  5403     07E4  3001               	movlw	1
  5404     07E5  02A0               	subwf	___awdiv@counter,f
  5405     07E6  1D03               	btfss	3,2
  5406     07E7  2FE9               	goto	u3431
  5407     07E8  2FEA               	goto	u3430
  5408     07E9                     u3431:
  5409     07E9  2FC5               	goto	l3213
  5410     07EA                     u3430:
  5411     07EA                     l3223:
  5412     07EA  0821               	movf	___awdiv@sign,w
  5413     07EB  1903               	btfsc	3,2
  5414     07EC  2FEE               	goto	u3441
  5415     07ED  2FEF               	goto	u3440
  5416     07EE                     u3441:
  5417     07EE  2FF4               	goto	l3227
  5418     07EF                     u3440:
  5419     07EF                     l3225:
  5420     07EF  09A2               	comf	___awdiv@quotient,f
  5421     07F0  09A3               	comf	___awdiv@quotient+1,f
  5422     07F1  0AA2               	incf	___awdiv@quotient,f
  5423     07F2  1903               	skipnz
  5424     07F3  0AA3               	incf	___awdiv@quotient+1,f
  5425     07F4                     l3227:
  5426     07F4  0823               	movf	___awdiv@quotient+1,w
  5427     07F5  00F4               	movwf	?___awdiv+1
  5428     07F6  0822               	movf	___awdiv@quotient,w
  5429     07F7  00F3               	movwf	?___awdiv
  5430     07F8                     l588:
  5431     07F8  0008               	return
  5432     07F9                     __end_of___awdiv:
  5433                           
  5434                           	psect	text19
  5435     099B                     __ptext19:	
  5436 ;; *************** function _adc_read *****************
  5437 ;; Defined at:
  5438 ;;		line 38 in file "adc.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  channel         2    3[COMMON] int 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  value_adc       2    5[COMMON] unsigned int 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  2    3[COMMON] unsigned int 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5452 ;;      Params:         2       0       0       0       0
  5453 ;;      Locals:         2       0       0       0       0
  5454 ;;      Temps:          0       4       0       0       0
  5455 ;;      Totals:         4       4       0       0       0
  5456 ;;Total ram usage:        8 bytes
  5457 ;; Hardware stack levels used: 1
  5458 ;; Hardware stack levels required when called: 1
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_funcion_monitoreo_ambiental
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466     099B                     _adc_read:	
  5467                           ;psect for function _adc_read
  5468                           
  5469     099B                     l3423:	
  5470                           ;incstack = 0
  5471                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  5472                           
  5473                           
  5474                           ;adc.c: 40:     ADCON0bits.CHS = (0x0F & channel);
  5475     099B  0873               	movf	adc_read@channel,w
  5476     099C  390F               	andlw	15
  5477     099D  1283               	bcf	3,5	;RP0=0, select bank0
  5478     099E  1303               	bcf	3,6	;RP1=0, select bank0
  5479     099F  00A0               	movwf	??_adc_read
  5480     09A0  0DA0               	rlf	??_adc_read,f
  5481     09A1  0DA0               	rlf	??_adc_read,f
  5482     09A2  081F               	movf	31,w	;volatile
  5483     09A3  0620               	xorwf	??_adc_read,w
  5484     09A4  39C3               	andlw	-61
  5485     09A5  0620               	xorwf	??_adc_read,w
  5486     09A6  009F               	movwf	31	;volatile
  5487     09A7                     l3425:
  5488                           
  5489                           ;adc.c: 42:     ADCON0bits.ADON = 1;
  5490     09A7  141F               	bsf	31,0	;volatile
  5491     09A8                     l3427:
  5492                           
  5493                           ;adc.c: 43:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  5494     09A8  3013               	movlw	19
  5495     09A9  1283               	bcf	3,5	;RP0=0, select bank0
  5496     09AA  1303               	bcf	3,6	;RP1=0, select bank0
  5497     09AB  00A0               	movwf	??_adc_read
  5498     09AC                     u4347:
  5499     09AC  0BA0               	decfsz	??_adc_read,f
  5500     09AD  29AC               	goto	u4347
  5501     09AE                     l3429:
  5502                           
  5503                           ;adc.c: 44:     ADCON0bits.GO_DONE = 1;
  5504     09AE  1283               	bcf	3,5	;RP0=0, select bank0
  5505     09AF  1303               	bcf	3,6	;RP1=0, select bank0
  5506     09B0  149F               	bsf	31,1	;volatile
  5507     09B1                     l329:	
  5508                           ;adc.c: 45:     while (ADCON0bits.GO_DONE);
  5509                           
  5510     09B1  189F               	btfsc	31,1	;volatile
  5511     09B2  29B4               	goto	u3841
  5512     09B3  29B5               	goto	u3840
  5513     09B4                     u3841:
  5514     09B4  29B1               	goto	l329
  5515     09B5                     u3840:
  5516     09B5                     l3431:
  5517                           
  5518                           ;adc.c: 46:     unsigned int value_adc = ADRESH;
  5519     09B5  081E               	movf	30,w	;volatile
  5520     09B6  00A0               	movwf	??_adc_read
  5521     09B7  01A1               	clrf	??_adc_read+1
  5522     09B8  0820               	movf	??_adc_read,w
  5523     09B9  00F5               	movwf	adc_read@value_adc
  5524     09BA  0821               	movf	??_adc_read+1,w
  5525     09BB  00F6               	movwf	adc_read@value_adc+1
  5526     09BC                     l3433:
  5527                           
  5528                           ;adc.c: 47:     value_adc = (value_adc << 8) + ADRESL;
  5529     09BC  0875               	movf	adc_read@value_adc,w
  5530     09BD  00A1               	movwf	??_adc_read+1
  5531     09BE  01A0               	clrf	??_adc_read
  5532     09BF  1683               	bsf	3,5	;RP0=1, select bank1
  5533     09C0  1303               	bcf	3,6	;RP1=0, select bank1
  5534     09C1  081E               	movf	30,w	;volatile
  5535     09C2  1283               	bcf	3,5	;RP0=0, select bank0
  5536     09C3  1303               	bcf	3,6	;RP1=0, select bank0
  5537     09C4  0720               	addwf	??_adc_read,w
  5538     09C5  00A2               	movwf	??_adc_read+2
  5539     09C6  3000               	movlw	0
  5540     09C7  1803               	skipnc
  5541     09C8  3001               	movlw	1
  5542     09C9  0721               	addwf	??_adc_read+1,w
  5543     09CA  00A3               	movwf	??_adc_read+3
  5544     09CB  0822               	movf	??_adc_read+2,w
  5545     09CC  00F5               	movwf	adc_read@value_adc
  5546     09CD  0823               	movf	??_adc_read+3,w
  5547     09CE  00F6               	movwf	adc_read@value_adc+1
  5548     09CF                     l3435:
  5549                           
  5550                           ;adc.c: 48:     return value_adc;
  5551     09CF  0876               	movf	adc_read@value_adc+1,w
  5552     09D0  00F4               	movwf	?_adc_read+1
  5553     09D1  0875               	movf	adc_read@value_adc,w
  5554     09D2  00F3               	movwf	?_adc_read
  5555     09D3                     l332:
  5556     09D3  0008               	return
  5557     09D4                     __end_of_adc_read:
  5558                           
  5559                           	psect	text20
  5560     0E69                     __ptext20:	
  5561 ;; *************** function ___xxtofl *****************
  5562 ;; Defined at:
  5563 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  sign            1    wreg     unsigned char 
  5566 ;;  val             4    3[COMMON] long 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  sign            1    4[BANK0 ] unsigned char 
  5569 ;;  arg             4    6[BANK0 ] unsigned long 
  5570 ;;  exp             1    5[BANK0 ] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  4    3[COMMON] unsigned char 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5580 ;;      Params:         4       0       0       0       0
  5581 ;;      Locals:         0       6       0       0       0
  5582 ;;      Temps:          0       4       0       0       0
  5583 ;;      Totals:         4      10       0       0       0
  5584 ;;Total ram usage:       14 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; Hardware stack levels required when called: 1
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_funcion_monitoreo_ambiental
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594     0E69                     ___xxtofl:	
  5595                           ;psect for function ___xxtofl
  5596                           
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5600                           ;___xxtofl@sign stored from wreg
  5601     0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5602     0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  5603     0E6B  00A4               	movwf	___xxtofl@sign
  5604     0E6C                     l3453:
  5605     0E6C  0824               	movf	___xxtofl@sign,w
  5606     0E6D  1903               	btfsc	3,2
  5607     0E6E  2E70               	goto	u3851
  5608     0E6F  2E71               	goto	u3850
  5609     0E70                     u3851:
  5610     0E70  2E85               	goto	l3459
  5611     0E71                     u3850:
  5612     0E71                     l3455:
  5613     0E71  1FF6               	btfss	___xxtofl@val+3,7
  5614     0E72  2E74               	goto	u3861
  5615     0E73  2E75               	goto	u3860
  5616     0E74                     u3861:
  5617     0E74  2E85               	goto	l3459
  5618     0E75                     u3860:
  5619     0E75                     l3457:
  5620     0E75  0973               	comf	___xxtofl@val,w
  5621     0E76  00A6               	movwf	___xxtofl@arg
  5622     0E77  0974               	comf	___xxtofl@val+1,w
  5623     0E78  00A7               	movwf	___xxtofl@arg+1
  5624     0E79  0975               	comf	___xxtofl@val+2,w
  5625     0E7A  00A8               	movwf	___xxtofl@arg+2
  5626     0E7B  0976               	comf	___xxtofl@val+3,w
  5627     0E7C  00A9               	movwf	___xxtofl@arg+3
  5628     0E7D  0AA6               	incf	___xxtofl@arg,f
  5629     0E7E  1903               	skipnz
  5630     0E7F  0AA7               	incf	___xxtofl@arg+1,f
  5631     0E80  1903               	skipnz
  5632     0E81  0AA8               	incf	___xxtofl@arg+2,f
  5633     0E82  1903               	skipnz
  5634     0E83  0AA9               	incf	___xxtofl@arg+3,f
  5635     0E84  2E8D               	goto	l876
  5636     0E85                     l3459:
  5637     0E85  0876               	movf	___xxtofl@val+3,w
  5638     0E86  00A9               	movwf	___xxtofl@arg+3
  5639     0E87  0875               	movf	___xxtofl@val+2,w
  5640     0E88  00A8               	movwf	___xxtofl@arg+2
  5641     0E89  0874               	movf	___xxtofl@val+1,w
  5642     0E8A  00A7               	movwf	___xxtofl@arg+1
  5643     0E8B  0873               	movf	___xxtofl@val,w
  5644     0E8C  00A6               	movwf	___xxtofl@arg
  5645     0E8D                     l876:
  5646     0E8D  0876               	movf	___xxtofl@val+3,w
  5647     0E8E  0475               	iorwf	___xxtofl@val+2,w
  5648     0E8F  0474               	iorwf	___xxtofl@val+1,w
  5649     0E90  0473               	iorwf	___xxtofl@val,w
  5650     0E91  1D03               	skipz
  5651     0E92  2E94               	goto	u3871
  5652     0E93  2E95               	goto	u3870
  5653     0E94                     u3871:
  5654     0E94  2E9E               	goto	l877
  5655     0E95                     u3870:
  5656     0E95                     l3461:
  5657     0E95  3000               	movlw	0
  5658     0E96  00F6               	movwf	?___xxtofl+3
  5659     0E97  3000               	movlw	0
  5660     0E98  00F5               	movwf	?___xxtofl+2
  5661     0E99  3000               	movlw	0
  5662     0E9A  00F4               	movwf	?___xxtofl+1
  5663     0E9B  3000               	movlw	0
  5664     0E9C  00F3               	movwf	?___xxtofl
  5665     0E9D  2F1E               	goto	l878
  5666     0E9E                     l877:
  5667     0E9E  3096               	movlw	150
  5668     0E9F  00A5               	movwf	___xxtofl@exp
  5669     0EA0  2EAC               	goto	l3467
  5670     0EA1                     l3465:
  5671     0EA1  3001               	movlw	1
  5672     0EA2  07A5               	addwf	___xxtofl@exp,f
  5673     0EA3  3001               	movlw	1
  5674     0EA4                     u3885:
  5675     0EA4  1003               	clrc
  5676     0EA5  0CA9               	rrf	___xxtofl@arg+3,f
  5677     0EA6  0CA8               	rrf	___xxtofl@arg+2,f
  5678     0EA7  0CA7               	rrf	___xxtofl@arg+1,f
  5679     0EA8  0CA6               	rrf	___xxtofl@arg,f
  5680     0EA9  3EFF               	addlw	-1
  5681     0EAA  1D03               	skipz
  5682     0EAB  2EA4               	goto	u3885
  5683     0EAC                     l3467:
  5684     0EAC  30FE               	movlw	254
  5685     0EAD  0529               	andwf	___xxtofl@arg+3,w
  5686     0EAE  1D03               	btfss	3,2
  5687     0EAF  2EB1               	goto	u3891
  5688     0EB0  2EB2               	goto	u3890
  5689     0EB1                     u3891:
  5690     0EB1  2EA1               	goto	l3465
  5691     0EB2                     u3890:
  5692     0EB2  2ECC               	goto	l882
  5693     0EB3                     l3469:
  5694     0EB3  3001               	movlw	1
  5695     0EB4  07A5               	addwf	___xxtofl@exp,f
  5696     0EB5                     l3471:
  5697     0EB5  3001               	movlw	1
  5698     0EB6  07A6               	addwf	___xxtofl@arg,f
  5699     0EB7  3000               	movlw	0
  5700     0EB8  1803               	skipnc
  5701     0EB9  3001               	movlw	1
  5702     0EBA  07A7               	addwf	___xxtofl@arg+1,f
  5703     0EBB  3000               	movlw	0
  5704     0EBC  1803               	skipnc
  5705     0EBD  3001               	movlw	1
  5706     0EBE  07A8               	addwf	___xxtofl@arg+2,f
  5707     0EBF  3000               	movlw	0
  5708     0EC0  1803               	skipnc
  5709     0EC1  3001               	movlw	1
  5710     0EC2  07A9               	addwf	___xxtofl@arg+3,f
  5711     0EC3                     l3473:
  5712     0EC3  3001               	movlw	1
  5713     0EC4                     u3905:
  5714     0EC4  1003               	clrc
  5715     0EC5  0CA9               	rrf	___xxtofl@arg+3,f
  5716     0EC6  0CA8               	rrf	___xxtofl@arg+2,f
  5717     0EC7  0CA7               	rrf	___xxtofl@arg+1,f
  5718     0EC8  0CA6               	rrf	___xxtofl@arg,f
  5719     0EC9  3EFF               	addlw	-1
  5720     0ECA  1D03               	skipz
  5721     0ECB  2EC4               	goto	u3905
  5722     0ECC                     l882:
  5723     0ECC  30FF               	movlw	255
  5724     0ECD  0529               	andwf	___xxtofl@arg+3,w
  5725     0ECE  1D03               	btfss	3,2
  5726     0ECF  2ED1               	goto	u3911
  5727     0ED0  2ED2               	goto	u3910
  5728     0ED1                     u3911:
  5729     0ED1  2EB3               	goto	l3469
  5730     0ED2                     u3910:
  5731     0ED2  2EDE               	goto	l3477
  5732     0ED3                     l3475:
  5733     0ED3  3001               	movlw	1
  5734     0ED4  02A5               	subwf	___xxtofl@exp,f
  5735     0ED5  3001               	movlw	1
  5736     0ED6  00A0               	movwf	??___xxtofl
  5737     0ED7                     u3925:
  5738     0ED7  1003               	clrc
  5739     0ED8  0DA6               	rlf	___xxtofl@arg,f
  5740     0ED9  0DA7               	rlf	___xxtofl@arg+1,f
  5741     0EDA  0DA8               	rlf	___xxtofl@arg+2,f
  5742     0EDB  0DA9               	rlf	___xxtofl@arg+3,f
  5743     0EDC  0BA0               	decfsz	??___xxtofl,f
  5744     0EDD  2ED7               	goto	u3925
  5745     0EDE                     l3477:
  5746     0EDE  1BA8               	btfsc	___xxtofl@arg+2,7
  5747     0EDF  2EE1               	goto	u3931
  5748     0EE0  2EE2               	goto	u3930
  5749     0EE1                     u3931:
  5750     0EE1  2EE8               	goto	l889
  5751     0EE2                     u3930:
  5752     0EE2                     l3479:
  5753     0EE2  3002               	movlw	2
  5754     0EE3  0225               	subwf	___xxtofl@exp,w
  5755     0EE4  1803               	skipnc
  5756     0EE5  2EE7               	goto	u3941
  5757     0EE6  2EE8               	goto	u3940
  5758     0EE7                     u3941:
  5759     0EE7  2ED3               	goto	l3475
  5760     0EE8                     u3940:
  5761     0EE8                     l889:
  5762     0EE8  1825               	btfsc	___xxtofl@exp,0
  5763     0EE9  2EEB               	goto	u3951
  5764     0EEA  2EEC               	goto	u3950
  5765     0EEB                     u3951:
  5766     0EEB  2EF4               	goto	l890
  5767     0EEC                     u3950:
  5768     0EEC                     l3481:
  5769     0EEC  30FF               	movlw	255
  5770     0EED  05A6               	andwf	___xxtofl@arg,f
  5771     0EEE  30FF               	movlw	255
  5772     0EEF  05A7               	andwf	___xxtofl@arg+1,f
  5773     0EF0  307F               	movlw	127
  5774     0EF1  05A8               	andwf	___xxtofl@arg+2,f
  5775     0EF2  30FF               	movlw	255
  5776     0EF3  05A9               	andwf	___xxtofl@arg+3,f
  5777     0EF4                     l890:
  5778     0EF4  1003               	clrc
  5779     0EF5  0CA5               	rrf	___xxtofl@exp,f
  5780     0EF6                     l3483:
  5781     0EF6  0825               	movf	___xxtofl@exp,w
  5782     0EF7  00A0               	movwf	??___xxtofl
  5783     0EF8  01A1               	clrf	??___xxtofl+1
  5784     0EF9  01A2               	clrf	??___xxtofl+2
  5785     0EFA  01A3               	clrf	??___xxtofl+3
  5786     0EFB  3018               	movlw	24
  5787     0EFC                     u3965:
  5788     0EFC  1003               	clrc
  5789     0EFD  0DA0               	rlf	??___xxtofl,f
  5790     0EFE  0DA1               	rlf	??___xxtofl+1,f
  5791     0EFF  0DA2               	rlf	??___xxtofl+2,f
  5792     0F00  0DA3               	rlf	??___xxtofl+3,f
  5793     0F01                     u3960:
  5794     0F01  3EFF               	addlw	-1
  5795     0F02  1D03               	skipz
  5796     0F03  2EFC               	goto	u3965
  5797     0F04  0820               	movf	??___xxtofl,w
  5798     0F05  04A6               	iorwf	___xxtofl@arg,f
  5799     0F06  0821               	movf	??___xxtofl+1,w
  5800     0F07  04A7               	iorwf	___xxtofl@arg+1,f
  5801     0F08  0822               	movf	??___xxtofl+2,w
  5802     0F09  04A8               	iorwf	___xxtofl@arg+2,f
  5803     0F0A  0823               	movf	??___xxtofl+3,w
  5804     0F0B  04A9               	iorwf	___xxtofl@arg+3,f
  5805     0F0C                     l3485:
  5806     0F0C  0824               	movf	___xxtofl@sign,w
  5807     0F0D  1903               	btfsc	3,2
  5808     0F0E  2F10               	goto	u3971
  5809     0F0F  2F11               	goto	u3970
  5810     0F10                     u3971:
  5811     0F10  2F16               	goto	l3491
  5812     0F11                     u3970:
  5813     0F11                     l3487:
  5814     0F11  1FF6               	btfss	___xxtofl@val+3,7
  5815     0F12  2F14               	goto	u3981
  5816     0F13  2F15               	goto	u3980
  5817     0F14                     u3981:
  5818     0F14  2F16               	goto	l3491
  5819     0F15                     u3980:
  5820     0F15                     l3489:
  5821     0F15  17A9               	bsf	___xxtofl@arg+3,7
  5822     0F16                     l3491:
  5823     0F16  0829               	movf	___xxtofl@arg+3,w
  5824     0F17  00F6               	movwf	?___xxtofl+3
  5825     0F18  0828               	movf	___xxtofl@arg+2,w
  5826     0F19  00F5               	movwf	?___xxtofl+2
  5827     0F1A  0827               	movf	___xxtofl@arg+1,w
  5828     0F1B  00F4               	movwf	?___xxtofl+1
  5829     0F1C  0826               	movf	___xxtofl@arg,w
  5830     0F1D  00F3               	movwf	?___xxtofl
  5831     0F1E                     l878:
  5832     0F1E  0008               	return
  5833     0F1F                     __end_of___xxtofl:
  5834                           
  5835                           	psect	text21
  5836     0C0F                     __ptext21:	
  5837 ;; *************** function ___fltol *****************
  5838 ;; Defined at:
  5839 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  f1              4   36[BANK0 ] unsigned char 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  exp1            1   45[BANK0 ] unsigned char 
  5844 ;;  sign1           1   44[BANK0 ] unsigned char 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  4   36[BANK0 ] long 
  5847 ;; Registers used:
  5848 ;;		wreg, status,2, status,0
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5854 ;;      Params:         0       4       0       0       0
  5855 ;;      Locals:         0       2       0       0       0
  5856 ;;      Temps:          0       4       0       0       0
  5857 ;;      Totals:         0      10       0       0       0
  5858 ;;Total ram usage:       10 bytes
  5859 ;; Hardware stack levels used: 1
  5860 ;; Hardware stack levels required when called: 1
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_funcion_monitoreo_ambiental
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868     0C0F                     ___fltol:	
  5869                           ;psect for function ___fltol
  5870                           
  5871     0C0F                     l2531:	
  5872                           ;incstack = 0
  5873                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5874                           
  5875     0C0F  1003               	clrc
  5876     0C10  1283               	bcf	3,5	;RP0=0, select bank0
  5877     0C11  1303               	bcf	3,6	;RP1=0, select bank0
  5878     0C12  0D46               	rlf	___fltol@f1+2,w
  5879     0C13  0D47               	rlf	___fltol@f1+3,w
  5880     0C14  00CD               	movwf	___fltol@exp1
  5881     0C15  084D               	movf	___fltol@exp1,w
  5882     0C16  1D03               	btfss	3,2
  5883     0C17  2C19               	goto	u2471
  5884     0C18  2C1A               	goto	u2470
  5885     0C19                     u2471:
  5886     0C19  2C23               	goto	l2537
  5887     0C1A                     u2470:
  5888     0C1A                     l2533:
  5889     0C1A  3000               	movlw	0
  5890     0C1B  00C7               	movwf	?___fltol+3
  5891     0C1C  3000               	movlw	0
  5892     0C1D  00C6               	movwf	?___fltol+2
  5893     0C1E  3000               	movlw	0
  5894     0C1F  00C5               	movwf	?___fltol+1
  5895     0C20  3000               	movlw	0
  5896     0C21  00C4               	movwf	?___fltol
  5897     0C22  2C84               	goto	l629
  5898     0C23                     l2537:
  5899     0C23  0844               	movf	___fltol@f1,w
  5900     0C24  00C8               	movwf	??___fltol
  5901     0C25  0845               	movf	___fltol@f1+1,w
  5902     0C26  00C9               	movwf	??___fltol+1
  5903     0C27  0846               	movf	___fltol@f1+2,w
  5904     0C28  00CA               	movwf	??___fltol+2
  5905     0C29  0847               	movf	___fltol@f1+3,w
  5906     0C2A  00CB               	movwf	??___fltol+3
  5907     0C2B  301F               	movlw	31
  5908     0C2C                     u2485:
  5909     0C2C  1003               	clrc
  5910     0C2D  0CCB               	rrf	??___fltol+3,f
  5911     0C2E  0CCA               	rrf	??___fltol+2,f
  5912     0C2F  0CC9               	rrf	??___fltol+1,f
  5913     0C30  0CC8               	rrf	??___fltol,f
  5914     0C31                     u2480:
  5915     0C31  3EFF               	addlw	-1
  5916     0C32  1D03               	skipz
  5917     0C33  2C2C               	goto	u2485
  5918     0C34  0848               	movf	??___fltol,w
  5919     0C35  00CC               	movwf	___fltol@sign1
  5920     0C36                     l2539:
  5921     0C36  17C6               	bsf	___fltol@f1+2,7
  5922     0C37                     l2541:
  5923     0C37  30FF               	movlw	255
  5924     0C38  05C4               	andwf	___fltol@f1,f
  5925     0C39  30FF               	movlw	255
  5926     0C3A  05C5               	andwf	___fltol@f1+1,f
  5927     0C3B  30FF               	movlw	255
  5928     0C3C  05C6               	andwf	___fltol@f1+2,f
  5929     0C3D  3000               	movlw	0
  5930     0C3E  05C7               	andwf	___fltol@f1+3,f
  5931     0C3F                     l2543:
  5932     0C3F  3096               	movlw	150
  5933     0C40  02CD               	subwf	___fltol@exp1,f
  5934     0C41                     l2545:
  5935     0C41  1FCD               	btfss	___fltol@exp1,7
  5936     0C42  2C44               	goto	u2491
  5937     0C43  2C45               	goto	u2490
  5938     0C44                     u2491:
  5939     0C44  2C5D               	goto	l2555
  5940     0C45                     u2490:
  5941     0C45                     l2547:
  5942     0C45  084D               	movf	___fltol@exp1,w
  5943     0C46  3A80               	xorlw	128
  5944     0C47  3E97               	addlw	151
  5945     0C48  1803               	skipnc
  5946     0C49  2C4B               	goto	u2501
  5947     0C4A  2C4C               	goto	u2500
  5948     0C4B                     u2501:
  5949     0C4B  2C4D               	goto	l2553
  5950     0C4C                     u2500:
  5951     0C4C  2C1A               	goto	l2533
  5952     0C4D                     l2553:
  5953     0C4D  3001               	movlw	1
  5954     0C4E                     u2515:
  5955     0C4E  1003               	clrc
  5956     0C4F  0CC7               	rrf	___fltol@f1+3,f
  5957     0C50  0CC6               	rrf	___fltol@f1+2,f
  5958     0C51  0CC5               	rrf	___fltol@f1+1,f
  5959     0C52  0CC4               	rrf	___fltol@f1,f
  5960     0C53  3EFF               	addlw	-1
  5961     0C54  1D03               	skipz
  5962     0C55  2C4E               	goto	u2515
  5963     0C56  3001               	movlw	1
  5964     0C57  07CD               	addwf	___fltol@exp1,f
  5965     0C58  1D03               	btfss	3,2
  5966     0C59  2C5B               	goto	u2521
  5967     0C5A  2C5C               	goto	u2520
  5968     0C5B                     u2521:
  5969     0C5B  2C4D               	goto	l2553
  5970     0C5C                     u2520:
  5971     0C5C  2C74               	goto	l2563
  5972     0C5D                     l2555:
  5973     0C5D  3020               	movlw	32
  5974     0C5E  024D               	subwf	___fltol@exp1,w
  5975     0C5F  1C03               	skipc
  5976     0C60  2C62               	goto	u2531
  5977     0C61  2C63               	goto	u2530
  5978     0C62                     u2531:
  5979     0C62  2C6F               	goto	l636
  5980     0C63                     u2530:
  5981     0C63  2C1A               	goto	l2533
  5982     0C64                     l2561:
  5983     0C64  3001               	movlw	1
  5984     0C65  00C8               	movwf	??___fltol
  5985     0C66                     u2545:
  5986     0C66  1003               	clrc
  5987     0C67  0DC4               	rlf	___fltol@f1,f
  5988     0C68  0DC5               	rlf	___fltol@f1+1,f
  5989     0C69  0DC6               	rlf	___fltol@f1+2,f
  5990     0C6A  0DC7               	rlf	___fltol@f1+3,f
  5991     0C6B  0BC8               	decfsz	??___fltol,f
  5992     0C6C  2C66               	goto	u2545
  5993     0C6D  3001               	movlw	1
  5994     0C6E  02CD               	subwf	___fltol@exp1,f
  5995     0C6F                     l636:
  5996     0C6F  084D               	movf	___fltol@exp1,w
  5997     0C70  1D03               	btfss	3,2
  5998     0C71  2C73               	goto	u2551
  5999     0C72  2C74               	goto	u2550
  6000     0C73                     u2551:
  6001     0C73  2C64               	goto	l2561
  6002     0C74                     u2550:
  6003     0C74                     l2563:
  6004     0C74  084C               	movf	___fltol@sign1,w
  6005     0C75  1903               	btfsc	3,2
  6006     0C76  2C78               	goto	u2561
  6007     0C77  2C79               	goto	u2560
  6008     0C78                     u2561:
  6009     0C78  2C84               	goto	l639
  6010     0C79                     u2560:
  6011     0C79                     l2565:
  6012     0C79  09C4               	comf	___fltol@f1,f
  6013     0C7A  09C5               	comf	___fltol@f1+1,f
  6014     0C7B  09C6               	comf	___fltol@f1+2,f
  6015     0C7C  09C7               	comf	___fltol@f1+3,f
  6016     0C7D  0AC4               	incf	___fltol@f1,f
  6017     0C7E  1903               	skipnz
  6018     0C7F  0AC5               	incf	___fltol@f1+1,f
  6019     0C80  1903               	skipnz
  6020     0C81  0AC6               	incf	___fltol@f1+2,f
  6021     0C82  1903               	skipnz
  6022     0C83  0AC7               	incf	___fltol@f1+3,f
  6023     0C84                     l639:
  6024     0C84                     l629:
  6025     0C84  0008               	return
  6026     0C85                     __end_of___fltol:
  6027                           
  6028                           	psect	text22
  6029     0059                     __ptext22:	
  6030 ;; *************** function ___flmul *****************
  6031 ;; Defined at:
  6032 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  b               4   10[BANK0 ] long 
  6035 ;;  a               4   14[BANK0 ] long 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  prod            4   30[BANK0 ] struct .
  6038 ;;  grs             4   24[BANK0 ] unsigned long 
  6039 ;;  temp            2   34[BANK0 ] struct .
  6040 ;;  bexp            1   29[BANK0 ] unsigned char 
  6041 ;;  aexp            1   28[BANK0 ] unsigned char 
  6042 ;;  sign            1   23[BANK0 ] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  4   10[BANK0 ] unsigned char 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6052 ;;      Params:         0       8       0       0       0
  6053 ;;      Locals:         0      13       0       0       0
  6054 ;;      Temps:          0       5       0       0       0
  6055 ;;      Totals:         0      26       0       0       0
  6056 ;;Total ram usage:       26 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 2
  6059 ;; This function calls:
  6060 ;;		__Umul8_16
  6061 ;; This function is called by:
  6062 ;;		_funcion_monitoreo_ambiental
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066     0059                     ___flmul:	
  6067                           ;psect for function ___flmul
  6068                           
  6069     0059                     l2567:	
  6070                           ;incstack = 0
  6071                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6072                           
  6073     0059  1283               	bcf	3,5	;RP0=0, select bank0
  6074     005A  1303               	bcf	3,6	;RP1=0, select bank0
  6075     005B  082D               	movf	___flmul@b+3,w
  6076     005C  00B7               	movwf	___flmul@sign
  6077     005D                     l2569:
  6078     005D  3080               	movlw	128
  6079     005E  05B7               	andwf	___flmul@sign,f
  6080     005F                     l2571:
  6081     005F  082D               	movf	___flmul@b+3,w
  6082     0060  00B2               	movwf	??___flmul
  6083     0061  0732               	addwf	??___flmul,w
  6084     0062  00BD               	movwf	___flmul@bexp
  6085     0063                     l2573:
  6086     0063  1FAC               	btfss	___flmul@b+2,7
  6087     0064  2866               	goto	u2571
  6088     0065  2867               	goto	u2570
  6089     0066                     u2571:
  6090     0066  2868               	goto	l2577
  6091     0067                     u2570:
  6092     0067                     l2575:
  6093     0067  143D               	bsf	___flmul@bexp,0
  6094     0068                     l2577:
  6095     0068  083D               	movf	___flmul@bexp,w
  6096     0069  1903               	btfsc	3,2
  6097     006A  286C               	goto	u2581
  6098     006B  286D               	goto	u2580
  6099     006C                     u2581:
  6100     006C  287C               	goto	l2585
  6101     006D                     u2580:
  6102     006D                     l2579:
  6103     006D  0A3D               	incf	___flmul@bexp,w
  6104     006E  1D03               	btfss	3,2
  6105     006F  2871               	goto	u2591
  6106     0070  2872               	goto	u2590
  6107     0071                     u2591:
  6108     0071  287A               	goto	l2583
  6109     0072                     u2590:
  6110     0072                     l2581:
  6111     0072  3000               	movlw	0
  6112     0073  00AD               	movwf	___flmul@b+3
  6113     0074  3000               	movlw	0
  6114     0075  00AC               	movwf	___flmul@b+2
  6115     0076  3000               	movlw	0
  6116     0077  00AB               	movwf	___flmul@b+1
  6117     0078  3000               	movlw	0
  6118     0079  00AA               	movwf	___flmul@b
  6119     007A                     l2583:
  6120     007A  17AC               	bsf	___flmul@b+2,7
  6121     007B  2884               	goto	l2587
  6122     007C                     l2585:
  6123     007C  3000               	movlw	0
  6124     007D  00AD               	movwf	___flmul@b+3
  6125     007E  3000               	movlw	0
  6126     007F  00AC               	movwf	___flmul@b+2
  6127     0080  3000               	movlw	0
  6128     0081  00AB               	movwf	___flmul@b+1
  6129     0082  3000               	movlw	0
  6130     0083  00AA               	movwf	___flmul@b
  6131     0084                     l2587:
  6132     0084  0831               	movf	___flmul@a+3,w
  6133     0085  3980               	andlw	128
  6134     0086  06B7               	xorwf	___flmul@sign,f
  6135     0087                     l2589:
  6136     0087  0831               	movf	___flmul@a+3,w
  6137     0088  00B2               	movwf	??___flmul
  6138     0089  0732               	addwf	??___flmul,w
  6139     008A  00BC               	movwf	___flmul@aexp
  6140     008B                     l2591:
  6141     008B  1FB0               	btfss	___flmul@a+2,7
  6142     008C  288E               	goto	u2601
  6143     008D  288F               	goto	u2600
  6144     008E                     u2601:
  6145     008E  2890               	goto	l2595
  6146     008F                     u2600:
  6147     008F                     l2593:
  6148     008F  143C               	bsf	___flmul@aexp,0
  6149     0090                     l2595:
  6150     0090  083C               	movf	___flmul@aexp,w
  6151     0091  1903               	btfsc	3,2
  6152     0092  2894               	goto	u2611
  6153     0093  2895               	goto	u2610
  6154     0094                     u2611:
  6155     0094  28A4               	goto	l2603
  6156     0095                     u2610:
  6157     0095                     l2597:
  6158     0095  0A3C               	incf	___flmul@aexp,w
  6159     0096  1D03               	btfss	3,2
  6160     0097  2899               	goto	u2621
  6161     0098  289A               	goto	u2620
  6162     0099                     u2621:
  6163     0099  28A2               	goto	l2601
  6164     009A                     u2620:
  6165     009A                     l2599:
  6166     009A  3000               	movlw	0
  6167     009B  00B1               	movwf	___flmul@a+3
  6168     009C  3000               	movlw	0
  6169     009D  00B0               	movwf	___flmul@a+2
  6170     009E  3000               	movlw	0
  6171     009F  00AF               	movwf	___flmul@a+1
  6172     00A0  3000               	movlw	0
  6173     00A1  00AE               	movwf	___flmul@a
  6174     00A2                     l2601:
  6175     00A2  17B0               	bsf	___flmul@a+2,7
  6176     00A3  28AC               	goto	l2605
  6177     00A4                     l2603:
  6178     00A4  3000               	movlw	0
  6179     00A5  00B1               	movwf	___flmul@a+3
  6180     00A6  3000               	movlw	0
  6181     00A7  00B0               	movwf	___flmul@a+2
  6182     00A8  3000               	movlw	0
  6183     00A9  00AF               	movwf	___flmul@a+1
  6184     00AA  3000               	movlw	0
  6185     00AB  00AE               	movwf	___flmul@a
  6186     00AC                     l2605:
  6187     00AC  083C               	movf	___flmul@aexp,w
  6188     00AD  1903               	btfsc	3,2
  6189     00AE  28B0               	goto	u2631
  6190     00AF  28B1               	goto	u2630
  6191     00B0                     u2631:
  6192     00B0  28B6               	goto	l2609
  6193     00B1                     u2630:
  6194     00B1                     l2607:
  6195     00B1  083D               	movf	___flmul@bexp,w
  6196     00B2  1D03               	btfss	3,2
  6197     00B3  28B5               	goto	u2641
  6198     00B4  28B6               	goto	u2640
  6199     00B5                     u2641:
  6200     00B5  28BF               	goto	l2613
  6201     00B6                     u2640:
  6202     00B6                     l2609:
  6203     00B6  3000               	movlw	0
  6204     00B7  00AD               	movwf	?___flmul+3
  6205     00B8  3000               	movlw	0
  6206     00B9  00AC               	movwf	?___flmul+2
  6207     00BA  3000               	movlw	0
  6208     00BB  00AB               	movwf	?___flmul+1
  6209     00BC  3000               	movlw	0
  6210     00BD  00AA               	movwf	?___flmul
  6211     00BE  2B9A               	goto	l832
  6212     00BF                     l2613:
  6213     00BF  082A               	movf	___flmul@b,w
  6214     00C0  00F3               	movwf	__Umul8_16@multiplicand
  6215     00C1  0830               	movf	___flmul@a+2,w
  6216     00C2  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6217     00C7  0874               	movf	?__Umul8_16+1,w
  6218     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  6219     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  6220     00CA  00C3               	movwf	___flmul@temp+1
  6221     00CB  0873               	movf	?__Umul8_16,w
  6222     00CC  00C2               	movwf	___flmul@temp
  6223     00CD                     l2615:
  6224     00CD  0842               	movf	___flmul@temp,w
  6225     00CE  00B2               	movwf	??___flmul
  6226     00CF  01B3               	clrf	??___flmul+1
  6227     00D0  01B4               	clrf	??___flmul+2
  6228     00D1  01B5               	clrf	??___flmul+3
  6229     00D2  0835               	movf	??___flmul+3,w
  6230     00D3  00BB               	movwf	___flmul@grs+3
  6231     00D4  0834               	movf	??___flmul+2,w
  6232     00D5  00BA               	movwf	___flmul@grs+2
  6233     00D6  0833               	movf	??___flmul+1,w
  6234     00D7  00B9               	movwf	___flmul@grs+1
  6235     00D8  0832               	movf	??___flmul,w
  6236     00D9  00B8               	movwf	___flmul@grs
  6237     00DA                     l2617:
  6238     00DA  0843               	movf	___flmul@temp+1,w
  6239     00DB  00B2               	movwf	??___flmul
  6240     00DC  01B3               	clrf	??___flmul+1
  6241     00DD  01B4               	clrf	??___flmul+2
  6242     00DE  01B5               	clrf	??___flmul+3
  6243     00DF  0835               	movf	??___flmul+3,w
  6244     00E0  00C1               	movwf	___flmul@prod+3
  6245     00E1  0834               	movf	??___flmul+2,w
  6246     00E2  00C0               	movwf	___flmul@prod+2
  6247     00E3  0833               	movf	??___flmul+1,w
  6248     00E4  00BF               	movwf	___flmul@prod+1
  6249     00E5  0832               	movf	??___flmul,w
  6250     00E6  00BE               	movwf	___flmul@prod
  6251     00E7  082B               	movf	___flmul@b+1,w
  6252     00E8  00F3               	movwf	__Umul8_16@multiplicand
  6253     00E9  082F               	movf	___flmul@a+1,w
  6254     00EA  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6255     00EF  0874               	movf	?__Umul8_16+1,w
  6256     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  6257     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  6258     00F2  00C3               	movwf	___flmul@temp+1
  6259     00F3  0873               	movf	?__Umul8_16,w
  6260     00F4  00C2               	movwf	___flmul@temp
  6261     00F5                     l2619:
  6262     00F5  0842               	movf	___flmul@temp,w
  6263     00F6  00B2               	movwf	??___flmul
  6264     00F7  01B3               	clrf	??___flmul+1
  6265     00F8  01B4               	clrf	??___flmul+2
  6266     00F9  01B5               	clrf	??___flmul+3
  6267     00FA  0832               	movf	??___flmul,w
  6268     00FB  07B8               	addwf	___flmul@grs,f
  6269     00FC  0833               	movf	??___flmul+1,w
  6270     00FD  1103               	clrz
  6271     00FE  1803               	skipnc
  6272     00FF  3E01               	addlw	1
  6273     0100  1903               	skipnz
  6274     0101  2903               	goto	u2651
  6275     0102  07B9               	addwf	___flmul@grs+1,f
  6276     0103                     u2651:
  6277     0103  0834               	movf	??___flmul+2,w
  6278     0104  1103               	clrz
  6279     0105  1803               	skipnc
  6280     0106  3E01               	addlw	1
  6281     0107  1903               	skipnz
  6282     0108  290A               	goto	u2652
  6283     0109  07BA               	addwf	___flmul@grs+2,f
  6284     010A                     u2652:
  6285     010A  0835               	movf	??___flmul+3,w
  6286     010B  1103               	clrz
  6287     010C  1803               	skipnc
  6288     010D  3E01               	addlw	1
  6289     010E  1903               	skipnz
  6290     010F  2911               	goto	u2653
  6291     0110  07BB               	addwf	___flmul@grs+3,f
  6292     0111                     u2653:
  6293     0111                     l2621:
  6294     0111  0843               	movf	___flmul@temp+1,w
  6295     0112  00B2               	movwf	??___flmul
  6296     0113  01B3               	clrf	??___flmul+1
  6297     0114  01B4               	clrf	??___flmul+2
  6298     0115  01B5               	clrf	??___flmul+3
  6299     0116  0832               	movf	??___flmul,w
  6300     0117  07BE               	addwf	___flmul@prod,f
  6301     0118  0833               	movf	??___flmul+1,w
  6302     0119  1103               	clrz
  6303     011A  1803               	skipnc
  6304     011B  3E01               	addlw	1
  6305     011C  1903               	skipnz
  6306     011D  291F               	goto	u2661
  6307     011E  07BF               	addwf	___flmul@prod+1,f
  6308     011F                     u2661:
  6309     011F  0834               	movf	??___flmul+2,w
  6310     0120  1103               	clrz
  6311     0121  1803               	skipnc
  6312     0122  3E01               	addlw	1
  6313     0123  1903               	skipnz
  6314     0124  2926               	goto	u2662
  6315     0125  07C0               	addwf	___flmul@prod+2,f
  6316     0126                     u2662:
  6317     0126  0835               	movf	??___flmul+3,w
  6318     0127  1103               	clrz
  6319     0128  1803               	skipnc
  6320     0129  3E01               	addlw	1
  6321     012A  1903               	skipnz
  6322     012B  292D               	goto	u2663
  6323     012C  07C1               	addwf	___flmul@prod+3,f
  6324     012D                     u2663:
  6325     012D  082C               	movf	___flmul@b+2,w
  6326     012E  00F3               	movwf	__Umul8_16@multiplicand
  6327     012F  082E               	movf	___flmul@a,w
  6328     0130  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6329     0135  0874               	movf	?__Umul8_16+1,w
  6330     0136  1283               	bcf	3,5	;RP0=0, select bank0
  6331     0137  1303               	bcf	3,6	;RP1=0, select bank0
  6332     0138  00C3               	movwf	___flmul@temp+1
  6333     0139  0873               	movf	?__Umul8_16,w
  6334     013A  00C2               	movwf	___flmul@temp
  6335     013B                     l2623:
  6336     013B  0842               	movf	___flmul@temp,w
  6337     013C  00B2               	movwf	??___flmul
  6338     013D  01B3               	clrf	??___flmul+1
  6339     013E  01B4               	clrf	??___flmul+2
  6340     013F  01B5               	clrf	??___flmul+3
  6341     0140  0832               	movf	??___flmul,w
  6342     0141  07B8               	addwf	___flmul@grs,f
  6343     0142  0833               	movf	??___flmul+1,w
  6344     0143  1103               	clrz
  6345     0144  1803               	skipnc
  6346     0145  3E01               	addlw	1
  6347     0146  1903               	skipnz
  6348     0147  2949               	goto	u2671
  6349     0148  07B9               	addwf	___flmul@grs+1,f
  6350     0149                     u2671:
  6351     0149  0834               	movf	??___flmul+2,w
  6352     014A  1103               	clrz
  6353     014B  1803               	skipnc
  6354     014C  3E01               	addlw	1
  6355     014D  1903               	skipnz
  6356     014E  2950               	goto	u2672
  6357     014F  07BA               	addwf	___flmul@grs+2,f
  6358     0150                     u2672:
  6359     0150  0835               	movf	??___flmul+3,w
  6360     0151  1103               	clrz
  6361     0152  1803               	skipnc
  6362     0153  3E01               	addlw	1
  6363     0154  1903               	skipnz
  6364     0155  2957               	goto	u2673
  6365     0156  07BB               	addwf	___flmul@grs+3,f
  6366     0157                     u2673:
  6367     0157                     l2625:
  6368     0157  0843               	movf	___flmul@temp+1,w
  6369     0158  00B2               	movwf	??___flmul
  6370     0159  01B3               	clrf	??___flmul+1
  6371     015A  01B4               	clrf	??___flmul+2
  6372     015B  01B5               	clrf	??___flmul+3
  6373     015C  0832               	movf	??___flmul,w
  6374     015D  07BE               	addwf	___flmul@prod,f
  6375     015E  0833               	movf	??___flmul+1,w
  6376     015F  1103               	clrz
  6377     0160  1803               	skipnc
  6378     0161  3E01               	addlw	1
  6379     0162  1903               	skipnz
  6380     0163  2965               	goto	u2681
  6381     0164  07BF               	addwf	___flmul@prod+1,f
  6382     0165                     u2681:
  6383     0165  0834               	movf	??___flmul+2,w
  6384     0166  1103               	clrz
  6385     0167  1803               	skipnc
  6386     0168  3E01               	addlw	1
  6387     0169  1903               	skipnz
  6388     016A  296C               	goto	u2682
  6389     016B  07C0               	addwf	___flmul@prod+2,f
  6390     016C                     u2682:
  6391     016C  0835               	movf	??___flmul+3,w
  6392     016D  1103               	clrz
  6393     016E  1803               	skipnc
  6394     016F  3E01               	addlw	1
  6395     0170  1903               	skipnz
  6396     0171  2973               	goto	u2683
  6397     0172  07C1               	addwf	___flmul@prod+3,f
  6398     0173                     u2683:
  6399     0173                     l2627:
  6400     0173  3008               	movlw	8
  6401     0174  00B2               	movwf	??___flmul
  6402     0175                     u2695:
  6403     0175  1003               	clrc
  6404     0176  0DB8               	rlf	___flmul@grs,f
  6405     0177  0DB9               	rlf	___flmul@grs+1,f
  6406     0178  0DBA               	rlf	___flmul@grs+2,f
  6407     0179  0DBB               	rlf	___flmul@grs+3,f
  6408     017A  0BB2               	decfsz	??___flmul,f
  6409     017B  2975               	goto	u2695
  6410     017C                     l2629:
  6411     017C  082B               	movf	___flmul@b+1,w
  6412     017D  00F3               	movwf	__Umul8_16@multiplicand
  6413     017E  082E               	movf	___flmul@a,w
  6414     017F  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6415     0184  0874               	movf	?__Umul8_16+1,w
  6416     0185  1283               	bcf	3,5	;RP0=0, select bank0
  6417     0186  1303               	bcf	3,6	;RP1=0, select bank0
  6418     0187  00C3               	movwf	___flmul@temp+1
  6419     0188  0873               	movf	?__Umul8_16,w
  6420     0189  00C2               	movwf	___flmul@temp
  6421     018A                     l2631:
  6422     018A  0842               	movf	___flmul@temp,w
  6423     018B  00B2               	movwf	??___flmul
  6424     018C  0843               	movf	___flmul@temp+1,w
  6425     018D  00B3               	movwf	??___flmul+1
  6426     018E  01B4               	clrf	??___flmul+2
  6427     018F  01B5               	clrf	??___flmul+3
  6428     0190  0832               	movf	??___flmul,w
  6429     0191  07B8               	addwf	___flmul@grs,f
  6430     0192  0833               	movf	??___flmul+1,w
  6431     0193  1103               	clrz
  6432     0194  1803               	skipnc
  6433     0195  3E01               	addlw	1
  6434     0196  1903               	skipnz
  6435     0197  2999               	goto	u2701
  6436     0198  07B9               	addwf	___flmul@grs+1,f
  6437     0199                     u2701:
  6438     0199  0834               	movf	??___flmul+2,w
  6439     019A  1103               	clrz
  6440     019B  1803               	skipnc
  6441     019C  3E01               	addlw	1
  6442     019D  1903               	skipnz
  6443     019E  29A0               	goto	u2702
  6444     019F  07BA               	addwf	___flmul@grs+2,f
  6445     01A0                     u2702:
  6446     01A0  0835               	movf	??___flmul+3,w
  6447     01A1  1103               	clrz
  6448     01A2  1803               	skipnc
  6449     01A3  3E01               	addlw	1
  6450     01A4  1903               	skipnz
  6451     01A5  29A7               	goto	u2703
  6452     01A6  07BB               	addwf	___flmul@grs+3,f
  6453     01A7                     u2703:
  6454     01A7                     l2633:
  6455     01A7  082A               	movf	___flmul@b,w
  6456     01A8  00F3               	movwf	__Umul8_16@multiplicand
  6457     01A9  082F               	movf	___flmul@a+1,w
  6458     01AA  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6459     01AF  0874               	movf	?__Umul8_16+1,w
  6460     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  6461     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  6462     01B2  00C3               	movwf	___flmul@temp+1
  6463     01B3  0873               	movf	?__Umul8_16,w
  6464     01B4  00C2               	movwf	___flmul@temp
  6465     01B5                     l2635:
  6466     01B5  0842               	movf	___flmul@temp,w
  6467     01B6  00B2               	movwf	??___flmul
  6468     01B7  0843               	movf	___flmul@temp+1,w
  6469     01B8  00B3               	movwf	??___flmul+1
  6470     01B9  01B4               	clrf	??___flmul+2
  6471     01BA  01B5               	clrf	??___flmul+3
  6472     01BB  0832               	movf	??___flmul,w
  6473     01BC  07B8               	addwf	___flmul@grs,f
  6474     01BD  0833               	movf	??___flmul+1,w
  6475     01BE  1103               	clrz
  6476     01BF  1803               	skipnc
  6477     01C0  3E01               	addlw	1
  6478     01C1  1903               	skipnz
  6479     01C2  29C4               	goto	u2711
  6480     01C3  07B9               	addwf	___flmul@grs+1,f
  6481     01C4                     u2711:
  6482     01C4  0834               	movf	??___flmul+2,w
  6483     01C5  1103               	clrz
  6484     01C6  1803               	skipnc
  6485     01C7  3E01               	addlw	1
  6486     01C8  1903               	skipnz
  6487     01C9  29CB               	goto	u2712
  6488     01CA  07BA               	addwf	___flmul@grs+2,f
  6489     01CB                     u2712:
  6490     01CB  0835               	movf	??___flmul+3,w
  6491     01CC  1103               	clrz
  6492     01CD  1803               	skipnc
  6493     01CE  3E01               	addlw	1
  6494     01CF  1903               	skipnz
  6495     01D0  29D2               	goto	u2713
  6496     01D1  07BB               	addwf	___flmul@grs+3,f
  6497     01D2                     u2713:
  6498     01D2                     l2637:
  6499     01D2  3008               	movlw	8
  6500     01D3  00B2               	movwf	??___flmul
  6501     01D4                     u2725:
  6502     01D4  1003               	clrc
  6503     01D5  0DB8               	rlf	___flmul@grs,f
  6504     01D6  0DB9               	rlf	___flmul@grs+1,f
  6505     01D7  0DBA               	rlf	___flmul@grs+2,f
  6506     01D8  0DBB               	rlf	___flmul@grs+3,f
  6507     01D9  0BB2               	decfsz	??___flmul,f
  6508     01DA  29D4               	goto	u2725
  6509     01DB  082A               	movf	___flmul@b,w
  6510     01DC  00F3               	movwf	__Umul8_16@multiplicand
  6511     01DD  082E               	movf	___flmul@a,w
  6512     01DE  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6513     01E3  0874               	movf	?__Umul8_16+1,w
  6514     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  6515     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  6516     01E6  00C3               	movwf	___flmul@temp+1
  6517     01E7  0873               	movf	?__Umul8_16,w
  6518     01E8  00C2               	movwf	___flmul@temp
  6519     01E9                     l2639:
  6520     01E9  0842               	movf	___flmul@temp,w
  6521     01EA  00B2               	movwf	??___flmul
  6522     01EB  0843               	movf	___flmul@temp+1,w
  6523     01EC  00B3               	movwf	??___flmul+1
  6524     01ED  01B4               	clrf	??___flmul+2
  6525     01EE  01B5               	clrf	??___flmul+3
  6526     01EF  0832               	movf	??___flmul,w
  6527     01F0  07B8               	addwf	___flmul@grs,f
  6528     01F1  0833               	movf	??___flmul+1,w
  6529     01F2  1103               	clrz
  6530     01F3  1803               	skipnc
  6531     01F4  3E01               	addlw	1
  6532     01F5  1903               	skipnz
  6533     01F6  29F8               	goto	u2731
  6534     01F7  07B9               	addwf	___flmul@grs+1,f
  6535     01F8                     u2731:
  6536     01F8  0834               	movf	??___flmul+2,w
  6537     01F9  1103               	clrz
  6538     01FA  1803               	skipnc
  6539     01FB  3E01               	addlw	1
  6540     01FC  1903               	skipnz
  6541     01FD  29FF               	goto	u2732
  6542     01FE  07BA               	addwf	___flmul@grs+2,f
  6543     01FF                     u2732:
  6544     01FF  0835               	movf	??___flmul+3,w
  6545     0200  1103               	clrz
  6546     0201  1803               	skipnc
  6547     0202  3E01               	addlw	1
  6548     0203  1903               	skipnz
  6549     0204  2A06               	goto	u2733
  6550     0205  07BB               	addwf	___flmul@grs+3,f
  6551     0206                     u2733:
  6552     0206                     l2641:
  6553     0206  082B               	movf	___flmul@b+1,w
  6554     0207  00F3               	movwf	__Umul8_16@multiplicand
  6555     0208  0830               	movf	___flmul@a+2,w
  6556     0209  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6557     020E  0874               	movf	?__Umul8_16+1,w
  6558     020F  1283               	bcf	3,5	;RP0=0, select bank0
  6559     0210  1303               	bcf	3,6	;RP1=0, select bank0
  6560     0211  00C3               	movwf	___flmul@temp+1
  6561     0212  0873               	movf	?__Umul8_16,w
  6562     0213  00C2               	movwf	___flmul@temp
  6563     0214  0842               	movf	___flmul@temp,w
  6564     0215  00B2               	movwf	??___flmul
  6565     0216  0843               	movf	___flmul@temp+1,w
  6566     0217  00B3               	movwf	??___flmul+1
  6567     0218  01B4               	clrf	??___flmul+2
  6568     0219  01B5               	clrf	??___flmul+3
  6569     021A  0832               	movf	??___flmul,w
  6570     021B  07BE               	addwf	___flmul@prod,f
  6571     021C  0833               	movf	??___flmul+1,w
  6572     021D  1103               	clrz
  6573     021E  1803               	skipnc
  6574     021F  3E01               	addlw	1
  6575     0220  1903               	skipnz
  6576     0221  2A23               	goto	u2741
  6577     0222  07BF               	addwf	___flmul@prod+1,f
  6578     0223                     u2741:
  6579     0223  0834               	movf	??___flmul+2,w
  6580     0224  1103               	clrz
  6581     0225  1803               	skipnc
  6582     0226  3E01               	addlw	1
  6583     0227  1903               	skipnz
  6584     0228  2A2A               	goto	u2742
  6585     0229  07C0               	addwf	___flmul@prod+2,f
  6586     022A                     u2742:
  6587     022A  0835               	movf	??___flmul+3,w
  6588     022B  1103               	clrz
  6589     022C  1803               	skipnc
  6590     022D  3E01               	addlw	1
  6591     022E  1903               	skipnz
  6592     022F  2A31               	goto	u2743
  6593     0230  07C1               	addwf	___flmul@prod+3,f
  6594     0231                     u2743:
  6595     0231                     l2643:
  6596     0231  082C               	movf	___flmul@b+2,w
  6597     0232  00F3               	movwf	__Umul8_16@multiplicand
  6598     0233  082F               	movf	___flmul@a+1,w
  6599     0234  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6600     0239  0874               	movf	?__Umul8_16+1,w
  6601     023A  1283               	bcf	3,5	;RP0=0, select bank0
  6602     023B  1303               	bcf	3,6	;RP1=0, select bank0
  6603     023C  00C3               	movwf	___flmul@temp+1
  6604     023D  0873               	movf	?__Umul8_16,w
  6605     023E  00C2               	movwf	___flmul@temp
  6606     023F                     l2645:
  6607     023F  0842               	movf	___flmul@temp,w
  6608     0240  00B2               	movwf	??___flmul
  6609     0241  0843               	movf	___flmul@temp+1,w
  6610     0242  00B3               	movwf	??___flmul+1
  6611     0243  01B4               	clrf	??___flmul+2
  6612     0244  01B5               	clrf	??___flmul+3
  6613     0245  0832               	movf	??___flmul,w
  6614     0246  07BE               	addwf	___flmul@prod,f
  6615     0247  0833               	movf	??___flmul+1,w
  6616     0248  1103               	clrz
  6617     0249  1803               	skipnc
  6618     024A  3E01               	addlw	1
  6619     024B  1903               	skipnz
  6620     024C  2A4E               	goto	u2751
  6621     024D  07BF               	addwf	___flmul@prod+1,f
  6622     024E                     u2751:
  6623     024E  0834               	movf	??___flmul+2,w
  6624     024F  1103               	clrz
  6625     0250  1803               	skipnc
  6626     0251  3E01               	addlw	1
  6627     0252  1903               	skipnz
  6628     0253  2A55               	goto	u2752
  6629     0254  07C0               	addwf	___flmul@prod+2,f
  6630     0255                     u2752:
  6631     0255  0835               	movf	??___flmul+3,w
  6632     0256  1103               	clrz
  6633     0257  1803               	skipnc
  6634     0258  3E01               	addlw	1
  6635     0259  1903               	skipnz
  6636     025A  2A5C               	goto	u2753
  6637     025B  07C1               	addwf	___flmul@prod+3,f
  6638     025C                     u2753:
  6639     025C  082C               	movf	___flmul@b+2,w
  6640     025D  00F3               	movwf	__Umul8_16@multiplicand
  6641     025E  0830               	movf	___flmul@a+2,w
  6642     025F  120A  158A  20B0  120A  118A  	fcall	__Umul8_16
  6643     0264  0874               	movf	?__Umul8_16+1,w
  6644     0265  1283               	bcf	3,5	;RP0=0, select bank0
  6645     0266  1303               	bcf	3,6	;RP1=0, select bank0
  6646     0267  00C3               	movwf	___flmul@temp+1
  6647     0268  0873               	movf	?__Umul8_16,w
  6648     0269  00C2               	movwf	___flmul@temp
  6649     026A                     l2647:
  6650     026A  0842               	movf	___flmul@temp,w
  6651     026B  00B2               	movwf	??___flmul
  6652     026C  0843               	movf	___flmul@temp+1,w
  6653     026D  00B3               	movwf	??___flmul+1
  6654     026E  01B4               	clrf	??___flmul+2
  6655     026F  01B5               	clrf	??___flmul+3
  6656     0270  3008               	movlw	8
  6657     0271                     u2765:
  6658     0271  1003               	clrc
  6659     0272  0DB2               	rlf	??___flmul,f
  6660     0273  0DB3               	rlf	??___flmul+1,f
  6661     0274  0DB4               	rlf	??___flmul+2,f
  6662     0275  0DB5               	rlf	??___flmul+3,f
  6663     0276                     u2760:
  6664     0276  3EFF               	addlw	-1
  6665     0277  1D03               	skipz
  6666     0278  2A71               	goto	u2765
  6667     0279  0832               	movf	??___flmul,w
  6668     027A  07BE               	addwf	___flmul@prod,f
  6669     027B  0833               	movf	??___flmul+1,w
  6670     027C  1103               	clrz
  6671     027D  1803               	skipnc
  6672     027E  3E01               	addlw	1
  6673     027F  1903               	skipnz
  6674     0280  2A82               	goto	u2771
  6675     0281  07BF               	addwf	___flmul@prod+1,f
  6676     0282                     u2771:
  6677     0282  0834               	movf	??___flmul+2,w
  6678     0283  1103               	clrz
  6679     0284  1803               	skipnc
  6680     0285  3E01               	addlw	1
  6681     0286  1903               	skipnz
  6682     0287  2A89               	goto	u2772
  6683     0288  07C0               	addwf	___flmul@prod+2,f
  6684     0289                     u2772:
  6685     0289  0835               	movf	??___flmul+3,w
  6686     028A  1103               	clrz
  6687     028B  1803               	skipnc
  6688     028C  3E01               	addlw	1
  6689     028D  1903               	skipnz
  6690     028E  2A90               	goto	u2773
  6691     028F  07C1               	addwf	___flmul@prod+3,f
  6692     0290                     u2773:
  6693     0290                     l2649:
  6694     0290  0838               	movf	___flmul@grs,w
  6695     0291  00B2               	movwf	??___flmul
  6696     0292  0839               	movf	___flmul@grs+1,w
  6697     0293  00B3               	movwf	??___flmul+1
  6698     0294  083A               	movf	___flmul@grs+2,w
  6699     0295  00B4               	movwf	??___flmul+2
  6700     0296  083B               	movf	___flmul@grs+3,w
  6701     0297  00B5               	movwf	??___flmul+3
  6702     0298  3018               	movlw	24
  6703     0299                     u2785:
  6704     0299  1003               	clrc
  6705     029A  0CB5               	rrf	??___flmul+3,f
  6706     029B  0CB4               	rrf	??___flmul+2,f
  6707     029C  0CB3               	rrf	??___flmul+1,f
  6708     029D  0CB2               	rrf	??___flmul,f
  6709     029E                     u2780:
  6710     029E  3EFF               	addlw	-1
  6711     029F  1D03               	skipz
  6712     02A0  2A99               	goto	u2785
  6713     02A1  0832               	movf	??___flmul,w
  6714     02A2  07BE               	addwf	___flmul@prod,f
  6715     02A3  0833               	movf	??___flmul+1,w
  6716     02A4  1103               	clrz
  6717     02A5  1803               	skipnc
  6718     02A6  3E01               	addlw	1
  6719     02A7  1903               	skipnz
  6720     02A8  2AAA               	goto	u2791
  6721     02A9  07BF               	addwf	___flmul@prod+1,f
  6722     02AA                     u2791:
  6723     02AA  0834               	movf	??___flmul+2,w
  6724     02AB  1103               	clrz
  6725     02AC  1803               	skipnc
  6726     02AD  3E01               	addlw	1
  6727     02AE  1903               	skipnz
  6728     02AF  2AB1               	goto	u2792
  6729     02B0  07C0               	addwf	___flmul@prod+2,f
  6730     02B1                     u2792:
  6731     02B1  0835               	movf	??___flmul+3,w
  6732     02B2  1103               	clrz
  6733     02B3  1803               	skipnc
  6734     02B4  3E01               	addlw	1
  6735     02B5  1903               	skipnz
  6736     02B6  2AB8               	goto	u2793
  6737     02B7  07C1               	addwf	___flmul@prod+3,f
  6738     02B8                     u2793:
  6739     02B8                     l2651:
  6740     02B8  3008               	movlw	8
  6741     02B9  00B2               	movwf	??___flmul
  6742     02BA                     u2805:
  6743     02BA  1003               	clrc
  6744     02BB  0DB8               	rlf	___flmul@grs,f
  6745     02BC  0DB9               	rlf	___flmul@grs+1,f
  6746     02BD  0DBA               	rlf	___flmul@grs+2,f
  6747     02BE  0DBB               	rlf	___flmul@grs+3,f
  6748     02BF  0BB2               	decfsz	??___flmul,f
  6749     02C0  2ABA               	goto	u2805
  6750     02C1                     l2653:
  6751     02C1  083D               	movf	___flmul@bexp,w
  6752     02C2  073C               	addwf	___flmul@aexp,w
  6753     02C3  00B2               	movwf	??___flmul
  6754     02C4  01B3               	clrf	??___flmul+1
  6755     02C5  0DB3               	rlf	??___flmul+1,f
  6756     02C6  0832               	movf	??___flmul,w
  6757     02C7  3E82               	addlw	130
  6758     02C8  00C2               	movwf	___flmul@temp
  6759     02C9  0833               	movf	??___flmul+1,w
  6760     02CA  1803               	skipnc
  6761     02CB  3E01               	addlw	1
  6762     02CC  3EFF               	addlw	255
  6763     02CD  00C3               	movwf	___flmul@temp+1
  6764     02CE  2AEC               	goto	l2665
  6765     02CF                     l2655:
  6766     02CF  3001               	movlw	1
  6767     02D0  00B2               	movwf	??___flmul
  6768     02D1                     u2815:
  6769     02D1  1003               	clrc
  6770     02D2  0DBE               	rlf	___flmul@prod,f
  6771     02D3  0DBF               	rlf	___flmul@prod+1,f
  6772     02D4  0DC0               	rlf	___flmul@prod+2,f
  6773     02D5  0DC1               	rlf	___flmul@prod+3,f
  6774     02D6  0BB2               	decfsz	??___flmul,f
  6775     02D7  2AD1               	goto	u2815
  6776     02D8                     l2657:
  6777     02D8  1FBB               	btfss	___flmul@grs+3,7
  6778     02D9  2ADB               	goto	u2821
  6779     02DA  2ADC               	goto	u2820
  6780     02DB                     u2821:
  6781     02DB  2ADD               	goto	l2661
  6782     02DC                     u2820:
  6783     02DC                     l2659:
  6784     02DC  143E               	bsf	___flmul@prod,0
  6785     02DD                     l2661:
  6786     02DD  3001               	movlw	1
  6787     02DE  00B2               	movwf	??___flmul
  6788     02DF                     u2835:
  6789     02DF  1003               	clrc
  6790     02E0  0DB8               	rlf	___flmul@grs,f
  6791     02E1  0DB9               	rlf	___flmul@grs+1,f
  6792     02E2  0DBA               	rlf	___flmul@grs+2,f
  6793     02E3  0DBB               	rlf	___flmul@grs+3,f
  6794     02E4  0BB2               	decfsz	??___flmul,f
  6795     02E5  2ADF               	goto	u2835
  6796     02E6                     l2663:
  6797     02E6  30FF               	movlw	255
  6798     02E7  07C2               	addwf	___flmul@temp,f
  6799     02E8  1803               	skipnc
  6800     02E9  0AC3               	incf	___flmul@temp+1,f
  6801     02EA  30FF               	movlw	255
  6802     02EB  07C3               	addwf	___flmul@temp+1,f
  6803     02EC                     l2665:
  6804     02EC  1FC0               	btfss	___flmul@prod+2,7
  6805     02ED  2AEF               	goto	u2841
  6806     02EE  2AF0               	goto	u2840
  6807     02EF                     u2841:
  6808     02EF  2ACF               	goto	l2655
  6809     02F0                     u2840:
  6810     02F0                     l2667:
  6811     02F0  01BC               	clrf	___flmul@aexp
  6812     02F1                     l2669:
  6813     02F1  1FBB               	btfss	___flmul@grs+3,7
  6814     02F2  2AF4               	goto	u2851
  6815     02F3  2AF5               	goto	u2850
  6816     02F4                     u2851:
  6817     02F4  2B11               	goto	l2677
  6818     02F5                     u2850:
  6819     02F5                     l2671:
  6820     02F5  30FF               	movlw	255
  6821     02F6  0538               	andwf	___flmul@grs,w
  6822     02F7  00B2               	movwf	??___flmul
  6823     02F8  30FF               	movlw	255
  6824     02F9  0539               	andwf	___flmul@grs+1,w
  6825     02FA  00B3               	movwf	??___flmul+1
  6826     02FB  30FF               	movlw	255
  6827     02FC  053A               	andwf	___flmul@grs+2,w
  6828     02FD  00B4               	movwf	??___flmul+2
  6829     02FE  307F               	movlw	127
  6830     02FF  053B               	andwf	___flmul@grs+3,w
  6831     0300  00B5               	movwf	??___flmul+3
  6832     0301  0835               	movf	??___flmul+3,w
  6833     0302  0434               	iorwf	??___flmul+2,w
  6834     0303  0433               	iorwf	??___flmul+1,w
  6835     0304  0432               	iorwf	??___flmul,w
  6836     0305  1903               	skipnz
  6837     0306  2B08               	goto	u2861
  6838     0307  2B09               	goto	u2860
  6839     0308                     u2861:
  6840     0308  2B0C               	goto	l838
  6841     0309                     u2860:
  6842     0309                     l2673:
  6843     0309  3001               	movlw	1
  6844     030A  00BC               	movwf	___flmul@aexp
  6845     030B  2B11               	goto	l2677
  6846     030C                     l838:
  6847     030C  1C3E               	btfss	___flmul@prod,0
  6848     030D  2B0F               	goto	u2871
  6849     030E  2B10               	goto	u2870
  6850     030F                     u2871:
  6851     030F  2B11               	goto	l2677
  6852     0310                     u2870:
  6853     0310  2B09               	goto	l2673
  6854     0311                     l2677:
  6855     0311  083C               	movf	___flmul@aexp,w
  6856     0312  1903               	btfsc	3,2
  6857     0313  2B15               	goto	u2881
  6858     0314  2B16               	goto	u2880
  6859     0315                     u2881:
  6860     0315  2B47               	goto	l2687
  6861     0316                     u2880:
  6862     0316                     l2679:
  6863     0316  3001               	movlw	1
  6864     0317  07BE               	addwf	___flmul@prod,f
  6865     0318  3000               	movlw	0
  6866     0319  1803               	skipnc
  6867     031A  3001               	movlw	1
  6868     031B  07BF               	addwf	___flmul@prod+1,f
  6869     031C  3000               	movlw	0
  6870     031D  1803               	skipnc
  6871     031E  3001               	movlw	1
  6872     031F  07C0               	addwf	___flmul@prod+2,f
  6873     0320  3000               	movlw	0
  6874     0321  1803               	skipnc
  6875     0322  3001               	movlw	1
  6876     0323  07C1               	addwf	___flmul@prod+3,f
  6877     0324                     l2681:
  6878     0324  1C41               	btfss	___flmul@prod+3,0
  6879     0325  2B27               	goto	u2891
  6880     0326  2B28               	goto	u2890
  6881     0327                     u2891:
  6882     0327  2B47               	goto	l2687
  6883     0328                     u2890:
  6884     0328                     l2683:
  6885     0328  083E               	movf	___flmul@prod,w
  6886     0329  00B2               	movwf	??___flmul
  6887     032A  083F               	movf	___flmul@prod+1,w
  6888     032B  00B3               	movwf	??___flmul+1
  6889     032C  0840               	movf	___flmul@prod+2,w
  6890     032D  00B4               	movwf	??___flmul+2
  6891     032E  0841               	movf	___flmul@prod+3,w
  6892     032F  00B5               	movwf	??___flmul+3
  6893     0330  3001               	movlw	1
  6894     0331  00B6               	movwf	??___flmul+4
  6895     0332                     u2905:
  6896     0332  0D35               	rlf	??___flmul+3,w
  6897     0333  0CB5               	rrf	??___flmul+3,f
  6898     0334  0CB4               	rrf	??___flmul+2,f
  6899     0335  0CB3               	rrf	??___flmul+1,f
  6900     0336  0CB2               	rrf	??___flmul,f
  6901     0337                     u2900:
  6902     0337  0BB6               	decfsz	??___flmul+4,f
  6903     0338  2B32               	goto	u2905
  6904     0339  0835               	movf	??___flmul+3,w
  6905     033A  00C1               	movwf	___flmul@prod+3
  6906     033B  0834               	movf	??___flmul+2,w
  6907     033C  00C0               	movwf	___flmul@prod+2
  6908     033D  0833               	movf	??___flmul+1,w
  6909     033E  00BF               	movwf	___flmul@prod+1
  6910     033F  0832               	movf	??___flmul,w
  6911     0340  00BE               	movwf	___flmul@prod
  6912     0341                     l2685:
  6913     0341  3001               	movlw	1
  6914     0342  07C2               	addwf	___flmul@temp,f
  6915     0343  1803               	skipnc
  6916     0344  0AC3               	incf	___flmul@temp+1,f
  6917     0345  3000               	movlw	0
  6918     0346  07C3               	addwf	___flmul@temp+1,f
  6919     0347                     l2687:
  6920     0347  0843               	movf	___flmul@temp+1,w
  6921     0348  3A80               	xorlw	128
  6922     0349  00FF               	movwf	btemp+1
  6923     034A  3080               	movlw	128
  6924     034B  027F               	subwf	btemp+1,w
  6925     034C  1D03               	skipz
  6926     034D  2B50               	goto	u2915
  6927     034E  30FF               	movlw	255
  6928     034F  0242               	subwf	___flmul@temp,w
  6929     0350                     u2915:
  6930     0350  1C03               	skipc
  6931     0351  2B53               	goto	u2911
  6932     0352  2B54               	goto	u2910
  6933     0353                     u2911:
  6934     0353  2B5F               	goto	l2691
  6935     0354                     u2910:
  6936     0354                     l2689:
  6937     0354  307F               	movlw	127
  6938     0355  1283               	bcf	3,5	;RP0=0, select bank0
  6939     0356  1303               	bcf	3,6	;RP1=0, select bank0
  6940     0357  00C1               	movwf	___flmul@prod+3
  6941     0358  3080               	movlw	128
  6942     0359  00C0               	movwf	___flmul@prod+2
  6943     035A  3000               	movlw	0
  6944     035B  00BF               	movwf	___flmul@prod+1
  6945     035C  3000               	movlw	0
  6946     035D  00BE               	movwf	___flmul@prod
  6947     035E  2B90               	goto	l844
  6948     035F                     l2691:
  6949     035F  1283               	bcf	3,5	;RP0=0, select bank0
  6950     0360  1303               	bcf	3,6	;RP1=0, select bank0
  6951     0361  0843               	movf	___flmul@temp+1,w
  6952     0362  3A80               	xorlw	128
  6953     0363  00FF               	movwf	btemp+1
  6954     0364  3080               	movlw	128
  6955     0365  027F               	subwf	btemp+1,w
  6956     0366  1D03               	skipz
  6957     0367  2B6A               	goto	u2925
  6958     0368  3001               	movlw	1
  6959     0369  0242               	subwf	___flmul@temp,w
  6960     036A                     u2925:
  6961     036A  1803               	skipnc
  6962     036B  2B6D               	goto	u2921
  6963     036C  2B6E               	goto	u2920
  6964     036D                     u2921:
  6965     036D  2B7A               	goto	l2697
  6966     036E                     u2920:
  6967     036E                     l2693:
  6968     036E  3000               	movlw	0
  6969     036F  1283               	bcf	3,5	;RP0=0, select bank0
  6970     0370  1303               	bcf	3,6	;RP1=0, select bank0
  6971     0371  00C1               	movwf	___flmul@prod+3
  6972     0372  3000               	movlw	0
  6973     0373  00C0               	movwf	___flmul@prod+2
  6974     0374  3000               	movlw	0
  6975     0375  00BF               	movwf	___flmul@prod+1
  6976     0376  3000               	movlw	0
  6977     0377  00BE               	movwf	___flmul@prod
  6978     0378                     l2695:
  6979     0378  01B7               	clrf	___flmul@sign
  6980     0379  2B90               	goto	l844
  6981     037A                     l2697:
  6982     037A  1283               	bcf	3,5	;RP0=0, select bank0
  6983     037B  1303               	bcf	3,6	;RP1=0, select bank0
  6984     037C  0842               	movf	___flmul@temp,w
  6985     037D  00BD               	movwf	___flmul@bexp
  6986     037E  30FF               	movlw	255
  6987     037F  05BE               	andwf	___flmul@prod,f
  6988     0380  30FF               	movlw	255
  6989     0381  05BF               	andwf	___flmul@prod+1,f
  6990     0382  307F               	movlw	127
  6991     0383  05C0               	andwf	___flmul@prod+2,f
  6992     0384  3000               	movlw	0
  6993     0385  05C1               	andwf	___flmul@prod+3,f
  6994     0386                     l2699:
  6995     0386  1C3D               	btfss	___flmul@bexp,0
  6996     0387  2B89               	goto	u2931
  6997     0388  2B8A               	goto	u2930
  6998     0389                     u2931:
  6999     0389  2B8B               	goto	l2703
  7000     038A                     u2930:
  7001     038A                     l2701:
  7002     038A  17C0               	bsf	___flmul@prod+2,7
  7003     038B                     l2703:
  7004     038B  083D               	movf	___flmul@bexp,w
  7005     038C  00B2               	movwf	??___flmul
  7006     038D  1003               	clrc
  7007     038E  0C32               	rrf	??___flmul,w
  7008     038F  00C1               	movwf	___flmul@prod+3
  7009     0390                     l844:
  7010     0390  0837               	movf	___flmul@sign,w
  7011     0391  04C1               	iorwf	___flmul@prod+3,f
  7012     0392                     l2705:
  7013     0392  0841               	movf	___flmul@prod+3,w
  7014     0393  00AD               	movwf	?___flmul+3
  7015     0394  0840               	movf	___flmul@prod+2,w
  7016     0395  00AC               	movwf	?___flmul+2
  7017     0396  083F               	movf	___flmul@prod+1,w
  7018     0397  00AB               	movwf	?___flmul+1
  7019     0398  083E               	movf	___flmul@prod,w
  7020     0399  00AA               	movwf	?___flmul
  7021     039A                     l832:
  7022     039A  0008               	return
  7023     039B                     __end_of___flmul:
  7024                           
  7025                           	psect	text23
  7026     08B0                     __ptext23:	
  7027 ;; *************** function __Umul8_16 *****************
  7028 ;; Defined at:
  7029 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  multiplier      1    wreg     unsigned char 
  7032 ;;  multiplicand    1    3[COMMON] unsigned char 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;  multiplier      1    4[BANK0 ] unsigned char 
  7035 ;;  word_mpld       2    2[BANK0 ] unsigned short 
  7036 ;;  product         2    0[BANK0 ] unsigned short 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  2    3[COMMON] unsigned int 
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7046 ;;      Params:         2       0       0       0       0
  7047 ;;      Locals:         0       5       0       0       0
  7048 ;;      Temps:          2       0       0       0       0
  7049 ;;      Totals:         4       5       0       0       0
  7050 ;;Total ram usage:        9 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; Hardware stack levels required when called: 1
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		___flmul
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060     08B0                     __Umul8_16:	
  7061                           ;psect for function __Umul8_16
  7062                           
  7063                           
  7064                           ;incstack = 0
  7065                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7066                           ;__Umul8_16@multiplier stored from wreg
  7067     08B0  1283               	bcf	3,5	;RP0=0, select bank0
  7068     08B1  1303               	bcf	3,6	;RP1=0, select bank0
  7069     08B2  00A4               	movwf	__Umul8_16@multiplier
  7070     08B3                     l2295:
  7071     08B3  01A0               	clrf	__Umul8_16@product
  7072     08B4  01A1               	clrf	__Umul8_16@product+1
  7073     08B5                     l2297:
  7074     08B5  0873               	movf	__Umul8_16@multiplicand,w
  7075     08B6  00F5               	movwf	??__Umul8_16
  7076     08B7  01F6               	clrf	??__Umul8_16+1
  7077     08B8  0875               	movf	??__Umul8_16,w
  7078     08B9  00A2               	movwf	__Umul8_16@word_mpld
  7079     08BA  0876               	movf	??__Umul8_16+1,w
  7080     08BB  00A3               	movwf	__Umul8_16@word_mpld+1
  7081     08BC                     l2299:
  7082     08BC  1C24               	btfss	__Umul8_16@multiplier,0
  7083     08BD  28BF               	goto	u2071
  7084     08BE  28C0               	goto	u2070
  7085     08BF                     u2071:
  7086     08BF  28C6               	goto	l851
  7087     08C0                     u2070:
  7088     08C0                     l2301:
  7089     08C0  0822               	movf	__Umul8_16@word_mpld,w
  7090     08C1  07A0               	addwf	__Umul8_16@product,f
  7091     08C2  1803               	skipnc
  7092     08C3  0AA1               	incf	__Umul8_16@product+1,f
  7093     08C4  0823               	movf	__Umul8_16@word_mpld+1,w
  7094     08C5  07A1               	addwf	__Umul8_16@product+1,f
  7095     08C6                     l851:
  7096     08C6  3001               	movlw	1
  7097     08C7                     u2085:
  7098     08C7  1003               	clrc
  7099     08C8  0DA2               	rlf	__Umul8_16@word_mpld,f
  7100     08C9  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  7101     08CA  3EFF               	addlw	-1
  7102     08CB  1D03               	skipz
  7103     08CC  28C7               	goto	u2085
  7104     08CD  1003               	clrc
  7105     08CE  0CA4               	rrf	__Umul8_16@multiplier,f
  7106     08CF                     l2303:
  7107     08CF  0824               	movf	__Umul8_16@multiplier,w
  7108     08D0  1D03               	btfss	3,2
  7109     08D1  28D3               	goto	u2091
  7110     08D2  28D4               	goto	u2090
  7111     08D3                     u2091:
  7112     08D3  28BC               	goto	l2299
  7113     08D4                     u2090:
  7114     08D4                     l2305:
  7115     08D4  0821               	movf	__Umul8_16@product+1,w
  7116     08D5  00F4               	movwf	?__Umul8_16+1
  7117     08D6  0820               	movf	__Umul8_16@product,w
  7118     08D7  00F3               	movwf	?__Umul8_16
  7119     08D8                     l853:
  7120     08D8  0008               	return
  7121     08D9                     __end_of__Umul8_16:
  7122                           
  7123                           	psect	text24
  7124     0903                     __ptext24:	
  7125 ;; *************** function _LCD_String_xy *****************
  7126 ;; Defined at:
  7127 ;;		line 170 in file "LCD.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  row             1    wreg     unsigned char 
  7130 ;;  pos             1    0[BANK0 ] unsigned char 
  7131 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
  7132 ;;		 -> STR_9(11), STR_7(8), STR_5(10), STR_4(18), 
  7133 ;;		 -> STR_3(17), STR_2(15), STR_1(17), 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  row             1    2[BANK0 ] unsigned char 
  7136 ;;  location        1    3[BANK0 ] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7146 ;;      Params:         0       2       0       0       0
  7147 ;;      Locals:         0       2       0       0       0
  7148 ;;      Temps:          0       0       0       0       0
  7149 ;;      Totals:         0       4       0       0       0
  7150 ;;Total ram usage:        4 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 3
  7153 ;; This function calls:
  7154 ;;		_LCD_Command
  7155 ;;		_LCD_String
  7156 ;; This function is called by:
  7157 ;;		_funcion_seguridad
  7158 ;;		_funcion_monitoreo_ambiental
  7159 ;;		_funcion_monitoreo_eventos
  7160 ;;		_main
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164     0903                     _LCD_String_xy:	
  7165                           ;psect for function _LCD_String_xy
  7166                           
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7170                           ;LCD_String_xy@row stored from wreg
  7171     0903  1283               	bcf	3,5	;RP0=0, select bank0
  7172     0904  1303               	bcf	3,6	;RP1=0, select bank0
  7173     0905  00A2               	movwf	LCD_String_xy@row
  7174     0906                     l3353:
  7175     0906                     l3355:
  7176                           
  7177                           ;LCD.c: 173:     if(row<=1)
  7178     0906  3002               	movlw	2
  7179     0907  0222               	subwf	LCD_String_xy@row,w
  7180     0908  1803               	skipnc
  7181     0909  290B               	goto	u3711
  7182     090A  290C               	goto	u3710
  7183     090B                     u3711:
  7184     090B  2917               	goto	l3361
  7185     090C                     u3710:
  7186     090C                     l3357:
  7187                           
  7188                           ;LCD.c: 174:     {;LCD.c: 175:         location=(0x80) | ((pos) & 0x0f);
  7189     090C  0820               	movf	LCD_String_xy@pos,w
  7190     090D  390F               	andlw	15
  7191     090E  3880               	iorlw	128
  7192     090F  00A3               	movwf	LCD_String_xy@location
  7193     0910                     l3359:
  7194                           
  7195                           ;LCD.c: 176:         LCD_Command(location);
  7196     0910  0823               	movf	LCD_String_xy@location,w
  7197     0911  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  7198                           
  7199                           ;LCD.c: 177:     }
  7200     0916  2921               	goto	l3365
  7201     0917                     l3361:
  7202                           
  7203                           ;LCD.c: 179:     {;LCD.c: 180:         location=(0xC0) | ((pos) & 0x0f);
  7204     0917  0820               	movf	LCD_String_xy@pos,w
  7205     0918  390F               	andlw	15
  7206     0919  38C0               	iorlw	192
  7207     091A  00A3               	movwf	LCD_String_xy@location
  7208     091B                     l3363:
  7209                           
  7210                           ;LCD.c: 181:         LCD_Command(location);
  7211     091B  0823               	movf	LCD_String_xy@location,w
  7212     091C  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  7213     0921                     l3365:
  7214                           
  7215                           ;LCD.c: 185:     LCD_String(msg);
  7216     0921  1283               	bcf	3,5	;RP0=0, select bank0
  7217     0922  1303               	bcf	3,6	;RP1=0, select bank0
  7218     0923  0821               	movf	LCD_String_xy@msg,w
  7219     0924  00F6               	movwf	LCD_String@msg
  7220     0925  3000               	movlw	0
  7221     0926  1D03               	btfss	3,2
  7222     0927  3080               	movlw	128
  7223     0928  00F7               	movwf	LCD_String@msg+1
  7224     0929  160A  118A  27DA  120A  158A  	fcall	_LCD_String
  7225     092E                     l34:
  7226     092E  0008               	return
  7227     092F                     __end_of_LCD_String_xy:
  7228                           
  7229                           	psect	text25
  7230     17DA                     __ptext25:	
  7231 ;; *************** function _LCD_String *****************
  7232 ;; Defined at:
  7233 ;;		line 160 in file "LCD.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  msg             2    6[COMMON] PTR const unsigned char 
  7236 ;;		 -> STR_9(11), STR_7(8), StringTemperature(32), STR_5(10), 
  7237 ;;		 -> STR_4(18), STR_3(17), STR_2(15), STR_1(17), 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7249 ;;      Params:         2       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0
  7252 ;;      Totals:         2       0       0       0       0
  7253 ;;Total ram usage:        2 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; Hardware stack levels required when called: 2
  7256 ;; This function calls:
  7257 ;;		_LCD_Char
  7258 ;; This function is called by:
  7259 ;;		_LCD_String_xy
  7260 ;;		_funcion_monitoreo_ambiental
  7261 ;;		_funcion_monitoreo_eventos
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265     17DA                     _LCD_String:	
  7266                           ;psect for function _LCD_String
  7267                           
  7268     17DA                     l2281:	
  7269                           ;incstack = 0
  7270                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7271                           
  7272                           
  7273                           ;LCD.c: 160: void LCD_String(const char *msg);LCD.c: 161: {;LCD.c: 162:  while((*msg)!=0
      +                          )
  7274     17DA  2FEF               	goto	l2287
  7275     17DB                     l2283:
  7276                           
  7277                           ;LCD.c: 163:  {;LCD.c: 164:    LCD_Char(*msg);
  7278     17DB  0877               	movf	LCD_String@msg+1,w
  7279     17DC  00FF               	movwf	btemp+1
  7280     17DD  0876               	movf	LCD_String@msg,w
  7281     17DE  0084               	movwf	4
  7282     17DF  120A  158A  2000  160A  118A  	fcall	stringtab
  7283     17E4  120A  158A  2165  160A  118A  	fcall	_LCD_Char
  7284     17E9                     l2285:
  7285                           
  7286                           ;LCD.c: 165:    msg++;
  7287     17E9  3001               	movlw	1
  7288     17EA  07F6               	addwf	LCD_String@msg,f
  7289     17EB  1803               	skipnc
  7290     17EC  0AF7               	incf	LCD_String@msg+1,f
  7291     17ED  3000               	movlw	0
  7292     17EE  07F7               	addwf	LCD_String@msg+1,f
  7293     17EF                     l2287:
  7294                           
  7295                           ;LCD.c: 162:  while((*msg)!=0)
  7296     17EF  0877               	movf	LCD_String@msg+1,w
  7297     17F0  1283               	bcf	3,5	;RP0=0, select bank0
  7298     17F1  1303               	bcf	3,6	;RP1=0, select bank0
  7299     17F2  00FF               	movwf	btemp+1
  7300     17F3  0876               	movf	LCD_String@msg,w
  7301     17F4  0084               	movwf	4
  7302     17F5  120A  158A  2000  160A  118A  	fcall	stringtab
  7303     17FA  3A00               	xorlw	0
  7304     17FB  1D03               	skipz
  7305     17FC  2FFE               	goto	u2051
  7306     17FD  2FFF               	goto	u2050
  7307     17FE                     u2051:
  7308     17FE  2FDB               	goto	l2283
  7309     17FF                     u2050:
  7310     17FF                     l29:
  7311     17FF  0008               	return
  7312     1800                     __end_of_LCD_String:
  7313                           
  7314                           	psect	text26
  7315     1730                     __ptext26:	
  7316 ;; *************** function _LCD_Clear *****************
  7317 ;; Defined at:
  7318 ;;		line 201 in file "LCD.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0, pclath, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7332 ;;      Params:         0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0
  7334 ;;      Temps:          2       0       0       0       0
  7335 ;;      Totals:         2       0       0       0       0
  7336 ;;Total ram usage:        2 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; Hardware stack levels required when called: 2
  7339 ;; This function calls:
  7340 ;;		_LCD_Command
  7341 ;; This function is called by:
  7342 ;;		_funcion_seguridad
  7343 ;;		_funcion_monitoreo_ambiental
  7344 ;;		_funcion_monitoreo_eventos
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349     1730                     _LCD_Clear:	
  7350                           ;psect for function _LCD_Clear
  7351                           
  7352     1730                     l2333:	
  7353                           ;incstack = 0
  7354                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7355                           
  7356                           
  7357                           ;LCD.c: 203:     LCD_Command(0x01);
  7358     1730  3001               	movlw	1
  7359     1731  120A  158A  212F  160A  118A  	fcall	_LCD_Command
  7360     1736                     l2335:
  7361                           
  7362                           ;LCD.c: 204:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7363     1736  3008               	movlw	8
  7364     1737  00F7               	movwf	??_LCD_Clear+1
  7365     1738  30C9               	movlw	201
  7366     1739  00F6               	movwf	??_LCD_Clear
  7367     173A                     u4357:
  7368     173A  0BF6               	decfsz	??_LCD_Clear,f
  7369     173B  2F3A               	goto	u4357
  7370     173C  0BF7               	decfsz	??_LCD_Clear+1,f
  7371     173D  2F3A               	goto	u4357
  7372     173E  2F3F               	nop2
  7373     173F                     l37:
  7374     173F  0008               	return
  7375     1740                     __end_of_LCD_Clear:
  7376                           
  7377                           	psect	text27
  7378     16FA                     __ptext27:	
  7379 ;; *************** function _funcion_buzzer *****************
  7380 ;; Defined at:
  7381 ;;		line 292 in file "main.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;		None
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		None
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7395 ;;      Params:         0       0       0       0       0
  7396 ;;      Locals:         0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0
  7398 ;;      Totals:         0       0       0       0       0
  7399 ;;Total ram usage:        0 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 1
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_main
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409     16FA                     _funcion_buzzer:	
  7410                           ;psect for function _funcion_buzzer
  7411                           
  7412     16FA                     l2991:	
  7413                           ;incstack = 0
  7414                           ; Regs used in _funcion_buzzer: []
  7415                           
  7416                           
  7417                           ;main.c: 294:     TRISAbits.TRISA5 = 0;
  7418     16FA  1683               	bsf	3,5	;RP0=1, select bank1
  7419     16FB  1303               	bcf	3,6	;RP1=0, select bank1
  7420     16FC  1285               	bcf	5,5	;volatile
  7421                           
  7422                           ;main.c: 295:     ANSELbits.ANS5 = 0;
  7423     16FD  1683               	bsf	3,5	;RP0=1, select bank3
  7424     16FE  1703               	bsf	3,6	;RP1=1, select bank3
  7425     16FF  1288               	bcf	8,5	;volatile
  7426                           
  7427                           ;main.c: 298:     PORTAbits.RA5 = 1;
  7428     1700  1283               	bcf	3,5	;RP0=0, select bank0
  7429     1701  1303               	bcf	3,6	;RP1=0, select bank0
  7430     1702  1685               	bsf	5,5	;volatile
  7431     1703                     l286:
  7432     1703  0008               	return
  7433     1704                     __end_of_funcion_buzzer:
  7434                           
  7435                           	psect	text28
  7436     1720                     __ptext28:	
  7437 ;; *************** function _adc_init *****************
  7438 ;; Defined at:
  7439 ;;		line 26 in file "adc.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;		None
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      void 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7453 ;;      Params:         0       0       0       0       0
  7454 ;;      Locals:         0       0       0       0       0
  7455 ;;      Temps:          0       0       0       0       0
  7456 ;;      Totals:         0       0       0       0       0
  7457 ;;Total ram usage:        0 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; Hardware stack levels required when called: 1
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_main
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467     1720                     _adc_init:	
  7468                           ;psect for function _adc_init
  7469                           
  7470     1720                     l2993:	
  7471                           ;incstack = 0
  7472                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  7473                           
  7474                           
  7475                           ;adc.c: 28:     ADCON1bits.ADFM = 1;
  7476     1720  1683               	bsf	3,5	;RP0=1, select bank1
  7477     1721  1303               	bcf	3,6	;RP1=0, select bank1
  7478     1722  179F               	bsf	31,7	;volatile
  7479                           
  7480                           ;adc.c: 29:     ADCON1bits.VCFG0 = 0;
  7481     1723  121F               	bcf	31,4	;volatile
  7482                           
  7483                           ;adc.c: 30:     ADCON1bits.VCFG1 = 0;
  7484     1724  129F               	bcf	31,5	;volatile
  7485     1725                     l2995:
  7486                           
  7487                           ;adc.c: 32:     ADCON0bits.ADCS = 0b01;
  7488     1725  1283               	bcf	3,5	;RP0=0, select bank0
  7489     1726  1303               	bcf	3,6	;RP1=0, select bank0
  7490     1727  081F               	movf	31,w	;volatile
  7491     1728  393F               	andlw	-193
  7492     1729  3840               	iorlw	64
  7493     172A  009F               	movwf	31	;volatile
  7494     172B                     l2997:
  7495                           
  7496                           ;adc.c: 33:     ADRESH=0;
  7497     172B  019E               	clrf	30	;volatile
  7498     172C                     l2999:
  7499                           
  7500                           ;adc.c: 34:     ADRESL=0;
  7501     172C  1683               	bsf	3,5	;RP0=1, select bank1
  7502     172D  1303               	bcf	3,6	;RP1=0, select bank1
  7503     172E  019E               	clrf	30	;volatile
  7504     172F                     l326:
  7505     172F  0008               	return
  7506     1730                     __end_of_adc_init:
  7507                           
  7508                           	psect	text29
  7509     1711                     __ptext29:	
  7510 ;; *************** function _Timer1_start *****************
  7511 ;; Defined at:
  7512 ;;		line 9 in file "timer.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		status,2
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7526 ;;      Params:         0       0       0       0       0
  7527 ;;      Locals:         0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0
  7529 ;;      Totals:         0       0       0       0       0
  7530 ;;Total ram usage:        0 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 1
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_main
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540     1711                     _Timer1_start:	
  7541                           ;psect for function _Timer1_start
  7542                           
  7543     1711                     l3001:	
  7544                           ;incstack = 0
  7545                           ; Regs used in _Timer1_start: [status,2]
  7546                           
  7547                           
  7548                           ;timer.c: 10:     GIE=1;
  7549     1711  178B               	bsf	11,7	;volatile
  7550                           
  7551                           ;timer.c: 11:     PEIE=1;
  7552     1712  170B               	bsf	11,6	;volatile
  7553                           
  7554                           ;timer.c: 12:     TMR1IE=1;
  7555     1713  1683               	bsf	3,5	;RP0=1, select bank1
  7556     1714  1303               	bcf	3,6	;RP1=0, select bank1
  7557     1715  140C               	bsf	12,0	;volatile
  7558                           
  7559                           ;timer.c: 13:     TMR1IF=0;
  7560     1716  1283               	bcf	3,5	;RP0=0, select bank0
  7561     1717  1303               	bcf	3,6	;RP1=0, select bank0
  7562     1718  100C               	bcf	12,0	;volatile
  7563     1719                     l3003:
  7564                           
  7565                           ;timer.c: 14:     T1CON=0x00;
  7566     1719  0190               	clrf	16	;volatile
  7567     171A                     l3005:
  7568                           
  7569                           ;timer.c: 15:     TMR1=0xFC16;
  7570     171A  30FC               	movlw	252
  7571     171B  008F               	movwf	15	;volatile
  7572     171C  3016               	movlw	22
  7573     171D  008E               	movwf	14	;volatile
  7574     171E                     l3007:
  7575                           
  7576                           ;timer.c: 16:     TMR1ON=1;
  7577     171E  1410               	bsf	16,0	;volatile
  7578     171F                     l349:
  7579     171F  0008               	return
  7580     1720                     __end_of_Timer1_start:
  7581                           
  7582                           	psect	text30
  7583     09D4                     __ptext30:	
  7584 ;; *************** function _LCD_Load_Custom_Chars *****************
  7585 ;; Defined at:
  7586 ;;		line 206 in file "LCD.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;		None
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  j               1    6[COMMON] unsigned char 
  7591 ;;  i               1    7[COMMON] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7601 ;;      Params:         0       0       0       0       0
  7602 ;;      Locals:         2       0       0       0       0
  7603 ;;      Temps:          0       3       0       0       0
  7604 ;;      Totals:         2       3       0       0       0
  7605 ;;Total ram usage:        5 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 2
  7608 ;; This function calls:
  7609 ;;		_LCD_Char
  7610 ;;		_LCD_Command
  7611 ;; This function is called by:
  7612 ;;		_main
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616     09D4                     _LCD_Load_Custom_Chars:	
  7617                           ;psect for function _LCD_Load_Custom_Chars
  7618                           
  7619     09D4                     l3495:	
  7620                           ;incstack = 0
  7621                           ; Regs used in _LCD_Load_Custom_Chars: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7622                           
  7623                           
  7624                           ;LCD.c: 209:     for (unsigned char i = 0; i < 3; i++) {
  7625     09D4  01F7               	clrf	LCD_Load_Custom_Chars@i
  7626     09D5                     l3501:
  7627                           
  7628                           ;LCD.c: 210:         LCD_Command(0x40 + (i * 8));
  7629     09D5  0877               	movf	LCD_Load_Custom_Chars@i,w
  7630     09D6  1283               	bcf	3,5	;RP0=0, select bank0
  7631     09D7  1303               	bcf	3,6	;RP1=0, select bank0
  7632     09D8  00A0               	movwf	??_LCD_Load_Custom_Chars
  7633     09D9  3002               	movlw	2
  7634     09DA                     u3995:
  7635     09DA  1003               	clrc
  7636     09DB  0DA0               	rlf	??_LCD_Load_Custom_Chars,f
  7637     09DC  3EFF               	addlw	-1
  7638     09DD  1D03               	skipz
  7639     09DE  29DA               	goto	u3995
  7640     09DF  1003               	clrc
  7641     09E0  0D20               	rlf	??_LCD_Load_Custom_Chars,w
  7642     09E1  3E40               	addlw	64
  7643     09E2  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  7644     09E7                     l3503:
  7645                           
  7646                           ;LCD.c: 211:         for (unsigned char j = 0; j < 8; j++) {
  7647     09E7  01F6               	clrf	LCD_Load_Custom_Chars@j
  7648     09E8                     l3509:
  7649                           
  7650                           ;LCD.c: 212:             LCD_Char(customChars[i][j]);
  7651     09E8  0877               	movf	LCD_Load_Custom_Chars@i,w
  7652     09E9  1283               	bcf	3,5	;RP0=0, select bank0
  7653     09EA  1303               	bcf	3,6	;RP1=0, select bank0
  7654     09EB  00A0               	movwf	??_LCD_Load_Custom_Chars
  7655     09EC  3003               	movlw	3
  7656     09ED                     u4005:
  7657     09ED  1003               	clrc
  7658     09EE  0DA0               	rlf	??_LCD_Load_Custom_Chars,f
  7659     09EF  3EFF               	addlw	-1
  7660     09F0  1D03               	skipz
  7661     09F1  29ED               	goto	u4005
  7662     09F2  30B0               	movlw	(low (_customChars| (0+256)))& (0+255)
  7663     09F3  0720               	addwf	??_LCD_Load_Custom_Chars,w
  7664     09F4  00A1               	movwf	??_LCD_Load_Custom_Chars+1
  7665     09F5  0876               	movf	LCD_Load_Custom_Chars@j,w
  7666     09F6  0721               	addwf	??_LCD_Load_Custom_Chars+1,w
  7667     09F7  00A2               	movwf	??_LCD_Load_Custom_Chars+2
  7668     09F8  0822               	movf	??_LCD_Load_Custom_Chars+2,w
  7669     09F9  0084               	movwf	4
  7670     09FA  1783               	bsf	3,7	;select IRP bank3
  7671     09FB  0800               	movf	0,w
  7672     09FC  120A  158A  2165  120A  158A  	fcall	_LCD_Char
  7673     0A01                     l3511:
  7674                           
  7675                           ;LCD.c: 213:         }
  7676     0A01  3001               	movlw	1
  7677     0A02  07F6               	addwf	LCD_Load_Custom_Chars@j,f
  7678     0A03                     l3513:
  7679     0A03  3008               	movlw	8
  7680     0A04  0276               	subwf	LCD_Load_Custom_Chars@j,w
  7681     0A05  1C03               	skipc
  7682     0A06  2A08               	goto	u4011
  7683     0A07  2A09               	goto	u4010
  7684     0A08                     u4011:
  7685     0A08  29E8               	goto	l3509
  7686     0A09                     u4010:
  7687     0A09                     l3515:
  7688                           
  7689                           ;LCD.c: 214:     }
  7690     0A09  3001               	movlw	1
  7691     0A0A  07F7               	addwf	LCD_Load_Custom_Chars@i,f
  7692     0A0B                     l3517:
  7693     0A0B  3003               	movlw	3
  7694     0A0C  0277               	subwf	LCD_Load_Custom_Chars@i,w
  7695     0A0D  1C03               	skipc
  7696     0A0E  2A10               	goto	u4021
  7697     0A0F  2A11               	goto	u4020
  7698     0A10                     u4021:
  7699     0A10  29D5               	goto	l3501
  7700     0A11                     u4020:
  7701     0A11                     l44:
  7702     0A11  0008               	return
  7703     0A12                     __end_of_LCD_Load_Custom_Chars:
  7704                           
  7705                           	psect	text31
  7706     0965                     __ptext31:	
  7707 ;; *************** function _LCD_Char *****************
  7708 ;; Defined at:
  7709 ;;		line 136 in file "LCD.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  dat             1    wreg     unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  dat             1    5[COMMON] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7723 ;;      Params:         0       0       0       0       0
  7724 ;;      Locals:         1       0       0       0       0
  7725 ;;      Temps:          2       0       0       0       0
  7726 ;;      Totals:         3       0       0       0       0
  7727 ;;Total ram usage:        3 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 1
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_LCD_String
  7734 ;;		_LCD_Load_Custom_Chars
  7735 ;;		_funcion_seguridad
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739     0965                     _LCD_Char:	
  7740                           ;psect for function _LCD_Char
  7741                           
  7742                           
  7743                           ;incstack = 0
  7744                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  7745                           ;LCD_Char@dat stored from wreg
  7746     0965  00F5               	movwf	LCD_Char@dat
  7747     0966                     l2189:
  7748                           
  7749                           ;LCD.c: 136: void LCD_Char(unsigned char dat);LCD.c: 137: {;LCD.c: 138:  PORTC = (PORTC 
      +                          & 0x0f) | (0xF0 & dat);
  7750     0966  30F0               	movlw	240
  7751     0967  0575               	andwf	LCD_Char@dat,w
  7752     0968  00F3               	movwf	??_LCD_Char
  7753     0969  1283               	bcf	3,5	;RP0=0, select bank0
  7754     096A  1303               	bcf	3,6	;RP1=0, select bank0
  7755     096B  0807               	movf	7,w	;volatile
  7756     096C  390F               	andlw	15
  7757     096D  0473               	iorwf	??_LCD_Char,w
  7758     096E  0087               	movwf	7	;volatile
  7759     096F                     l2191:
  7760                           
  7761                           ;LCD.c: 139:  PORTCbits.RC0 = 1;
  7762     096F  1407               	bsf	7,0	;volatile
  7763     0970                     l2193:
  7764                           
  7765                           ;LCD.c: 140:  PORTCbits.RC1 = 1;
  7766     0970  1487               	bsf	7,1	;volatile
  7767     0971                     l2195:
  7768                           
  7769                           ;LCD.c: 141:  __nop();
  7770     0971  0000               	nop
  7771     0972                     l2197:
  7772                           
  7773                           ;LCD.c: 142:  PORTCbits.RC1 = 0;
  7774     0972  1283               	bcf	3,5	;RP0=0, select bank0
  7775     0973  1303               	bcf	3,6	;RP1=0, select bank0
  7776     0974  1087               	bcf	7,1	;volatile
  7777     0975                     l2199:
  7778                           
  7779                           ;LCD.c: 143:  _delay((unsigned long)((1)*(8000000/4000.0)));
  7780     0975  3003               	movlw	3
  7781     0976  00F4               	movwf	??_LCD_Char+1
  7782     0977  3097               	movlw	151
  7783     0978  00F3               	movwf	??_LCD_Char
  7784     0979                     u4367:
  7785     0979  0BF3               	decfsz	??_LCD_Char,f
  7786     097A  2979               	goto	u4367
  7787     097B  0BF4               	decfsz	??_LCD_Char+1,f
  7788     097C  2979               	goto	u4367
  7789     097D  297E               	nop2
  7790     097E                     l2201:
  7791                           
  7792                           ;LCD.c: 144:     PORTC = (unsigned char)((PORTC & 0x0f) | (dat<<4));
  7793     097E  0875               	movf	LCD_Char@dat,w
  7794     097F  00F3               	movwf	??_LCD_Char
  7795     0980  3004               	movlw	4
  7796     0981                     u1935:
  7797     0981  1003               	clrc
  7798     0982  0DF3               	rlf	??_LCD_Char,f
  7799     0983  3EFF               	addlw	-1
  7800     0984  1D03               	skipz
  7801     0985  2981               	goto	u1935
  7802     0986  1283               	bcf	3,5	;RP0=0, select bank0
  7803     0987  1303               	bcf	3,6	;RP1=0, select bank0
  7804     0988  0807               	movf	7,w	;volatile
  7805     0989  390F               	andlw	15
  7806     098A  0473               	iorwf	??_LCD_Char,w
  7807     098B  0087               	movwf	7	;volatile
  7808     098C                     l2203:
  7809                           
  7810                           ;LCD.c: 145:  PORTCbits.RC1 = 1;
  7811     098C  1487               	bsf	7,1	;volatile
  7812     098D                     l2205:
  7813                           
  7814                           ;LCD.c: 146:  __nop();
  7815     098D  0000               	nop
  7816     098E                     l2207:
  7817                           
  7818                           ;LCD.c: 147:  PORTCbits.RC1 = 0;
  7819     098E  1283               	bcf	3,5	;RP0=0, select bank0
  7820     098F  1303               	bcf	3,6	;RP1=0, select bank0
  7821     0990  1087               	bcf	7,1	;volatile
  7822                           
  7823                           ;LCD.c: 148:  _delay((unsigned long)((3)*(8000000/4000.0)));
  7824     0991  3008               	movlw	8
  7825     0992  00F4               	movwf	??_LCD_Char+1
  7826     0993  30C9               	movlw	201
  7827     0994  00F3               	movwf	??_LCD_Char
  7828     0995                     u4377:
  7829     0995  0BF3               	decfsz	??_LCD_Char,f
  7830     0996  2995               	goto	u4377
  7831     0997  0BF4               	decfsz	??_LCD_Char+1,f
  7832     0998  2995               	goto	u4377
  7833     0999  299A               	nop2
  7834     099A                     l23:
  7835     099A  0008               	return
  7836     099B                     __end_of_LCD_Char:
  7837                           
  7838                           	psect	text32
  7839     08D9                     __ptext32:	
  7840 ;; *************** function _LCD_Init *****************
  7841 ;; Defined at:
  7842 ;;		line 73 in file "LCD.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;		None
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;		None
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1    wreg      void 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, pclath, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7856 ;;      Params:         0       0       0       0       0
  7857 ;;      Locals:         0       0       0       0       0
  7858 ;;      Temps:          2       0       0       0       0
  7859 ;;      Totals:         2       0       0       0       0
  7860 ;;Total ram usage:        2 bytes
  7861 ;; Hardware stack levels used: 1
  7862 ;; Hardware stack levels required when called: 2
  7863 ;; This function calls:
  7864 ;;		_LCD_Command
  7865 ;; This function is called by:
  7866 ;;		_main
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870     08D9                     _LCD_Init:	
  7871                           ;psect for function _LCD_Init
  7872                           
  7873     08D9                     l2751:	
  7874                           ;incstack = 0
  7875                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7876                           
  7877                           
  7878                           ;LCD.c: 75:     TRISC = 0;
  7879     08D9  1683               	bsf	3,5	;RP0=1, select bank1
  7880     08DA  1303               	bcf	3,6	;RP1=0, select bank1
  7881     08DB  0187               	clrf	7	;volatile
  7882     08DC                     l2753:
  7883                           
  7884                           ;LCD.c: 76:     _delay((unsigned long)((15)*(8000000/4000.0)));
  7885     08DC  3027               	movlw	39
  7886     08DD  00F7               	movwf	??_LCD_Init+1
  7887     08DE  30F5               	movlw	245
  7888     08DF  00F6               	movwf	??_LCD_Init
  7889     08E0                     u4387:
  7890     08E0  0BF6               	decfsz	??_LCD_Init,f
  7891     08E1  28E0               	goto	u4387
  7892     08E2  0BF7               	decfsz	??_LCD_Init+1,f
  7893     08E3  28E0               	goto	u4387
  7894     08E4                     l2755:
  7895                           
  7896                           ;LCD.c: 77:     LCD_Command(0x02);
  7897     08E4  3002               	movlw	2
  7898     08E5  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  7899     08EA                     l2757:
  7900                           
  7901                           ;LCD.c: 78:     LCD_Command(0x28);
  7902     08EA  3028               	movlw	40
  7903     08EB  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  7904     08F0                     l2759:
  7905                           
  7906                           ;LCD.c: 79:     LCD_Command(0x01);
  7907     08F0  3001               	movlw	1
  7908     08F1  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  7909     08F6                     l2761:
  7910                           
  7911                           ;LCD.c: 80:     LCD_Command(0x0c);
  7912     08F6  300C               	movlw	12
  7913     08F7  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  7914     08FC                     l2763:
  7915                           
  7916                           ;LCD.c: 81:     LCD_Command(0x06);
  7917     08FC  3006               	movlw	6
  7918     08FD  120A  158A  212F  120A  158A  	fcall	_LCD_Command
  7919     0902                     l17:
  7920     0902  0008               	return
  7921     0903                     __end_of_LCD_Init:
  7922                           
  7923                           	psect	text33
  7924     092F                     __ptext33:	
  7925 ;; *************** function _LCD_Command *****************
  7926 ;; Defined at:
  7927 ;;		line 107 in file "LCD.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  cmd             1    wreg     unsigned char 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  cmd             1    5[COMMON] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      void 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7941 ;;      Params:         0       0       0       0       0
  7942 ;;      Locals:         1       0       0       0       0
  7943 ;;      Temps:          2       0       0       0       0
  7944 ;;      Totals:         3       0       0       0       0
  7945 ;;Total ram usage:        3 bytes
  7946 ;; Hardware stack levels used: 1
  7947 ;; Hardware stack levels required when called: 1
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_LCD_Init
  7952 ;;		_LCD_String_xy
  7953 ;;		_LCD_Clear
  7954 ;;		_LCD_Load_Custom_Chars
  7955 ;;		_funcion_seguridad
  7956 ;;		_funcion_monitoreo_ambiental
  7957 ;;		_funcion_monitoreo_eventos
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961     092F                     _LCD_Command:	
  7962                           ;psect for function _LCD_Command
  7963                           
  7964                           
  7965                           ;incstack = 0
  7966                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  7967                           ;LCD_Command@cmd stored from wreg
  7968     092F  00F5               	movwf	LCD_Command@cmd
  7969     0930                     l2261:
  7970                           
  7971                           ;LCD.c: 107: void LCD_Command(unsigned char cmd );LCD.c: 108: {;LCD.c: 109:  PORTC = (PO
      +                          RTC & 0x0f) |(0xF0 & cmd);
  7972     0930  30F0               	movlw	240
  7973     0931  0575               	andwf	LCD_Command@cmd,w
  7974     0932  00F3               	movwf	??_LCD_Command
  7975     0933  1283               	bcf	3,5	;RP0=0, select bank0
  7976     0934  1303               	bcf	3,6	;RP1=0, select bank0
  7977     0935  0807               	movf	7,w	;volatile
  7978     0936  390F               	andlw	15
  7979     0937  0473               	iorwf	??_LCD_Command,w
  7980     0938  0087               	movwf	7	;volatile
  7981     0939                     l2263:
  7982                           
  7983                           ;LCD.c: 110:  PORTCbits.RC0 = 0;
  7984     0939  1007               	bcf	7,0	;volatile
  7985     093A                     l2265:
  7986                           
  7987                           ;LCD.c: 111:  PORTCbits.RC1 = 1;
  7988     093A  1487               	bsf	7,1	;volatile
  7989     093B                     l2267:
  7990                           
  7991                           ;LCD.c: 112:  __nop();
  7992     093B  0000               	nop
  7993     093C                     l2269:
  7994                           
  7995                           ;LCD.c: 113:  PORTCbits.RC1 = 0;
  7996     093C  1283               	bcf	3,5	;RP0=0, select bank0
  7997     093D  1303               	bcf	3,6	;RP1=0, select bank0
  7998     093E  1087               	bcf	7,1	;volatile
  7999     093F                     l2271:
  8000                           
  8001                           ;LCD.c: 114:  _delay((unsigned long)((1)*(8000000/4000.0)));
  8002     093F  3003               	movlw	3
  8003     0940  00F4               	movwf	??_LCD_Command+1
  8004     0941  3097               	movlw	151
  8005     0942  00F3               	movwf	??_LCD_Command
  8006     0943                     u4397:
  8007     0943  0BF3               	decfsz	??_LCD_Command,f
  8008     0944  2943               	goto	u4397
  8009     0945  0BF4               	decfsz	??_LCD_Command+1,f
  8010     0946  2943               	goto	u4397
  8011     0947  2948               	nop2
  8012     0948                     l2273:
  8013                           
  8014                           ;LCD.c: 115:     PORTC = (unsigned char)((PORTC & 0x0f) | (cmd<<4));
  8015     0948  0875               	movf	LCD_Command@cmd,w
  8016     0949  00F3               	movwf	??_LCD_Command
  8017     094A  3004               	movlw	4
  8018     094B                     u2045:
  8019     094B  1003               	clrc
  8020     094C  0DF3               	rlf	??_LCD_Command,f
  8021     094D  3EFF               	addlw	-1
  8022     094E  1D03               	skipz
  8023     094F  294B               	goto	u2045
  8024     0950  1283               	bcf	3,5	;RP0=0, select bank0
  8025     0951  1303               	bcf	3,6	;RP1=0, select bank0
  8026     0952  0807               	movf	7,w	;volatile
  8027     0953  390F               	andlw	15
  8028     0954  0473               	iorwf	??_LCD_Command,w
  8029     0955  0087               	movwf	7	;volatile
  8030     0956                     l2275:
  8031                           
  8032                           ;LCD.c: 116:  PORTCbits.RC1 = 1;
  8033     0956  1487               	bsf	7,1	;volatile
  8034     0957                     l2277:
  8035                           
  8036                           ;LCD.c: 117:  __nop();
  8037     0957  0000               	nop
  8038     0958                     l2279:
  8039                           
  8040                           ;LCD.c: 118:  PORTCbits.RC1 = 0;
  8041     0958  1283               	bcf	3,5	;RP0=0, select bank0
  8042     0959  1303               	bcf	3,6	;RP1=0, select bank0
  8043     095A  1087               	bcf	7,1	;volatile
  8044                           
  8045                           ;LCD.c: 119:  _delay((unsigned long)((3)*(8000000/4000.0)));
  8046     095B  3008               	movlw	8
  8047     095C  00F4               	movwf	??_LCD_Command+1
  8048     095D  30C9               	movlw	201
  8049     095E  00F3               	movwf	??_LCD_Command
  8050     095F                     u4407:
  8051     095F  0BF3               	decfsz	??_LCD_Command,f
  8052     0960  295F               	goto	u4407
  8053     0961  0BF4               	decfsz	??_LCD_Command+1,f
  8054     0962  295F               	goto	u4407
  8055     0963  2964               	nop2
  8056     0964                     l20:
  8057     0964  0008               	return
  8058     0965                     __end_of_LCD_Command:
  8059                           
  8060                           	psect	text34
  8061     0D25                     __ptext34:	
  8062 ;; *************** function _Timer1_ISR *****************
  8063 ;; Defined at:
  8064 ;;		line 83 in file "main.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;		None
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;		None
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  1    wreg      void 
  8071 ;; Registers used:
  8072 ;;		wreg, status,2, btemp+1
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8078 ;;      Params:         0       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0
  8080 ;;      Temps:          3       0       0       0       0
  8081 ;;      Totals:         3       0       0       0       0
  8082 ;;Total ram usage:        3 bytes
  8083 ;; Hardware stack levels used: 1
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		Interrupt level 1
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091     0D25                     _Timer1_ISR:	
  8092                           ;psect for function _Timer1_ISR
  8093                           
  8094     0D25                     i1l3009:
  8095                           
  8096                           ;main.c: 85:     TMR1=0xFC16;
  8097     0D25  30FC               	movlw	252
  8098     0D26  1283               	bcf	3,5	;RP0=0, select bank0
  8099     0D27  1303               	bcf	3,6	;RP1=0, select bank0
  8100     0D28  008F               	movwf	15	;volatile
  8101     0D29  3016               	movlw	22
  8102     0D2A  008E               	movwf	14	;volatile
  8103     0D2B                     i1l3011:
  8104                           
  8105                           ;main.c: 86:     count_3sec++;
  8106     0D2B  3001               	movlw	1
  8107     0D2C  07DE               	addwf	_count_3sec,f
  8108     0D2D  1803               	skipnc
  8109     0D2E  0ADF               	incf	_count_3sec+1,f
  8110     0D2F  3000               	movlw	0
  8111     0D30  07DF               	addwf	_count_3sec+1,f
  8112     0D31                     i1l3013:
  8113                           
  8114                           ;main.c: 87:     if(count_3sec > 3000){
  8115     0D31  085F               	movf	_count_3sec+1,w
  8116     0D32  3A80               	xorlw	128
  8117     0D33  00FF               	movwf	btemp+1
  8118     0D34  308B               	movlw	139
  8119     0D35  027F               	subwf	btemp+1,w
  8120     0D36  1D03               	skipz
  8121     0D37  2D3A               	goto	u321_25
  8122     0D38  30B9               	movlw	185
  8123     0D39  025E               	subwf	_count_3sec,w
  8124     0D3A                     u321_25:
  8125     0D3A  1C03               	skipc
  8126     0D3B  2D3D               	goto	u321_21
  8127     0D3C  2D3E               	goto	u321_20
  8128     0D3D                     u321_21:
  8129     0D3D  2D46               	goto	i1l3019
  8130     0D3E                     u321_20:
  8131     0D3E                     i1l3015:
  8132                           
  8133                           ;main.c: 88:         count_3sec = 0;
  8134     0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  8135     0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  8136     0D40  01DE               	clrf	_count_3sec
  8137     0D41  01DF               	clrf	_count_3sec+1
  8138     0D42                     i1l3017:
  8139                           
  8140                           ;main.c: 89:         flag_count_3sec = 1;
  8141     0D42  3001               	movlw	1
  8142     0D43  00DC               	movwf	_flag_count_3sec
  8143     0D44  3000               	movlw	0
  8144     0D45  00DD               	movwf	_flag_count_3sec+1
  8145     0D46                     i1l3019:
  8146                           
  8147                           ;main.c: 92:     count_5sec++;
  8148     0D46  3001               	movlw	1
  8149     0D47  1283               	bcf	3,5	;RP0=0, select bank0
  8150     0D48  1303               	bcf	3,6	;RP1=0, select bank0
  8151     0D49  07DA               	addwf	_count_5sec,f
  8152     0D4A  1803               	skipnc
  8153     0D4B  0ADB               	incf	_count_5sec+1,f
  8154     0D4C  3000               	movlw	0
  8155     0D4D  07DB               	addwf	_count_5sec+1,f
  8156     0D4E                     i1l3021:
  8157                           
  8158                           ;main.c: 93:     if(count_5sec > 5000){
  8159     0D4E  085B               	movf	_count_5sec+1,w
  8160     0D4F  3A80               	xorlw	128
  8161     0D50  00FF               	movwf	btemp+1
  8162     0D51  3093               	movlw	147
  8163     0D52  027F               	subwf	btemp+1,w
  8164     0D53  1D03               	skipz
  8165     0D54  2D57               	goto	u322_25
  8166     0D55  3089               	movlw	137
  8167     0D56  025A               	subwf	_count_5sec,w
  8168     0D57                     u322_25:
  8169     0D57  1C03               	skipc
  8170     0D58  2D5A               	goto	u322_21
  8171     0D59  2D5B               	goto	u322_20
  8172     0D5A                     u322_21:
  8173     0D5A  2D63               	goto	i1l3027
  8174     0D5B                     u322_20:
  8175     0D5B                     i1l3023:
  8176                           
  8177                           ;main.c: 94:         count_5sec = 0;
  8178     0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  8179     0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  8180     0D5D  01DA               	clrf	_count_5sec
  8181     0D5E  01DB               	clrf	_count_5sec+1
  8182     0D5F                     i1l3025:
  8183                           
  8184                           ;main.c: 95:         flag_count_5sec = 1;
  8185     0D5F  3001               	movlw	1
  8186     0D60  00D8               	movwf	_flag_count_5sec
  8187     0D61  3000               	movlw	0
  8188     0D62  00D9               	movwf	_flag_count_5sec+1
  8189     0D63                     i1l3027:
  8190                           
  8191                           ;main.c: 98:     count_10sec++;
  8192     0D63  3001               	movlw	1
  8193     0D64  1683               	bsf	3,5	;RP0=1, select bank1
  8194     0D65  1303               	bcf	3,6	;RP1=0, select bank1
  8195     0D66  07AE               	addwf	_count_10sec^(0+128),f
  8196     0D67  1803               	skipnc
  8197     0D68  0AAF               	incf	(_count_10sec+1)^(0+128),f
  8198     0D69  3000               	movlw	0
  8199     0D6A  07AF               	addwf	(_count_10sec+1)^(0+128),f
  8200     0D6B                     i1l3029:
  8201                           
  8202                           ;main.c: 99:     if(count_10sec > 5000){
  8203     0D6B  082F               	movf	(_count_10sec+1)^(0+128),w
  8204     0D6C  3A80               	xorlw	128
  8205     0D6D  00FF               	movwf	btemp+1
  8206     0D6E  3093               	movlw	147
  8207     0D6F  027F               	subwf	btemp+1,w
  8208     0D70  1D03               	skipz
  8209     0D71  2D74               	goto	u323_25
  8210     0D72  3089               	movlw	137
  8211     0D73  022E               	subwf	_count_10sec^(0+128),w
  8212     0D74                     u323_25:
  8213     0D74  1C03               	skipc
  8214     0D75  2D77               	goto	u323_21
  8215     0D76  2D78               	goto	u323_20
  8216     0D77                     u323_21:
  8217     0D77  2D80               	goto	i1l3035
  8218     0D78                     u323_20:
  8219     0D78                     i1l3031:
  8220                           
  8221                           ;main.c: 100:         count_10sec = 0;
  8222     0D78  1683               	bsf	3,5	;RP0=1, select bank1
  8223     0D79  1303               	bcf	3,6	;RP1=0, select bank1
  8224     0D7A  01AE               	clrf	_count_10sec^(0+128)
  8225     0D7B  01AF               	clrf	(_count_10sec+1)^(0+128)
  8226     0D7C                     i1l3033:
  8227                           
  8228                           ;main.c: 101:         flag_count_10sec = 1;
  8229     0D7C  3001               	movlw	1
  8230     0D7D  00AC               	movwf	_flag_count_10sec^(0+128)
  8231     0D7E  3000               	movlw	0
  8232     0D7F  00AD               	movwf	(_flag_count_10sec^(0+128)+1)
  8233     0D80                     i1l3035:
  8234                           
  8235                           ;main.c: 104:     count_800ms++;
  8236     0D80  3001               	movlw	1
  8237     0D81  1683               	bsf	3,5	;RP0=1, select bank1
  8238     0D82  1303               	bcf	3,6	;RP1=0, select bank1
  8239     0D83  07AA               	addwf	_count_800ms^(0+128),f
  8240     0D84  1803               	skipnc
  8241     0D85  0AAB               	incf	(_count_800ms+1)^(0+128),f
  8242     0D86  3000               	movlw	0
  8243     0D87  07AB               	addwf	(_count_800ms+1)^(0+128),f
  8244     0D88                     i1l3037:
  8245                           
  8246                           ;main.c: 105:     if(count_800ms > 800){
  8247     0D88  082B               	movf	(_count_800ms+1)^(0+128),w
  8248     0D89  3A80               	xorlw	128
  8249     0D8A  00FF               	movwf	btemp+1
  8250     0D8B  3083               	movlw	131
  8251     0D8C  027F               	subwf	btemp+1,w
  8252     0D8D  1D03               	skipz
  8253     0D8E  2D91               	goto	u324_25
  8254     0D8F  3021               	movlw	33
  8255     0D90  022A               	subwf	_count_800ms^(0+128),w
  8256     0D91                     u324_25:
  8257     0D91  1C03               	skipc
  8258     0D92  2D94               	goto	u324_21
  8259     0D93  2D95               	goto	u324_20
  8260     0D94                     u324_21:
  8261     0D94  2D9D               	goto	i1l3043
  8262     0D95                     u324_20:
  8263     0D95                     i1l3039:
  8264                           
  8265                           ;main.c: 106:         count_800ms = 0;
  8266     0D95  1683               	bsf	3,5	;RP0=1, select bank1
  8267     0D96  1303               	bcf	3,6	;RP1=0, select bank1
  8268     0D97  01AA               	clrf	_count_800ms^(0+128)
  8269     0D98  01AB               	clrf	(_count_800ms+1)^(0+128)
  8270     0D99                     i1l3041:
  8271                           
  8272                           ;main.c: 107:         flag_count_800ms = 1;
  8273     0D99  3001               	movlw	1
  8274     0D9A  00A8               	movwf	_flag_count_800ms^(0+128)
  8275     0D9B  3000               	movlw	0
  8276     0D9C  00A9               	movwf	(_flag_count_800ms^(0+128)+1)
  8277     0D9D                     i1l3043:
  8278                           
  8279                           ;main.c: 110:     count_500ms++;
  8280     0D9D  3001               	movlw	1
  8281     0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  8282     0D9F  1303               	bcf	3,6	;RP1=0, select bank1
  8283     0DA0  07A4               	addwf	_count_500ms^(0+128),f
  8284     0DA1  1803               	skipnc
  8285     0DA2  0AA5               	incf	(_count_500ms+1)^(0+128),f
  8286     0DA3  3000               	movlw	0
  8287     0DA4  07A5               	addwf	(_count_500ms+1)^(0+128),f
  8288     0DA5                     i1l3045:
  8289                           
  8290                           ;main.c: 111:     if(count_500ms > 500){
  8291     0DA5  0825               	movf	(_count_500ms+1)^(0+128),w
  8292     0DA6  3A80               	xorlw	128
  8293     0DA7  00FF               	movwf	btemp+1
  8294     0DA8  3081               	movlw	129
  8295     0DA9  027F               	subwf	btemp+1,w
  8296     0DAA  1D03               	skipz
  8297     0DAB  2DAE               	goto	u325_25
  8298     0DAC  30F5               	movlw	245
  8299     0DAD  0224               	subwf	_count_500ms^(0+128),w
  8300     0DAE                     u325_25:
  8301     0DAE  1C03               	skipc
  8302     0DAF  2DB1               	goto	u325_21
  8303     0DB0  2DB2               	goto	u325_20
  8304     0DB1                     u325_21:
  8305     0DB1  2DBA               	goto	i1l3051
  8306     0DB2                     u325_20:
  8307     0DB2                     i1l3047:
  8308                           
  8309                           ;main.c: 112:         count_500ms = 0;
  8310     0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  8311     0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  8312     0DB4  01A4               	clrf	_count_500ms^(0+128)
  8313     0DB5  01A5               	clrf	(_count_500ms+1)^(0+128)
  8314     0DB6                     i1l3049:
  8315                           
  8316                           ;main.c: 113:         flag_count_500ms = 1;
  8317     0DB6  3001               	movlw	1
  8318     0DB7  00A6               	movwf	_flag_count_500ms^(0+128)
  8319     0DB8  3000               	movlw	0
  8320     0DB9  00A7               	movwf	(_flag_count_500ms^(0+128)+1)
  8321     0DBA                     i1l3051:
  8322                           
  8323                           ;main.c: 116:     PIR1bits.TMR1IF=0;
  8324     0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  8325     0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  8326     0DBC  100C               	bcf	12,0	;volatile
  8327     0DBD                     i1l232:
  8328     0DBD  0872               	movf	??_Timer1_ISR+2,w
  8329     0DBE  00FF               	movwf	btemp+1
  8330     0DBF  0871               	movf	??_Timer1_ISR+1,w
  8331     0DC0  008A               	movwf	10
  8332     0DC1  0E70               	swapf	??_Timer1_ISR,w
  8333     0DC2  0083               	movwf	3
  8334     0DC3  0EFE               	swapf	btemp,f
  8335     0DC4  0E7E               	swapf	btemp,w
  8336     0DC5  0009               	retfie
  8337     0DC6                     __end_of_Timer1_ISR:
  8338     0002                     ___latbits      equ	2
  8339     007E                     btemp           set	126	;btemp
  8340     007E                     wtemp0          set	126
  8341                           
  8342                           	psect	intentry
  8343     0004                     __pintentry:	
  8344                           ;incstack = 0
  8345                           ; Regs used in _Timer1_ISR: [wreg+status,2+btemp+1]
  8346                           
  8347     0004                     interrupt_function:
  8348     007E                     saved_w         set	btemp
  8349     0004  00FE               	movwf	btemp
  8350     0005  0E03               	swapf	3,w
  8351     0006  00F0               	movwf	??_Timer1_ISR
  8352     0007  080A               	movf	10,w
  8353     0008  00F1               	movwf	??_Timer1_ISR+1
  8354     0009  087F               	movf	btemp+1,w
  8355     000A  00F2               	movwf	??_Timer1_ISR+2
  8356     000B  120A  158A  2D25   	ljmp	_Timer1_ISR
  8357                           
  8358                           	psect	config
  8359                           
  8360                           ;Config register CONFIG1 @ 0x2007
  8361                           ;	Oscillator Selection bits
  8362                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  8363                           ;	Watchdog Timer Enable bit
  8364                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8365                           ;	Power-up Timer Enable bit
  8366                           ;	PWRTE = OFF, PWRT disabled
  8367                           ;	RE3/MCLR pin function select bit
  8368                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8369                           ;	Code Protection bit
  8370                           ;	CP = OFF, Program memory code protection is disabled
  8371                           ;	Data Code Protection bit
  8372                           ;	CPD = OFF, Data memory code protection is disabled
  8373                           ;	Brown Out Reset Selection bits
  8374                           ;	BOREN = OFF, BOR disabled
  8375                           ;	Internal External Switchover bit
  8376                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8377                           ;	Fail-Safe Clock Monitor Enabled bit
  8378                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8379                           ;	Low Voltage Programming Enable bit
  8380                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8381                           ;	In-Circuit Debugger Mode bit
  8382                           ;	DEBUG = 0x1, unprogrammed default
  8383     2007                     	org	8199
  8384     2007  20D5               	dw	8405
  8385                           
  8386                           ;Config register CONFIG2 @ 0x2008
  8387                           ;	Brown-out Reset Selection bit
  8388                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8389                           ;	Flash Program Memory Self Write Enable bits
  8390                           ;	WRT = OFF, Write protection off
  8391     2008                     	org	8200
  8392     2008  3FFF               	dw	16383

Data Sizes:
    Strings     127
    Constant    6
    Data        46
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     56      80
    BANK1            80      0      73
    BANK3            96      0      56
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> StringTemperature(BANK1[32]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> StringTemperature(BANK1[32]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[17]), STR_2(CODE[15]), STR_3(CODE[17]), STR_4(CODE[18]), 
		 -> STR_5(CODE[10]), STR_7(CODE[8]), STR_9(CODE[11]), StringTemperature(BANK1[32]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[17]), STR_2(CODE[15]), STR_3(CODE[17]), STR_4(CODE[18]), 
		 -> STR_5(CODE[10]), STR_7(CODE[8]), STR_9(CODE[11]), 

    S943$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> StringTemperature(BANK1[32]), 

    S943$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_6(CODE[16]), STR_8(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> StringTemperature(BANK1[32]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK1[5]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 6
		 -> password(CODE[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 16
		 -> STR_6(CODE[16]), STR_8(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 16
		 -> STR_6(CODE[16]), STR_8(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_6(CODE[16]), STR_8(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Clear
    _main->_LCD_Init
    _main->_LCD_Load_Custom_Chars
    _funcion_seguridad->_LCD_Clear
    _blink_led->_delay_ms_variable
    _funcion_monitoreo_eventos->_LCD_Clear
    _funcion_monitoreo_eventos->_LCD_String
    _funcion_monitoreo_ambiental->_LCD_Clear
    _funcion_monitoreo_ambiental->_LCD_String
    _sprintf->_vfprintf
    _vfpfcnvrt->___awdiv
    _vfpfcnvrt->___awmod
    _vfpfcnvrt->_fputc
    _abs->___awmod
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Load_Custom_Chars->_LCD_Char
    _LCD_Load_Custom_Chars->_LCD_Command
    _LCD_Init->_LCD_Command

Critical Paths under _Timer1_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_funcion_monitoreo_ambiental
    _funcion_seguridad->_keypad_getkey
    _funcion_monitoreo_eventos->_sprintf
    _funcion_monitoreo_ambiental->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _abs->___awmod
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _Timer1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer1_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer1_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer1_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12838
                                             53 BANK0      3     3      0
                          _LCD_Clear
                           _LCD_Init
              _LCD_Load_Custom_Chars
                      _LCD_String_xy
                       _Timer1_start
                           _adc_init
                     _funcion_buzzer
        _funcion_monitoreo_ambiental
          _funcion_monitoreo_eventos
                  _funcion_seguridad
                        _keypad_init
                         _secuencia1
                         _secuencia5
 ---------------------------------------------------------------------------------
 (1) _secuencia5                                          19    19      0     640
                                              3 COMMON     3     3      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _secuencia1                                          11    11      0     320
                                              3 COMMON     3     3      0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _funcion_seguridad                                    3     3      0    1924
                                             19 BANK0      3     3      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                          _blink_led
                      _keypad_getkey
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     2      4     266
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                       23    23      0     542
                                              3 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _blink_led                                           11     5      6     525
                                              0 BANK0     11     5      6
                  _delay_ms_variable
 ---------------------------------------------------------------------------------
 (3) _delay_ms_variable                                    4     2      2      24
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _funcion_monitoreo_eventos                            6     6      0    3311
                                             45 BANK0      6     6      0
                          _LCD_Clear
                        _LCD_Command
                         _LCD_String
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _funcion_monitoreo_ambiental                          7     7      0    5765
                                             46 BANK0      7     7      0
                          _LCD_Clear
                        _LCD_Command
                         _LCD_String
                      _LCD_String_xy
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _adc_read
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    2604
                                             26 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    2286
                                              7 COMMON     1     1      0
                                             22 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4    2086
                                              9 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     329
                                              3 COMMON     4     0      4
                                              0 BANK0      9     9      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                              2 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _adc_read                                             8     6      2     105
                                              3 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     511
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     230
                                             36 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    1608
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     139
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     2      2     417
                                              0 BANK0      4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     106
                                              6 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0      58
                                              6 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _funcion_buzzer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Load_Custom_Chars                                5     5      0     345
                                              6 COMMON     2     2      0
                                              0 BANK0      3     3      0
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      58
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      58
                                              6 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      58
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Timer1_ISR                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_Load_Custom_Chars
     _LCD_Char
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _Timer1_start
   _adc_init
   _funcion_buzzer
   _funcion_monitoreo_ambiental
     _LCD_Clear
     _LCD_Command
     _LCD_String
     _LCD_String_xy
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _adc_read
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _funcion_monitoreo_eventos
     _LCD_Clear
     _LCD_Command
     _LCD_String
     _LCD_String_xy
     _sprintf
   _funcion_seguridad
     _LCD_Char
     _LCD_Clear
     _LCD_Command
     _LCD_String_xy
     _blink_led
       _delay_ms_variable
     _keypad_getkey
     _strncmp
   _keypad_init
   _secuencia1
   _secuencia5

 _Timer1_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0      56     58.3%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      73     91.2%
BITBANK1            80      0       0      0.0%
BANK0               80     56      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14      8      11     78.6%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     223      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Nov 15 15:31:07 2024

                                     pc 0002                            ?_LCD_Command 0070  
                                    l20 0964                                      l23 099A  
                                    l17 0902                                      l34 092E  
                                    l44 0A11                                      l37 173F  
                                    l29 17FF                                      l59 1710  
                          ___awdiv@sign 0021                                      fsr 0004  
                           ?_LCD_String 0076                     __Umul8_16@word_mpld 0022  
                                   l118 0FFF                                     l332 09D3  
                                   l326 172F                                     l238 08AF  
                                   l254 0B29                                     l329 09B1  
                                   l601 0A6A                                     l266 0793  
                                   l283 0C0E                                     l275 05B4  
                                   l259 0B9B                                     l292 0492  
                                   l349 171F                                     l269 04C9  
                                   l286 1703                                     l278 0E68  
                                   l298 040B                                     l636 0C6F  
                                   l629 0C84                                     l639 0C84  
                                   l832 039A                                     l851 08C6  
                                   l844 0390                                     l588 07F8  
                                   l853 08D8                                     l838 030C  
                                   l942 17D9                                     l936 06A4  
                                   l961 0D24                                     l890 0EF4  
                                   l882 0ECC                                     l876 0E8D  
                                   l972 07FB                                     l877 0E9E  
                                   l949 1752                                     l878 0F1E  
                                   l976 0AC6                                     l889 0EE8  
                                   l898 17B4                                     _GIE 005F  
                                   _abs 1740                                     _idx 0078  
                                   _key 007A                                     _luz 0068  
                                   fsr0 0004                                     indf 0000  
                          ___awmod@sign 0021                            ___flmul@aexp 003C  
                          ___flmul@bexp 003D                            ___flmul@sign 0037  
                          ___flmul@temp 0042                            ___flmul@prod 003E  
                           LCD_Char@dat 0075                            ___fltol@exp1 004D  
                                  ?_abs 0022                                    l2201 097E  
                                  l3001 1711                                    l2203 098C  
                                  l3003 1719                                    l2205 098D  
                                  l3005 171A                                    l2301 08C0  
                                  l2207 098E                                    l3007 171E  
                                  l2303 08CF                                    l2305 08D4  
                                  l3201 07AD                                    l2401 0FA2  
                                  l3211 07C1                                    l3203 07AF  
                                  l2411 0FB7                                    l2403 0FA9  
                                  l2261 0930                                    l2333 1730  
                                  l3221 07E4                                    l3213 07C5  
                                  l3205 07B5                                    l3301 05DD  
                                  l2421 0FCC                                    l2413 0FB9  
                                  l2405 0FAB                                    l2341 0F34  
                                  l2271 093F                                    l2263 0939  
                                  l2191 096F                                    l2335 1736  
                                  l3215 07D6                                    l3207 07B8  
                                  l3223 07EA                                    l3231 0A12  
                                  l3311 060A                                    l3303 05E9  
                                  l2431 0FDE                                    l2423 0FCE  
                                  l2407 0FB0                                    l2415 0FBD  
                                  l2351 0F41                                    l2343 0F37  
                                  l2273 0948                                    l2265 093A  
                                  l2193 0970                                    l2281 17DA  
                                  l2601 00A2                                    l3225 07EF  
                                  l3217 07DC                                    l3209 07BF  
                                  l3241 0A24                                    l3233 0A15  
                                  l3321 0652                                    l3313 0611  
                                  l3305 05F5                                    l2441 0FFC  
                                  l2433 0FE3                                    l2425 0FD5  
                                  l2417 0FC4                                    l2409 0FB2  
                                  l2361 0F54                                    l2353 0F43  
                                  l2337 0F1F                                    l3401 0A6B  
                                  l2275 0956                                    l2267 093B  
                                  l2195 0971                                    l2283 17DB  
                                  l2603 00A4                                    l2531 0C0F  
                                  l3227 07F4                                    l3219 07DD  
                                  l3251 0A3B                                    l3243 0A29  
                                  l3235 0A19                                    l3323 0657  
                                  l3331 067D                                    l3315 0634  
                                  l3307 0603                                    l2291 0898  
                                  l2435 0FE5                                    l2427 0FD7  
                                  l2419 0FC6                                    l2363 0F59  
                                  l2355 0F49                                    l2371 0F66  
                                  l2339 0F34                                    l3403 0A79  
                                  l3411 0A86                                    l2277 0957  
                                  l2269 093C                                    l2197 0972  
                                  l2189 0966                                    l3501 09D5  
                                  l2285 17E9                                    l2701 038A  
                                  l2621 0111                                    l2613 00BF  
                                  l2605 00AC                                    l2541 0C37  
                                  l2533 0C1A                                    l3253 0A3F  
                                  l3245 0A2F                                    l3261 0A5C  
                                  l3237 0A1E                                    l3325 065C  
                                  l3317 0647                                    l3309 0608  
                                  l3333 0684                                    l2293 08A1  
                                  l2429 0FDC                                    l2437 0FE9  
                                  l2381 0F7D                                    l2373 0F6C  
                                  l2365 0F5B                                    l2357 0F4B  
                                  l2349 0F39                                    l3413 0A8E  
                                  l2279 0958                                    l2199 0975  
                                  l3511 0A01                                    l3503 09E7  
                                  l2287 17EF                                    l2295 08B3  
                                  l2703 038B                                    l2631 018A  
                                  l2623 013B                                    l2615 00CD  
                                  l2607 00B1                                    l2543 0C3F  
                                  l3431 09B5                                    l3423 099B  
                                  l3191 079B                                    l3263 0A61  
                                  l3255 0A49                                    l3247 0A32  
                                  l3239 0A20                                    l3271 0C8B  
                                  l3327 0665                                    l3319 064D  
                                  l3343 17B5                                    l2439 0FEF  
                                  l2391 0F8D                                    l2383 0F7F  
                                  l2375 0F6E                                    l2367 0F60  
                                  l2359 0F52                                    l3415 0A9A  
                                  l3407 0A7C                                    l3513 0A03  
                                  l3361 0917                                    l3353 0906  
                                  l2297 08B5                                    l2705 0392  
                                  l2641 0206                                    l2633 01A7  
                                  l2625 0157                                    l2617 00DA  
                                  l2609 00B6                                    l2561 0C64  
                                  l2553 0C4D                                    l2545 0C41  
                                  l2537 0C23                                    l3433 09BC  
                                  l3425 09A7                                    l3193 07A0  
                                  l3265 0A66                                    l3257 0A4F  
                                  l3249 0A39                                    l3273 0C91  
                                  l3329 0679                                    l3337 068B  
                                  l3345 17BA                                    l3441 1796  
                                  l3601 0E5A                                    l2289 0897  
                                  l2385 0F84                                    l2377 0F74  
                                  l2393 0F91                                    l2369 0F62  
                                  l3417 0AA0                                    l3409 0A80  
                                  l3521 04B8                                    l2801 0B36  
                                  l3515 0A09                                    l3363 091B  
                                  l3355 0906                                    l2299 08BC  
                                  l2651 02B8                                    l2643 0231  
                                  l2635 01B5                                    l2627 0173  
                                  l2619 00F5                                    l2571 005F  
                                  l2563 0C74                                    l2547 0C45  
                                  l2555 0C5D                                    l2539 0C36  
                                  l3435 09CF                                    l3427 09A8  
                                  l3195 07A2                                    l3187 0794  
                                  l3259 0A56                                    l3283 1740  
                                  l3275 0C98                                    l3291 05B5  
                                  l3347 17C9                                    l3443 179A  
                                  l3611 0BBF                                    l3603 0B9C  
                                  l3371 0AD3                                    l2395 0F98  
                                  l2387 0F86                                    l2379 0F76  
                                  l3419 0AB2                                    l3531 04E0  
                                  l3523 04C3                                    l2811 0B5C  
                                  l3517 0A0B                                    l3509 09E8  
                                  l3365 0921                                    l3357 090C  
                                  l2661 02DD                                    l2653 02C1  
                                  l2645 023F                                    l2637 01D2  
                                  l2629 017C                                    l2581 0072  
                                  l2573 0063                                    l2565 0C79  
                                  l3461 0E95                                    l3453 0E6C  
                                  l3429 09AE                                    l3197 07A6  
                                  l3189 0797                                    l3285 1746  
                                  l3277 0CB2                                    l3269 0C85  
                                  l3293 05C5                                    l3349 17D5  
                                  l3445 179C                                    l3621 0BF9  
                                  l3613 0BD8                                    l3605 0BA9  
                                  l3381 0AE4                                    l3373 0AD5  
                                  l2397 0F9A                                    l2389 0F8B  
                                  l3541 050B                                    l3533 04E2  
                                  l3525 04CF                                    l2821 0B7E  
                                  l2813 0B61                                    l3701 0459  
                                  l2751 08D9                                    l3359 0910  
                                  l2671 02F5                                    l2663 02E6  
                                  l2655 02CF                                    l2647 026A  
                                  l2639 01E9                                    l2591 008B  
                                  l2583 007A                                    l2575 0067  
                                  l2567 0059                                    l3471 0EB5  
                                  l3455 0E71                                    l3199 07AB  
                                  l3287 1747                                    l3279 0CE4  
                                  l3295 05C9                                    l3447 179E  
                                  l3439 1792                                    l3623 0BFE  
                                  l3615 0BE1                                    l3607 0BAE  
                                  l3391 0AFF                                    l3383 0AED  
                                  l3375 0ADB                                    l3367 0ACA  
                                  l2399 0FA0                                    l3551 0533  
                                  l3543 0511                                    l3535 04E8  
                                  l3527 04D4                                    l3519 04B3  
                                  l2823 0B83                                    l2815 0B67  
                                  l2807 0B38                                    l2831 06AF  
                                  l3711 046F                                    l3703 045B  
                                  l3631 03A4                                    l2761 08F6  
                                  l2753 08DC                                    l2681 0324  
                                  l2673 0309                                    l2657 02D8  
                                  l2665 02EC                                    l2649 0290  
                                  l2593 008F                                    l2585 007C  
                                  l2577 0068                                    l2569 005D  
                                  l3481 0EEC                                    l3473 0EC3  
                                  l3465 0EA1                                    l3457 0E75  
                                  l3297 05D1                                    l3449 17AB  
                                  l3625 0C00                                    l3617 0BEF  
                                  l3609 0BB9                                    l3393 0B05  
                                  l3385 0AF5                                    l3377 0ADD  
                                  l3369 0ACD                                    l3561 055C  
                                  l3553 053E                                    l3545 0525  
                                  l3537 04FB                                    l3529 04DA  
                                  l2825 0B88                                    l2817 0B69  
                                  l2809 0B4F                                    l2841 06CA  
                                  l2833 06B1                                    l3713 0474  
                                  l3705 0460                                    l3641 03CD  
                                  l3633 03AF                                    l2763 08FC  
                                  l2755 08E4                                    l2691 035F  
                                  l2683 0328                                    l2667 02F0  
                                  l2659 02DC                                    l2595 0090  
                                  l2587 0084                                    l2579 006D  
                                  l3491 0F16                                    l3483 0EF6  
                                  l3475 0ED3                                    l3467 0EAC  
                                  l3459 0E85                                    l3299 05D7  
                                  l3619 0BF5                                    l3395 0B06  
                                  l3387 0AF7                                    l3379 0AE3  
                                  l3571 0581                                    l3563 0566  
                                  l3555 0544                                    l3547 0529  
                                  l3539 0500                                    l2827 0B8E  
                                  l2819 0B76                                    l2851 06F1  
                                  l2843 06D7                                    l3715 0485  
                                  l3707 0465                                    l3723 0492  
                                  l3651 03DC                                    l3643 03D2  
                                  l3635 03BE                                    l3627 039B  
                                  l2757 08EA                                    l2693 036E  
                                  l2685 0341                                    l2677 0311  
                                  l2669 02F1                                    l2597 0095  
                                  l2589 0087                                    l3485 0F0C  
                                  l3477 0EDE                                    l3469 0EB3  
                                  l3397 0B0F                                    l3389 0AFD  
                                  l3581 05B3                                    l3573 0587  
                                  l3565 056D                                    l3557 0548  
                                  l3549 052E                                    l2861 0716  
                                  l2853 06F9                                    l2845 06DC  
                                  l2829 06A5                                    l3717 0487  
                                  l3709 046D                                    l3661 03E5  
                                  l3653 03DD                                    l3645 03D5  
                                  l3637 03C3                                    l3629 039F  
                                  l2759 08F0                                    l3495 09D4  
                                  l2695 0378                                    l2679 0316  
                                  l2687 0347                                    l2599 009A  
                                  l3487 0F11                                    l3479 0EE2  
                                  l3591 0DEA                                    l3583 0DC6  
                                  l3399 0B1F                                    l3575 059B  
                                  l3567 0571                                    l3559 054A  
                                  l2791 170A                                    l2871 0724  
                                  l2863 0720                                    l2855 06FE  
                                  l2847 06E2                                    l2839 06B3  
                                  l3671 03FF                                    l3663 03E8  
                                  l3655 03DE                                    l3647 03D6  
                                  l3639 03C8                                    l2697 037A  
                                  l2689 0354                                    l3489 0F15  
                                  l3593 0DF9                                    l3585 0DCB  
                                  l3569 0576                                    l3577 059F  
                                  l2793 170B                                    l2881 0786  
                                  l2873 073B                                    l2865 0722  
                                  l2857 0703                                    l2849 06E4  
                                  l3761 049C                                    l3681 0420  
                                  l3673 0402                                    l3665 03EE  
                                  l3657 03DF                                    l3649 03D9  
                                  l2699 0386                                    l3595 0E05  
                                  l3587 0DD6                                    l3579 05AE  
                                  l2795 170D                                    l2875 0748  
                                  l2859 0709                                    l3691 043C  
                                  l3683 042B                                    l3675 0408  
                                  l3667 03F3                                    l3659 03E2  
                                  l3597 0E40                                    l3589 0DDC  
                                  l2789 1704                                    l2797 0B2A  
                                  l2877 0775                                    l3693 0443  
                                  l3685 042D                                    l3677 040C  
                                  l3669 03FB                                    l2991 16FA  
                                  l3599 0E51                                    l2799 0B34  
                                  l2879 0780                                    l3695 0448  
                                  l3687 0432                                    l3679 0411  
                                  l2993 1720                                    l3697 0450  
                                  l3689 043A                                    l2995 1725  
                                  l3699 0453                                    l2997 172B  
                                  l2999 172C                                    STR_1 0828  
                                  STR_2 085A                                    STR_3 0839  
                                  STR_4 0816                                    STR_5 0883  
                                  STR_6 084A                                    STR_7 088D  
                                  STR_8 0869                                    STR_9 0878  
                                  u2200 0F83                                    u2120 0F25  
                                  u2201 0F82                                    u2050 17FF  
                                  u2210 0F8A                                    u2130 0F41  
                                  u2051 17FE                                    u2211 0F89  
                                  u2131 0F40                                    u2060 08AF  
                                  u2300 0FDB                                    u2220 0F91  
                                  u2140 0F51                                    u2045 094B  
                                  u2061 08AE                                    u2301 0FDA  
                                  u2221 0F90                                    u2141 0F50  
                                  u2070 08C0                                    u2310 0FE2  
                                  u2230 0F98                                    u2150 0F58  
                                  u2071 08BF                                    u2311 0FE1  
                                  u2231 0F97                                    u2151 0F57  
                                  u2320 0FE9                                    u2240 0FA8  
                                  u2160 0F5F                                    u3120 0B9B  
                                  u2321 0FE8                                    u2241 0FA7  
                                  u2161 0F5E                                    u3121 0B9A  
                                  u4010 0A09                                    u2090 08D4  
                                  u2330 0FFC                                    u2250 0FAF  
                                  u2170 0F66                                    u3130 0716  
                                  u4011 0A08                                    u2091 08D3  
                                  u2331 0FFB                                    u2251 0FAE  
                                  u2171 0F65                                    u3131 0715  
                                  u4020 0A11                                    u2500 0C4C  
                                  u2260 0FB6                                    u2180 0F6C  
                                  u3140 0793                                    u4100 0408  
                                  u4021 0A10                                    u4005 09ED  
                                  u2085 08C7                                    u2501 0C4B  
                                  u2261 0FB5                                    u2181 0F6B  
                                  u3125 0B97                                    u3141 0792  
                                  u4101 0407                                    u2270 0FBD  
                                  u2190 0F7C                                    u4030 04D4  
                                  u4110 0420                                    u2335 0FF8  
                                  u2271 0FBC                                    u2191 0F7B  
                                  u4031 04D3                                    u3135 0712  
                                  u4111 041F                                    u2600 008F  
                                  u2520 0C5C                                    u2280 0FC4  
                                  u4040 04E8                                    u4120 042B  
                                  u2601 008E                                    u2521 0C5B  
                                  u2281 0FC3                                    u4041 04E7  
                                  u3145 078F                                    u4121 042A  
                                  u2610 0095                                    u2530 0C63  
                                  u3410 07D6                                    u2290 0FD4  
                                  u4050 04FB                                    u4130 043A  
                                  u2611 0094                                    u2531 0C62  
                                  u2515 0C4E                                    u3411 07D5  
                                  u2291 0FD3                                    u4051 04FA  
                                  u4131 0439                                    u4115 041C  
                                  u2620 009A                                    u3500 0A49  
                                  u4060 056D                                    u4140 0450  
                                  u2701 0199                                    u2621 0099  
                                  u3405 07C6                                    u3501 0A48  
                                  u4061 056C                                    u4141 044F  
                                  u2702 01A0                                    u2630 00B1  
                                  u2550 0C74                                    u2470 0C1A  
                                  u3430 07EA                                    u3350 079B  
                                  u4070 0BF5                                    u4150 0459  
                                  u2711 01C4                                    u2703 01A7  
                                  u2631 00B0                                    u2551 0C73  
                                  u2471 0C19                                    u3431 07E9  
                                  u3415 07D2                                    u3351 079A  
                                  u4071 0BF4                                    u4207 06EA  
                                  u4151 0458                                    u2712 01CB  
                                  u2640 00B6                                    u2560 0C79  
                                  u2480 0C31                                    u3440 07EF  
                                  u3360 07A6                                    u3520 0A5C  
                                  u3600 05C5                                    u4080 0BF9  
                                  u4160 046D                                    u2713 01D2  
                                  u2641 00B5                                    u2561 0C78  
                                  u2545 0C66                                    u3441 07EE  
                                  u3425 07DE                                    u3361 07A5  
                                  u3521 0A5B                                    u3505 0A45  
                                  u3601 05C4                                    u4081 0BF8  
                                  u4217 0734                                    u4161 046C  
                                  u2570 0067                                    u2490 0C45  
                                  u3370 07B5                                    u3530 0A61  
                                  u3450 0A19                                    u3610 05E9  
                                  u4170 0485                                    u4090 03FB  
                                  u2731 01F8                                    u2651 0103  
                                  u2571 0066                                    u2491 0C44  
                                  u3371 07B4                                    u3531 0A60  
                                  u3515 0A50                                    u3451 0A18  
                                  u3611 05E8                                    u4307 089C  
                                  u4227 0761                                    u4171 0484  
                                  u4091 03FA                                    u2900 0337  
                                  u2820 02DC                                    u2732 01FF  
                                  u2652 010A                                    u2580 006D  
                                  u3460 0A24                                    u3540 0C8B  
                                  u3620 05F5                                    u3700 17D5  
                                  u2821 02DB                                    u2805 02BA  
                                  u2741 0223                                    u2733 0206  
                                  u2725 01D4                                    u2661 011F  
                                  u2653 0111                                    u2581 006C  
                                  u2485 0C2C                                    u3461 0A23  
                                  u3541 0C8A                                    u3621 05F4  
                                  u3701 17D4                                    u4317 0BE9  
                                  u4237 0B48                                    u3710 090C  
                                  u2910 0354                                    u2742 022A  
                                  u2662 0126                                    u2590 0072  
                                  u3390 07C5                                    u3470 0A2F  
                                  u3550 0C91                                    u3630 060F  
                                  u4407 095F                                    u1935 0981  
                                  u3711 090B                                    u2911 0353  
                                  u2815 02D1                                    u2751 024E  
                                  u2743 0231                                    u2671 0149  
                                  u2663 012D                                    u2591 0071  
                                  u3391 07C4                                    u3471 0A2E  
                                  u3551 0C90                                    u3631 060D  
                                  u4327 0C08                                    u4247 0B6F  
                                  u2920 036E                                    u2840 02F0  
                                  u2760 0276                                    u2752 0255  
                                  u2672 0150                                    u3560 0CB2  
                                  u3640 0610                                    u3720 0AD3  
                                  u3800 0A8E                                    u2921 036D  
                                  u2905 0332                                    u2841 02EF  
                                  u2753 025C                                    u2681 0165  
                                  u2673 0157                                    u3385 07B9  
                                  u3561 0CB1                                    u4337 0E62  
                                  u3721 0AD2                                    u3801 0A8D  
                                  u4257 05A7                                    u2930 038A  
                                  u2850 02F5                                    u2682 016C  
                                  u3490 0A3F                                    u3570 0CE4  
                                  u3650 064D                                    u3730 0ADB  
                                  u3810 0A9A                                    u2931 0389  
                                  u2915 0350                                    u2851 02F4  
                                  u2835 02DF                                    u2771 0282  
                                  u2683 0173                                    u4347 09AC  
                                  u3491 0A3E                                    u3571 0CE3  
                                  u3651 064C                                    u3731 0ADA  
                                  u4267 0F45                                    u3811 0A99  
                                  u4187 03B7                                    _PEIE 005E  
                                  u2860 0309                                    u2780 029E  
                                  u2772 0289                                    u3580 0D07  
                                  u3660 0652                                    u3740 0AE3  
                                  u3820 0AA0                                    u4357 173A  
                                  u2925 036A                                    u2861 0308  
                                  u2773 0290                                    u2765 0271  
                                  u3485 0A33                                    u3661 0651  
                                  u3741 0AE2                                    u4277 0F70  
                                  u3821 0A9F                                    u4197 06C3  
                                  u2870 0310                                    u3910 0ED2  
                                  u3590 1746                                    u3670 0657  
                                  u3750 0AF5                                    u3830 0AB2  
                                  u4367 0979                                    u2871 030F  
                                  u2791 02AA                                    u2695 0175  
                                  u3911 0ED1                                    u3591 1745  
                                  u3575 0CE0                                    u3671 0656  
                                  u3751 0AF4                                    u4287 0F9C  
                                  u3831 0AB1                                    u2880 0316  
                                  u2792 02B1                                    u3840 09B5  
                                  u3680 065C                                    u3760 0AFD  
                                  u4377 0995                                    u2881 0315  
                                  u2793 02B8                                    u2785 0299  
                                  u3905 0EC4                                    u3841 09B4  
                                  u3681 065B                                    u3761 0AFC  
                                  u4297 0FC8                                    u2890 0328  
                                  u3930 0EE2                                    u3850 0E71  
                                  u3690 0683                                    u3770 0B05  
                                  u4387 08E0                                    u2891 0327  
                                  u3931 0EE1                                    u3851 0E70  
                                  u3691 0682                                    u3771 0B04  
                                  u3940 0EE8                                    u3860 0E75  
                                  u3780 0B29                                    u4397 0943  
                                  u3941 0EE7                                    u3925 0ED7  
                                  u3861 0E74                                    u3781 0B28  
                                  u3950 0EEC                                    u3870 0E95  
                                  u3790 0A79                                    u3951 0EEB  
                                  u3871 0E94                                    u3791 0A78  
                                  u3960 0F01                                    u3785 0B25  
                                  u3970 0F11                                    u3890 0EB2  
                                  u3971 0F10                                    u3891 0EB1  
                                  u3980 0F15                                    u3981 0F14  
                                  u3965 0EFC                                    u3885 0EA4  
                                  u3995 09DA                                    _TMR1 000E  
                                  _WPUB 0095                        ??_funcion_buzzer 0073  
                                  abs@a 0022                                    _dbuf 0190  
                                  _main 039B                                    _prec 00A2  
                                  _temp 006A                                    btemp 007E  
                                  start 000E                           _LCD_String_xy 0903  
                                 ??_abs 0024                        __end_of_LCD_Char 099B  
                      __end_of_LCD_Init 0903                           ___fltol@sign1 004C  
                                 ?_main 0070                         __end_of___awdiv 07F9  
                       __end_of___awmod 0A6B                         __end_of___flmul 039B  
                       __end_of___fltol 0C85                         ___awdiv@divisor 0073  
                                 _T1CON 0010                                   i1l232 0DBD  
                       ___awdiv@counter 0020                            vfpfcnvrt@fmt 002B  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _PORTD 0008                                   _TRISB 0086  
                                 _TRISC 0087                                   _TRISD 0088  
                                 _TRISE 0089                                   _flags 006E  
                          ?_keypad_init 0070                                   _fputc 0C85  
                                 _width 00A0                                   _putch 07FB  
                                 pclath 000A                                   status 0003  
                                 wtemp0 007E                         __end_of_sprintf 17B5  
                       __end_of_strncmp 0AC7                          ?_LCD_String_xy 0020  
                       __initialization 0011                            __end_of_main 04B3  
                                ??_main 0055                         _flag_count_3sec 005C  
                       _flag_count_5sec 0058                       __end_of_LCD_Clear 1740  
                   keypad_getkey@letras 0020       __end_of_funcion_monitoreo_eventos 0C0F  
                                ?_fputc 0073                                  _ADRESH 001E  
                                _ADRESL 009E                        ___awdiv@dividend 0075  
                                ?_putch 0070                                  _ANSELH 0189  
          ?_funcion_monitoreo_ambiental 0070                        LCD_String_xy@msg 0021  
                      LCD_String_xy@pos 0020                        LCD_String_xy@row 0022  
                      __end_of_adc_init 1730                        __end_of_adc_read 09D4  
                                i1l3011 0D2B                                  i1l3021 0D4E  
                                i1l3013 0D31                                  i1l3031 0D78  
                                i1l3023 0D5B                                  i1l3015 0D3E  
                                i1l3041 0D99                                  i1l3033 0D7C  
                                i1l3025 0D5F                                  i1l3017 0D42  
                                i1l3009 0D25                                  i1l3051 0DBA  
                                i1l3043 0D9D                                  i1l3035 0D80  
                                i1l3027 0D63                                  i1l3019 0D46  
                                i1l3045 0DA5                                  i1l3037 0D88  
                                i1l3029 0D6B                                  i1l3047 0DB2  
                                i1l3039 0D95                                  i1l3049 0DB6  
                                u321_20 0D3E                                  u321_21 0D3D  
                                u321_25 0D3A                                  u322_20 0D5B  
                                u322_21 0D5A                                  u322_25 0D57  
                                u323_20 0D78                                  u323_21 0D77  
                                u323_25 0D74                                  u324_20 0D95  
                                u324_21 0D94                                  u324_25 0D91  
                                u325_20 0DB2                                  u325_21 0DB1  
                                u325_25 0DAE                                  _OSCCON 008F  
                         vfpfcnvrt@done 002F                                  _TMR1IE 0460  
                                _TMR1IF 0060                                  _TMR1ON 0080  
                                _TRISC3 043B                        __end_of___xxtofl 0F1F  
                            _Timer1_ISR 0D25                            vfprintf@cfmt 0077  
                             ??___awdiv 0077                               ??___awmod 0077  
                             ??___flmul 0032                               ??___fltol 0048  
                                _efecto 006F                        ___awdiv@quotient 0022  
                       ___awmod@divisor 0073                         ___awmod@counter 0020  
                      __end_of_password 0816                                  fputc@c 0073  
                          __pdataCOMMON 007A                                  saved_w 007E  
                   delay_ms_variable@ms 0073                                  putch@c 0070  
                      __end_of_vfprintf 17DA                               ??_sprintf 0040  
                             ??_strncmp 0020  funcion_monitoreo_ambiental@temperatura 0051  
                          ___xxtofl@arg 0026                            ___xxtofl@exp 0025  
                          ___xxtofl@val 0073           ??_funcion_monitoreo_ambiental 004E  
               ??_LCD_Load_Custom_Chars 0020                               ?_LCD_Char 0070  
               __end_of__initialization 0055                               ?_LCD_Init 0070  
                       ??_LCD_String_xy 0078                              ___fltol@f1 0044  
                        __pcstackCOMMON 0070                            __pidataBANK0 07FA  
                          __pidataBANK1 1766                            __pidataBANK3 177A  
                         __end_of_fputc 0D25                           __end_of_putch 07FC  
                          ??_LCD_String 0078                          _OPTION_REGbits 0081  
                      _flag_count_500ms 00A6                        _flag_count_800ms 00A8  
                      _flag_count_10sec 00AC                                 ??_fputc 0020  
                               ??_putch 0073                              __pbssBANK0 0058  
                            __pbssBANK1 00A0                              __pbssBANK3 0190  
                            ??_LCD_Char 0073                              ??_LCD_Init 0076  
                    __end_of_LCD_String 1800                       __end_of__Umul8_16 08D9  
                           ?_Timer1_ISR 0070                              __pmaintext 039B  
                         ?_Timer1_start 0070                              __pintentry 0004  
                             ?_adc_init 0070                               ?_adc_read 0073  
                         _keypad_getkey 0F1F                               ?___xxtofl 0073  
                           secuencia1@i 0020                             secuencia5@i 0020  
                     _delay_ms_variable 0897                      ?_delay_ms_variable 0073  
                            __stringtab 0800                       _funcion_seguridad 04B3  
                            _count_3sec 005E                              _count_5sec 005A  
                    ?_funcion_seguridad 0070                       __end_of_blink_led 0B2A  
                   ??_delay_ms_variable 0075                           LCD_String@msg 0076  
                        ??_Timer1_start 0073                     ??_funcion_seguridad 0033  
                               ___awdiv 0794                                 ___awmod 0A12  
                               ___flmul 0059                                 ___fltol 0C0F  
                             ?_vfprintf 0036                               _ANSELbits 0188  
                            ??_adc_init 0073                              ??_adc_read 0020  
                               __ptext1 06A5                                 __ptext2 0B2A  
                               __ptext3 1704                                 __ptext4 04B3  
                               __ptext5 0A6B                                 __ptext6 0F1F  
                               __ptext7 0AC7                                 __ptext8 0897  
                               __ptext9 0B9C                          ?_keypad_getkey 0070  
             __end_of_delay_ms_variable 08B0                              ??___xxtofl 0020  
                      ___awmod@dividend 0075                               _LCD_Clear 1730  
             __end_of_funcion_seguridad 05B5                                 _sprintf 1792  
                               clrloop0 16F3                                 _strncmp 0A6B  
                  end_of_initialization 0055                              _secuencia1 0B2A  
                            _secuencia5 06A5                                 fputc@fp 0075  
                        LCD_Command@cmd 0075                       __end_of_vfpfcnvrt 06A5  
                      vfpfcnvrt@convarg 0031                              ??_vfprintf 0077  
                             _PORTAbits 0005                               _PORTCbits 0007  
                             _PORTEbits 0009                           ___xxtofl@sign 0024  
                             _TRISAbits 0085                              ?_LCD_Clear 0070  
         funcion_monitoreo_eventos@hall 0052              ?_funcion_monitoreo_eventos 0070  
                           ___flmul@grs 0038           __end_of_LCD_Load_Custom_Chars 0A12  
                         ??_LCD_Command 0073                             vfpfcnvrt@ap 002C  
                           vfpfcnvrt@cp 0030                             vfpfcnvrt@fp 0029  
                       ??_keypad_getkey 0073                           __pidataCOMMON 07F9  
                    keypad_getkey@F1398 00D5                     start_initialization 0011  
                           __end_of_abs 1753                    __end_of_Timer1_start 1720  
                           ?_secuencia1 0070                             ?_secuencia5 0070  
                    keypad_getkey@valor 0030                   __end_of_LCD_String_xy 092F  
                     adc_read@value_adc 0075                            ??_Timer1_ISR 0070  
                           vfprintf@fmt 0038                              init_fetch0 1753  
                             __Umul8_16 08B0                             __pdataBANK0 006F  
                           __pdataBANK1 00D5                             __pdataBANK3 01B0  
                          _estadoactual 0079                     __end_of_LCD_Command 0965  
                             ___flmul@a 002E                               ___flmul@b 002A  
                           __pbssCOMMON 0078                         adc_read@channel 0073  
                             ___latbits 0002                           __pcstackBANK0 0020  
                           ??_LCD_Clear 0076                           ??_keypad_init 0073  
                    __end_of_Timer1_ISR 0DC6     __end_of_funcion_monitoreo_ambiental 0E69  
           _funcion_monitoreo_ambiental 0DC6                          _funcion_buzzer 16FA  
                             _blink_led 0AC7                                ?___awdiv 0073  
                              ?___awmod 0073                                ?___flmul 002A  
                              ?___fltol 0044                              ?__Umul8_16 0073  
                             __pstrings 0800                   blink_led@elapsed_time 0028  
                 LCD_String_xy@location 0023                                ?_sprintf 003A  
                              ?_strncmp 0073                                _LCD_Char 0965  
                     interrupt_function 0004                                _LCD_Init 08D9  
                             _pass_user 00D0                     __end_of_keypad_init 1711  
                             clear_ram0 16F2                  __end_of_funcion_buzzer 1704  
                              _PIR1bits 000C                           _clavecorrecta 0062  
                            ?_blink_led 0020                               _velocidad 00E5  
                           _LCD_Command 092F                               _vfpfcnvrt 05B5  
                LCD_Load_Custom_Chars@i 0077                  LCD_Load_Custom_Chars@j 0076  
                            _ADCON0bits 001F                             __stringbase 080F  
                            _ADCON1bits 009F                             _count_500ms 00A4  
  funcion_monitoreo_ambiental@value_adc 0053                             _count_800ms 00AA  
                           _boton_reset 0064                             _count_10sec 00AE  
                            vfpfcnvrt@c 0035             ??_funcion_monitoreo_eventos 004D  
                       ?_funcion_buzzer 0070                              vfprintf@ap 0039  
                            vfprintf@fp 0036                            _Timer1_start 1711  
                           ??__Umul8_16 0075                              ?_vfpfcnvrt 0029  
                    __end_of__stringtab 0810                                _adc_init 1720  
                              _adc_read 099B                       _StringTemperature 00B0  
                            sprintf@fmt 003B                                ___xxtofl 0E69  
           funcion_monitoreo_eventos@ir 0051                             _customChars 01B0  
                         _sis_bloqueado 0060                                __ptext10 0DC6  
                              __ptext11 1792                                __ptext20 0E69  
                              __ptext12 17B5                                __ptext21 0C0F  
                              __ptext13 05B5                                __ptext30 09D4  
                              __ptext22 0059                                __ptext14 0C85  
                              __ptext31 0965                                __ptext23 08B0  
                              __ptext15 07FB                                __ptext32 08D9  
                              __ptext24 0903                                __ptext16 1740  
                              __ptext33 092F                                __ptext25 17DA  
                              __ptext17 0A12                                __ptext34 0D25  
                              __ptext26 1730                                __ptext18 0794  
                              __ptext27 16FA                                __ptext19 099B  
                              __ptext28 1720                                __ptext29 1711  
                           _keypad_init 1704                            ??_secuencia1 0073  
                          ??_secuencia5 0073                                _intentos 006C  
                              _password 0810                   _LCD_Load_Custom_Chars 09D4  
                     blink_led@duration 0024                       blink_led@off_time 0022  
                           ??_blink_led 0026                            blink_led@led 002A  
             _funcion_monitoreo_eventos 0B9C                                _vfprintf 17B5  
                            _LCD_String 17DA                         secuencia5@i_354 0022  
                 __end_of_keypad_getkey 1000                      __end_of_secuencia1 0B9C  
                    __end_of_secuencia5 0794                         secuencia5@var12 0024  
                              init_ram0 1757                                intlevel1 0000  
                             sprintf@ap 0041                               stringcode 080A  
                      blink_led@on_time 0020                          secuencia1@var3 0024  
                        secuencia1@var4 0026                          secuencia1@var5 0022  
                        secuencia5@var1 002A                          secuencia5@var2 002C  
                        secuencia5@var6 002E                          secuencia5@var7 0028  
                        secuencia5@var8 0026                             ??_vfpfcnvrt 002D  
                __Umul8_16@multiplicand 0073                                sprintf@f 0042  
                              sprintf@s 003A                                strncmp@l 0073  
                              strncmp@n 0075                                strncmp@r 0074  
                              stringdir 080A                                stringtab 0800  
                        keypad_getkey@i 0031                    __Umul8_16@multiplier 0024  
                ?_LCD_Load_Custom_Chars 0070                          _puerta_ventana 0066  
                     __Umul8_16@product 0020  
